/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FakeDoll, FakeDollInterface } from "../FakeDoll";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nb",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600781526020017f66616b65555344000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f665553440000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000281565b508060049080519060200190620000af92919062000281565b505050620000f033620000c7620000f660201b60201c565b600a620000d59190620004cb565b614e20620000e491906200051c565b620000ff60201b60201c565b620006ef565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000171576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016890620005de565b60405180910390fd5b62000185600083836200027760201b60201c565b806002600082825462000199919062000600565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001f0919062000600565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200025791906200066e565b60405180910390a362000273600083836200027c60201b60201c565b5050565b505050565b505050565b8280546200028f90620006ba565b90600052602060002090601f016020900481019282620002b35760008555620002ff565b82601f10620002ce57805160ff1916838001178555620002ff565b82800160010185558215620002ff579182015b82811115620002fe578251825591602001919060010190620002e1565b5b5090506200030e919062000312565b5090565b5b808211156200032d57600081600090555060010162000313565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620003bf5780860481111562000397576200039662000331565b5b6001851615620003a75780820291505b8081029050620003b78562000360565b945062000377565b94509492505050565b600082620003da5760019050620004ad565b81620003ea5760009050620004ad565b81600181146200040357600281146200040e5762000444565b6001915050620004ad565b60ff84111562000423576200042262000331565b5b8360020a9150848211156200043d576200043c62000331565b5b50620004ad565b5060208310610133831016604e8410600b84101617156200047e5782820a90508381111562000478576200047762000331565b5b620004ad565b6200048d84848460016200036d565b92509050818404811115620004a757620004a662000331565b5b81810290505b9392505050565b6000819050919050565b600060ff82169050919050565b6000620004d882620004b4565b9150620004e583620004be565b9250620005147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620003c8565b905092915050565b60006200052982620004b4565b91506200053683620004b4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000572576200057162000331565b5b828202905092915050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005c6601f836200057d565b9150620005d3826200058e565b602082019050919050565b60006020820190508181036000830152620005f981620005b7565b9050919050565b60006200060d82620004b4565b91506200061a83620004b4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000652576200065162000331565b5b828201905092915050565b6200066881620004b4565b82525050565b60006020820190506200068560008301846200065d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006d357607f821691505b602082108103620006e957620006e86200068b565b5b50919050565b61148f80620006ff6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a0712d68146101f1578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610cb1565b60405180910390f35b6100f160048036038101906100ec9190610d6c565b61032f565b6040516100fe9190610dc7565b60405180910390f35b61010f610352565b60405161011c9190610df1565b60405180910390f35b61013f600480360381019061013a9190610e0c565b61035c565b60405161014c9190610dc7565b60405180910390f35b61015d61038b565b60405161016a9190610e7b565b60405180910390f35b61018d60048036038101906101889190610d6c565b610394565b60405161019a9190610dc7565b60405180910390f35b6101bd60048036038101906101b89190610e96565b6103cb565b6040516101ca9190610df1565b60405180910390f35b6101db610413565b6040516101e89190610cb1565b60405180910390f35b61020b60048036038101906102069190610ec3565b6104a5565b005b61022760048036038101906102229190610d6c565b6104b2565b6040516102349190610dc7565b60405180910390f35b61025760048036038101906102529190610d6c565b610529565b6040516102649190610dc7565b60405180910390f35b61028760048036038101906102829190610ef0565b61054c565b6040516102949190610df1565b60405180910390f35b6060600380546102ac90610f5f565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610f5f565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a6105d3565b90506103478185856105db565b600191505092915050565b6000600254905090565b6000806103676105d3565b90506103748582856107a4565b61037f858585610830565b60019150509392505050565b60006012905090565b60008061039f6105d3565b90506103c08185856103b1858961054c565b6103bb9190610fbf565b6105db565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461042290610f5f565b80601f016020809104026020016040519081016040528092919081815260200182805461044e90610f5f565b801561049b5780601f106104705761010080835404028352916020019161049b565b820191906000526020600020905b81548152906001019060200180831161047e57829003601f168201915b5050505050905090565b6104af3382610aaf565b50565b6000806104bd6105d3565b905060006104cb828661054c565b905083811015610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050790611087565b60405180910390fd5b61051d82868684036105db565b60019250505092915050565b6000806105346105d3565b9050610541818585610830565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361064a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064190611119565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b0906111ab565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107979190610df1565b60405180910390a3505050565b60006107b0848461054c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461082a578181101561081c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081390611217565b60405180910390fd5b61082984848484036105db565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610896906112a9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361090e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109059061133b565b60405180910390fd5b610919838383610c0e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561099f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610996906113cd565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a329190610fbf565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a969190610df1565b60405180910390a3610aa9848484610c13565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1590611439565b60405180910390fd5b610b2a60008383610c0e565b8060026000828254610b3c9190610fbf565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b919190610fbf565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bf69190610df1565b60405180910390a3610c0a60008383610c13565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c52578082015181840152602081019050610c37565b83811115610c61576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c8382610c18565b610c8d8185610c23565b9350610c9d818560208601610c34565b610ca681610c67565b840191505092915050565b60006020820190508181036000830152610ccb8184610c78565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0382610cd8565b9050919050565b610d1381610cf8565b8114610d1e57600080fd5b50565b600081359050610d3081610d0a565b92915050565b6000819050919050565b610d4981610d36565b8114610d5457600080fd5b50565b600081359050610d6681610d40565b92915050565b60008060408385031215610d8357610d82610cd3565b5b6000610d9185828601610d21565b9250506020610da285828601610d57565b9150509250929050565b60008115159050919050565b610dc181610dac565b82525050565b6000602082019050610ddc6000830184610db8565b92915050565b610deb81610d36565b82525050565b6000602082019050610e066000830184610de2565b92915050565b600080600060608486031215610e2557610e24610cd3565b5b6000610e3386828701610d21565b9350506020610e4486828701610d21565b9250506040610e5586828701610d57565b9150509250925092565b600060ff82169050919050565b610e7581610e5f565b82525050565b6000602082019050610e906000830184610e6c565b92915050565b600060208284031215610eac57610eab610cd3565b5b6000610eba84828501610d21565b91505092915050565b600060208284031215610ed957610ed8610cd3565b5b6000610ee784828501610d57565b91505092915050565b60008060408385031215610f0757610f06610cd3565b5b6000610f1585828601610d21565b9250506020610f2685828601610d21565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f7757607f821691505b602082108103610f8a57610f89610f30565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fca82610d36565b9150610fd583610d36565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561100a57611009610f90565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611071602583610c23565b915061107c82611015565b604082019050919050565b600060208201905081810360008301526110a081611064565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611103602483610c23565b915061110e826110a7565b604082019050919050565b60006020820190508181036000830152611132816110f6565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611195602283610c23565b91506111a082611139565b604082019050919050565b600060208201905081810360008301526111c481611188565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611201601d83610c23565b915061120c826111cb565b602082019050919050565b60006020820190508181036000830152611230816111f4565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611293602583610c23565b915061129e82611237565b604082019050919050565b600060208201905081810360008301526112c281611286565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611325602383610c23565b9150611330826112c9565b604082019050919050565b6000602082019050818103600083015261135481611318565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006113b7602683610c23565b91506113c28261135b565b604082019050919050565b600060208201905081810360008301526113e6816113aa565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611423601f83610c23565b915061142e826113ed565b602082019050919050565b6000602082019050818103600083015261145281611416565b905091905056fea26469706673582212201986ea514c9af6407a7891a31fbc40b05af59e30690f9cb956ce659cccd3997b64736f6c634300080d0033";

export class FakeDoll__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FakeDoll> {
    return super.deploy(overrides || {}) as Promise<FakeDoll>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FakeDoll {
    return super.attach(address) as FakeDoll;
  }
  connect(signer: Signer): FakeDoll__factory {
    return super.connect(signer) as FakeDoll__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeDollInterface {
    return new utils.Interface(_abi) as FakeDollInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeDoll {
    return new Contract(address, _abi, signerOrProvider) as FakeDoll;
  }
}
