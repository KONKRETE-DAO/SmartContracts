{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_currencyUsed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "Property",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RentDeposit",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingContract",
          "type": "address"
        }
      ],
      "name": "addStakingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currencyUsed",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "propertyToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingContractByProperty",
      "outputs": [
        {
          "internalType": "address",
          "name": "stakingContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161085a38038061085a83398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b6080516107696100f160003960008181609c01528181610292015261032201526107696000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e3578063a8b49fd1146100f4578063f0dc2c2014610146578063f2fde38b1461015957600080fd5b806347e7ef24146100825780635a27d49214610097578063715018a6146100db575b600080fd5b610095610090366004610666565b61016c565b005b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009561039e565b6000546001600160a01b03166100be565b610127610102366004610692565b600160208190526000918252604090912080549101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100d2565b610095610154366004610692565b6103b2565b610095610167366004610692565b61052e565b6101746105a7565b6001600160a01b038083166000908152600160208181526040808420815180830190925280549095168152939091015490830181905290036101ee5760405162461bcd60e51b815260206004820152600e60248201526d15dc9bdb99c810dbdb9d1c9858dd60921b60448201526064015b60405180910390fd5b8051604051636136306f60e11b8152600481018490526000916001600160a01b03169063c26c60de906024016020604051808303816000875af1158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d91906106b6565b61026790846106cf565b825160405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156102db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ff91906106f4565b506040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039791906106f4565b5050505050565b6103a66105a7565b6103b06000610601565b565b6103ba6105a7565b6001600160a01b0381166000036104035760405162461bcd60e51b815260206004820152600d60248201526c57726f6e67204164647265737360981b60448201526064016101e5565b60008190506040518060400160405280836001600160a01b03168152602001826001600160a01b0316635c92af726040518163ffffffff1660e01b8152600401602060405180830381865afa158015610460573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048491906106b6565b81525060016000836001600160a01b031663c117c0566040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190610716565b6001600160a01b0390811682526020808301939093526040909101600020835181546001600160a01b03191692169190911781559101516001909101555050565b6105366105a7565b6001600160a01b03811661059b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e5565b6105a481610601565b50565b6000546001600160a01b031633146103b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146105a457600080fd5b6000806040838503121561067957600080fd5b823561068481610651565b946020939093013593505050565b6000602082840312156106a457600080fd5b81356106af81610651565b9392505050565b6000602082840312156106c857600080fd5b5051919050565b6000828210156106ef57634e487b7160e01b600052601160045260246000fd5b500390565b60006020828403121561070657600080fd5b815180151581146106af57600080fd5b60006020828403121561072857600080fd5b81516106af8161065156fea2646970667358221220bcb9585e36d1bdcb5f27ca3ff6614a20bc7f83f055c548c19926baa1655d748164736f6c634300080e0033",
    "sourceMap": "245:1146:3:-:0;;;443:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:2;921:18:0;:32::i;:::-;-1:-1:-1;;;;;483:28:3;;;245:1146;;2418:187:0;2491:16;2510:6;;-1:-1:-1;;;;;2526:17:0;;;-1:-1:-1;;;;;;2526:17:0;;;;;;2558:40;;2510:6;;;;;;;2558:40;;2491:16;2558:40;2481:124;2418:187;:::o;14:304:6:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:6;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:6:o;:::-;245:1146:3;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e3578063a8b49fd1146100f4578063f0dc2c2014610146578063f2fde38b1461015957600080fd5b806347e7ef24146100825780635a27d49214610097578063715018a6146100db575b600080fd5b610095610090366004610666565b61016c565b005b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009561039e565b6000546001600160a01b03166100be565b610127610102366004610692565b600160208190526000918252604090912080549101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100d2565b610095610154366004610692565b6103b2565b610095610167366004610692565b61052e565b6101746105a7565b6001600160a01b038083166000908152600160208181526040808420815180830190925280549095168152939091015490830181905290036101ee5760405162461bcd60e51b815260206004820152600e60248201526d15dc9bdb99c810dbdb9d1c9858dd60921b60448201526064015b60405180910390fd5b8051604051636136306f60e11b8152600481018490526000916001600160a01b03169063c26c60de906024016020604051808303816000875af1158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d91906106b6565b61026790846106cf565b825160405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529192507f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156102db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ff91906106f4565b506040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039791906106f4565b5050505050565b6103a66105a7565b6103b06000610601565b565b6103ba6105a7565b6001600160a01b0381166000036104035760405162461bcd60e51b815260206004820152600d60248201526c57726f6e67204164647265737360981b60448201526064016101e5565b60008190506040518060400160405280836001600160a01b03168152602001826001600160a01b0316635c92af726040518163ffffffff1660e01b8152600401602060405180830381865afa158015610460573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048491906106b6565b81525060016000836001600160a01b031663c117c0566040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190610716565b6001600160a01b0390811682526020808301939093526040909101600020835181546001600160a01b03191692169190911781559101516001909101555050565b6105366105a7565b6001600160a01b03811661059b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e5565b6105a481610601565b50565b6000546001600160a01b031633146103b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146105a457600080fd5b6000806040838503121561067957600080fd5b823561068481610651565b946020939093013593505050565b6000602082840312156106a457600080fd5b81356106af81610651565b9392505050565b6000602082840312156106c857600080fd5b5051919050565b6000828210156106ef57634e487b7160e01b600052601160045260246000fd5b500390565b60006020828403121561070657600080fd5b815180151581146106af57600080fd5b60006020828403121561072857600080fd5b81516106af8161065156fea2646970667358221220bcb9585e36d1bdcb5f27ca3ff6614a20bc7f83f055c548c19926baa1655d748164736f6c634300080e0033",
    "sourceMap": "245:1146:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:482;;;;;;:::i;:::-;;:::i;:::-;;402:36;;;;;;;;-1:-1:-1;;;;;648:32:6;;;630:51;;618:2;603:18;402:36:3;;;;;;;;1816:101:0;;;:::i;1186:85::-;1232:7;1258:6;-1:-1:-1;;;;;1258:6:0;1186:85;;278:65:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;278:65:3;;;;;;;;;;-1:-1:-1;;;;;1344:32:6;;;1326:51;;1408:2;1393:18;;1386:34;;;;1299:18;278:65:3;1152:274:6;520:383:3;;;;;;:::i;:::-;;:::i;2066:198:0:-;;;;;;:::i;:::-;;:::i;907:482:3:-;1079:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1025:52:3;;::::1;988:34;1025:52:::0;;;:25:::1;:52;::::0;;;;;;;988:89;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;;1091:29;;1083:56:::1;;;::::0;-1:-1:-1;;;1083:56:3;;1633:2:6;1083:56:3::1;::::0;::::1;1615:21:6::0;1672:2;1652:18;;;1645:30;-1:-1:-1;;;1691:18:6;;;1684:44;1745:18;;1083:56:3::1;;;;;;;;;1187:30:::0;;1178:72:::1;::::0;-1:-1:-1;;;1178:72:3;;::::1;::::0;::::1;1920:25:6::0;;;1146:14:3::1;::::0;-1:-1:-1;;;;;1178:64:3::1;::::0;::::1;::::0;1893:18:6;;1178:72:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1163:87;::::0;:6;:87:::1;:::i;:::-;1278:30:::0;;1257:60:::1;::::0;-1:-1:-1;;;1257:60:3;;-1:-1:-1;;;;;1344:32:6;;;1257:60:3::1;::::0;::::1;1326:51:6::0;1393:18;;;1386:34;;;1146:104:3;;-1:-1:-1;1257:12:3::1;:20;::::0;::::1;::::0;1299:18:6;;1257:60:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1324:60:3::1;::::0;-1:-1:-1;;;1324:60:3;;1350:10:::1;1324:60;::::0;::::1;2894:34:6::0;1370:4:3::1;2944:18:6::0;;;2937:43;2996:18;;;2989:34;;;1324:12:3::1;-1:-1:-1::0;;;;;1324:25:3::1;::::0;::::1;::::0;2829:18:6;;1324:60:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;982:407;;907:482:::0;;:::o;1816:101:0:-;1079:13;:11;:13::i;:::-;1880:30:::1;1907:1;1880:18;:30::i;:::-;1816:101::o:0;520:383:3:-;1079:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;614:62:3;::::1;634:42;614:62:::0;599:106:::1;;;::::0;-1:-1:-1;;;599:106:3;;3236:2:6;599:106:3::1;::::0;::::1;3218:21:6::0;3275:2;3255:18;;;3248:30;-1:-1:-1;;;3294:18:6;;;3287:43;3347:18;;599:106:3::1;3034:337:6::0;599:106:3::1;711:15;738:16;711:44;;814:84;;;;;;;;834:16;-1:-1:-1::0;;;;;814:84:3::1;;;;;858:6;-1:-1:-1::0;;;;;858:32:3::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;814:84;;::::0;761:25:::1;:50;787:6;-1:-1:-1::0;;;;;787:21:3::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;761:50:3;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;761:50:3;:137;;;;-1:-1:-1;;;;;;761:137:3::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;761:137:3;;::::1;::::0;-1:-1:-1;;520:383:3:o;2066:198:0:-;1079:13;:11;:13::i;:::-;-1:-1:-1;;;;;2154:22:0;::::1;2146:73;;;::::0;-1:-1:-1;;;2146:73:0;;3834:2:6;2146:73:0::1;::::0;::::1;3816:21:6::0;3873:2;3853:18;;;3846:30;3912:34;3892:18;;;3885:62;-1:-1:-1;;;3963:18:6;;;3956:36;4009:19;;2146:73:0::1;3632:402:6::0;2146:73:0::1;2229:28;2248:8;2229:18;:28::i;:::-;2066:198:::0;:::o;1344:130::-;1232:7;1258:6;-1:-1:-1;;;;;1258:6:0;719:10:2;1407:23:0;1399:68;;;;-1:-1:-1;;;1399:68:0;;4241:2:6;1399:68:0;;;4223:21:6;;;4260:18;;;4253:30;4319:34;4299:18;;;4292:62;4371:18;;1399:68:0;4039:356:6;2418:187:0;2491:16;2510:6;;-1:-1:-1;;;;;2526:17:0;;;-1:-1:-1;;;;;;2526:17:0;;;;;;2558:40;;2510:6;;;;;;;2558:40;;2491:16;2558:40;2481:124;2418:187;:::o;14:131:6:-;-1:-1:-1;;;;;89:31:6;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:6:o;900:247::-;959:6;1012:2;1000:9;991:7;987:23;983:32;980:52;;;1028:1;1025;1018:12;980:52;1067:9;1054:23;1086:31;1111:5;1086:31;:::i;:::-;1136:5;900:247;-1:-1:-1;;;900:247:6:o;1956:184::-;2026:6;2079:2;2067:9;2058:7;2054:23;2050:32;2047:52;;;2095:1;2092;2085:12;2047:52;-1:-1:-1;2118:16:6;;1956:184;-1:-1:-1;1956:184:6:o;2145:222::-;2185:4;2213:1;2210;2207:8;2204:131;;;2257:10;2252:3;2248:20;2245:1;2238:31;2292:4;2289:1;2282:15;2320:4;2317:1;2310:15;2204:131;-1:-1:-1;2352:9:6;;2145:222::o;2372:277::-;2439:6;2492:2;2480:9;2471:7;2467:23;2463:32;2460:52;;;2508:1;2505;2498:12;2460:52;2540:9;2534:16;2593:5;2586:13;2579:21;2572:5;2569:32;2559:60;;2615:1;2612;2605:12;3376:251;3446:6;3499:2;3487:9;3478:7;3474:23;3470:32;3467:52;;;3515:1;3512;3505:12;3467:52;3547:9;3541:16;3566:31;3591:5;3566:31;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "234": [
        {
          "start": 156,
          "length": 32
        },
        {
          "start": 658,
          "length": 32
        },
        {
          "start": 802,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addStakingContract(address)": "f0dc2c20",
    "currencyUsed()": "5a27d492",
    "deposit(address,uint256)": "47e7ef24",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "stakingContractByProperty(address)": "a8b49fd1",
    "transferOwnership(address)": "f2fde38b"
  },
  "ast": {
    "absolutePath": "src/rentHouse/Treasury.sol",
    "id": 339,
    "exportedSymbols": {
      "Context": [
        212
      ],
      "ContractInfo": [
        398
      ],
      "IERC20": [
        190
      ],
      "IStaking": [
        391
      ],
      "ITreasury": [
        411
      ],
      "Ownable": [
        112
      ],
      "Treasury": [
        338
      ],
      "stakeInfo": [
        352
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:1355:3",
    "nodes": [
      {
        "id": 214,
        "nodeType": "PragmaDirective",
        "src": "37:24:3",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 215,
        "nodeType": "ImportDirective",
        "src": "63:56:3",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 339,
        "sourceUnit": 191,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 216,
        "nodeType": "ImportDirective",
        "src": "120:52:3",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 339,
        "sourceUnit": 113,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 217,
        "nodeType": "ImportDirective",
        "src": "173:34:3",
        "absolutePath": "src/rentHouse/interface/IStaking.sol",
        "file": "./interface/IStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 339,
        "sourceUnit": 392,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 218,
        "nodeType": "ImportDirective",
        "src": "208:35:3",
        "absolutePath": "src/rentHouse/interface/ITreasury.sol",
        "file": "./interface/ITreasury.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 339,
        "sourceUnit": 412,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 338,
        "nodeType": "ContractDefinition",
        "src": "245:1146:3",
        "nodes": [
          {
            "id": 225,
            "nodeType": "VariableDeclaration",
            "src": "278:65:3",
            "constant": false,
            "functionSelector": "a8b49fd1",
            "mutability": "mutable",
            "name": "stakingContractByProperty",
            "nameLocation": "318:25:3",
            "scope": 338,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ContractInfo_$398_storage_$",
              "typeString": "mapping(address => struct ContractInfo)"
            },
            "typeName": {
              "id": 224,
              "keyType": {
                "id": 221,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "286:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "278:32:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ContractInfo_$398_storage_$",
                "typeString": "mapping(address => struct ContractInfo)"
              },
              "valueType": {
                "id": 223,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 222,
                  "name": "ContractInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 398,
                  "src": "297:12:3"
                },
                "referencedDeclaration": 398,
                "src": "297:12:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ContractInfo_$398_storage_ptr",
                  "typeString": "struct ContractInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 231,
            "nodeType": "EventDefinition",
            "src": "347:52:3",
            "anonymous": false,
            "eventSelector": "8a552a79637e03b011c4fedc3fcb402e871c012f0a417f6c105c9adef668f0b7",
            "name": "RentDeposit",
            "nameLocation": "353:11:3",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Property",
                  "nameLocation": "373:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "365:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "391:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "383:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:34:3"
            }
          },
          {
            "id": 234,
            "nodeType": "VariableDeclaration",
            "src": "402:36:3",
            "constant": false,
            "functionSelector": "5a27d492",
            "mutability": "immutable",
            "name": "currencyUsed",
            "nameLocation": "426:12:3",
            "scope": 338,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$190",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 233,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 232,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 190,
                "src": "402:6:3"
              },
              "referencedDeclaration": 190,
              "src": "402:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$190",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 245,
            "nodeType": "FunctionDefinition",
            "src": "443:73:3",
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "477:39:3",
              "statements": [
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 240,
                      "name": "currencyUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "483:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$190",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 241,
                      "name": "_currencyUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "498:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$190",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "483:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$190",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "483:28:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "_currencyUsed",
                  "nameLocation": "462:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "455:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$190",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 236,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 235,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 190,
                      "src": "455:6:3"
                    },
                    "referencedDeclaration": 190,
                    "src": "455:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$190",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:22:3"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "477:0:3"
            },
            "scope": 338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 280,
            "nodeType": "FunctionDefinition",
            "src": "520:383:3",
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "593:310:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 253,
                          "name": "_stakingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "614:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "634:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        },
                        "src": "614:62:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672041646472657373",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "684:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aae2fa9fc844ccb5110123a21b67f8beff2fad8f5b9c7d5c83999c8ab02e6210",
                          "typeString": "literal_string \"Wrong Address\""
                        },
                        "value": "Wrong Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aae2fa9fc844ccb5110123a21b67f8beff2fad8f5b9c7d5c83999c8ab02e6210",
                          "typeString": "literal_string \"Wrong Address\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "599:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "599:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "599:106:3"
                },
                {
                  "assignments": [
                    261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 261,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "720:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "711:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaking_$391",
                        "typeString": "contract IStaking"
                      },
                      "typeName": {
                        "id": 260,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 259,
                          "name": "IStaking",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 391,
                          "src": "711:8:3"
                        },
                        "referencedDeclaration": 391,
                        "src": "711:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStaking_$391",
                          "typeString": "contract IStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 265,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 263,
                        "name": "_stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "738:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 262,
                      "name": "IStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "729:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStaking_$391_$",
                        "typeString": "type(contract IStaking)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaking_$391",
                      "typeString": "contract IStaking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "711:44:3"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 266,
                        "name": "stakingContractByProperty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "761:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ContractInfo_$398_storage_$",
                          "typeString": "mapping(address => struct ContractInfo storage ref)"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 267,
                            "name": "buffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "787:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStaking_$391",
                              "typeString": "contract IStaking"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TOKEN_TO_STAKE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 357,
                          "src": "787:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "787:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "761:50:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContractInfo_$398_storage",
                        "typeString": "struct ContractInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 272,
                          "name": "_stakingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "834:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 273,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "858:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStaking_$391",
                                "typeString": "contract IStaking"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "TOKEN_TO_STAKE_MAX_SUPPLY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 362,
                            "src": "858:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "858:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 271,
                        "name": "ContractInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "814:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ContractInfo_$398_storage_ptr_$",
                          "typeString": "type(struct ContractInfo storage pointer)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "814:84:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContractInfo_$398_memory_ptr",
                        "typeString": "struct ContractInfo memory"
                      }
                    },
                    "src": "761:137:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ContractInfo_$398_storage",
                      "typeString": "struct ContractInfo storage ref"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "761:137:3"
                }
              ]
            },
            "functionSelector": "f0dc2c20",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 249,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "583:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "583:9:3"
              }
            ],
            "name": "addStakingContract",
            "nameLocation": "529:18:3",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_stakingContract",
                  "nameLocation": "556:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "548:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:26:3"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:0:3"
            },
            "scope": 338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 337,
            "nodeType": "FunctionDefinition",
            "src": "907:482:3",
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "982:407:3",
              "statements": [
                {
                  "assignments": [
                    291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 291,
                      "mutability": "mutable",
                      "name": "bufferContract",
                      "nameLocation": "1008:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 336,
                      "src": "988:34:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContractInfo_$398_memory_ptr",
                        "typeString": "struct ContractInfo"
                      },
                      "typeName": {
                        "id": 290,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 289,
                          "name": "ContractInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 398,
                          "src": "988:12:3"
                        },
                        "referencedDeclaration": 398,
                        "src": "988:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractInfo_$398_storage_ptr",
                          "typeString": "struct ContractInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 295,
                  "initialValue": {
                    "baseExpression": {
                      "id": 292,
                      "name": "stakingContractByProperty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "1025:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ContractInfo_$398_storage_$",
                        "typeString": "mapping(address => struct ContractInfo storage ref)"
                      }
                    },
                    "id": 294,
                    "indexExpression": {
                      "id": 293,
                      "name": "propertyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "1058:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1025:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ContractInfo_$398_storage",
                      "typeString": "struct ContractInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "988:89:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 297,
                            "name": "bufferContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "1091:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractInfo_$398_memory_ptr",
                              "typeString": "struct ContractInfo memory"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 397,
                          "src": "1091:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1119:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1091:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720436f6e7472616374",
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1122:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee441a9e02186c94e68c0a8f1da2c999c26c68758beb6d221c75314e6923dffc",
                          "typeString": "literal_string \"Wrong Contract\""
                        },
                        "value": "Wrong Contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee441a9e02186c94e68c0a8f1da2c999c26c68758beb6d221c75314e6923dffc",
                          "typeString": "literal_string \"Wrong Contract\""
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1083:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:56:3"
                },
                {
                  "assignments": [
                    305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "toSend",
                      "nameLocation": "1154:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 336,
                      "src": "1146:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1146:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 306,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "1163:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 312,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "1243:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 308,
                                "name": "bufferContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "1187:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ContractInfo_$398_memory_ptr",
                                  "typeString": "struct ContractInfo memory"
                                }
                              },
                              "id": 309,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "stakingContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 395,
                              "src": "1187:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 307,
                            "name": "IStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "1178:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IStaking_$391_$",
                              "typeString": "type(contract IStaking)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1178:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStaking_$391",
                            "typeString": "contract IStaking"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "setTotalClaimableReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 387,
                        "src": "1178:64:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) external returns (uint256)"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1178:72:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1163:87:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1146:104:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 319,
                          "name": "bufferContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "1278:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractInfo_$398_memory_ptr",
                            "typeString": "struct ContractInfo memory"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakingContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 395,
                        "src": "1278:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 321,
                        "name": "toSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "1310:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 316,
                        "name": "currencyUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "1257:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$190",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 177,
                      "src": "1257:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:60:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:60:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 327,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1350:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1350:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 331,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1370:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Treasury_$338",
                              "typeString": "contract Treasury"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Treasury_$338",
                              "typeString": "contract Treasury"
                            }
                          ],
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1362:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1362:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1362:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 333,
                        "name": "toSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "1377:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 324,
                        "name": "currencyUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "1324:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$190",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 189,
                      "src": "1324:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:60:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:60:3"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 286,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "972:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "972:9:3"
              }
            ],
            "name": "deposit",
            "nameLocation": "916:7:3",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "propertyToken",
                  "nameLocation": "932:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "924:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "955:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "947:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "923:39:3"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:0:3"
            },
            "scope": 338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 219,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "266:7:3"
            },
            "id": 220,
            "nodeType": "InheritanceSpecifier",
            "src": "266:7:3"
          }
        ],
        "canonicalName": "Treasury",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          338,
          112,
          212
        ],
        "name": "Treasury",
        "nameLocation": "254:8:3",
        "scope": 339,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 3
}