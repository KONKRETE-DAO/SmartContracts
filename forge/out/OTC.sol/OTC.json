{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currencyUsed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeAddress",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "feex10",
          "type": "uint16"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "propositionAccepted",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "index",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "date",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "BuyOrderAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "propositionAccepted",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "index",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "date",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "BuyOrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "propositionAccepted",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "index",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "date",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "BuyOrderInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "propositionAccepted",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "index",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "date",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "SellOrderAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "propositionAccepted",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "index",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "date",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "SellOrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "propositionAccepted",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "index",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "date",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "SellOrderInitiated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "index",
          "type": "uint64"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "buyOrderByToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "open",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "propositionAccepted",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "index",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "date",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "TrueForSellFalseForBuy",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "index",
          "type": "uint64"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currenciesUsed",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "currencyInfosByAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exist",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "feeX10",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "feePot",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "currencyWanted",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sellPrice",
          "type": "uint256"
        }
      ],
      "name": "initBuyOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "currencyWanted",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sellPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "initSellOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "index",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "sell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sellOrderByToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "open",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "propositionAccepted",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "index",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "date",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCurrency",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "feeX10",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "feePot",
          "type": "uint256"
        }
      ],
      "name": "setCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "feePercentx10",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFeeAddress",
          "type": "address"
        }
      ],
      "name": "setFeeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenList",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "withdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
<<<<<<< HEAD
    "object": "0x60806040523480156200001157600080fd5b506040516200292138038062002921833981016040819052620000349162000186565b6200003f3362000119565b600180556103e861ffff821611156200005757600080fd5b6006805460018181019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b039586166001600160a01b0319918216811790925560078054959096169416939093179093556040805160608101825284815261ffff928316602082810191825260008385018181529681526004909152929092209051815492519093166101000262ffff00199315159390931662ffffff19909216919091179190911781559051910155620001da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018157600080fd5b919050565b6000806000606084860312156200019c57600080fd5b620001a78462000169565b9250620001b76020850162000169565b9150604084015161ffff81168114620001cf57600080fd5b809150509250925092565b61273780620001ea6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639a83aa8b116100ad578063d59a83bb11610071578063d59a83bb146102b5578063dc48dfc0146102c8578063de8645e61461031e578063f110fb5614610331578063f2fde38b1461034457600080fd5b80639a83aa8b146102565780639ead722214610269578063d28c3a9b1461027c578063d38d0b451461028f578063d48bfca7146102a257600080fd5b80634303d9d9116100f45780634303d9d9146101895780636bdf6b3914610203578063715018a6146102165780638705fcd41461021e5780638da5cb5b1461023157600080fd5b806308b4e2a61461012657806319f373611461013b5780631ac3ddeb1461016357806330f738be14610176575b600080fd5b6101396101343660046121ae565b610357565b005b61014e6101493660046121f5565b610904565b60405190151581526020015b60405180910390f35b6101396101713660046121f5565b6109c3565b610139610184366004612224565b610adc565b61019c61019736600461225b565b610b5b565b604080519a15158b5298151560208b01526001600160401b03978816988a01989098529490951660608801526001600160a01b03928316608088015290821660a087015260c086015260e0850192909252610100840152166101208201526101400161015a565b610139610211366004612298565b610be8565b61013961108b565b61013961022c3660046121f5565b61109f565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161015a565b610139610264366004612310565b6110c9565b61023e610277366004612345565b611579565b61013961028a36600461235e565b6115a3565b61013961029d3660046123bf565b6119c0565b6101396102b03660046121f5565b611aa0565b61019c6102c336600461225b565b611b46565b6102fe6102d63660046121f5565b6004602052600090815260409020805460019091015460ff821691610100900461ffff169083565b60408051931515845261ffff90921660208401529082015260600161015a565b61013961032c3660046123fd565b611b62565b61023e61033f366004612345565b612006565b6101396103523660046121f5565b612016565b6002600154036103825760405162461bcd60e51b815260040161037990612443565b60405180910390fd5b600260015561039083610904565b6103ac5760405162461bcd60e51b81526004016103799061247a565b6000826103f9576001600160a01b038416600090815260036020526040902080546001600160401b0384169081106103e6576103e66124a2565b906000526020600020906007020161043b565b6001600160a01b038416600090815260026020526040902080546001600160401b03841690811061042c5761042c6124a2565b90600052602060002090600702015b6040805161014081018252825460ff80821615158352610100808304909116151560208401526001600160401b03620100008304811694840194909452600160501b909104909216606082015260018301546001600160a01b03908116608083018190526002850154821660a0840152600385015460c0840152600485015460e08401526005850154938301939093526006909301549092166101208301529091503314806104f6575060a08101516001600160a01b031633145b6105385760405162461bcd60e51b815260206004820152601360248201527210d85b98d95b081d5b985d5d1a1bdc9a5e9959606a1b6044820152606401610379565b60008152821561071d5761010081015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b0385169063a9059cbb906044016020604051808303816000875af1158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906124b8565b506001600160a01b038416600090815260026020526040902080548291906001600160401b0385169081106105f1576105f16124a2565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517f9b3589e58cfaae811e95372b148d4048358e808d0c0af452b23f9d4620f8a23e906107109083906124d5565b60405180910390a16108fa565b61012081015160e082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906124b8565b506001600160a01b038416600090815260036020526040902080548291906001600160401b0385169081106107d2576107d26124a2565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517fb95b9053e8e235c5fb04aa72707d183a8eba7f5f7847a660f916fdf159927cc8906108f19083906124d5565b60405180910390a15b5050600180555050565b600080600580548060200260200160405190810160405280929190818152602001828054801561095d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161093f575b505083519394506000925050505b818110156109b857846001600160a01b031683828151811061098f5761098f6124a2565b60200260200101516001600160a01b0316036109b057506001949350505050565b60010161096b565b506000949350505050565b6109cb61208f565b6001600160a01b038181166000818152600460208181526040928390208351606081018552815460ff811615158252610100900461ffff169281019290925260010154818401819052600754935163a9059cbb60e01b81529390951691830191909152602482019390935263a9059cbb906044016020604051808303816000875af1158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906124b8565b50600060408083018281526001600160a01b03909416825260046020908152912082518154929093015161ffff166101000262ffff00199315159390931662ffffff19909216919091179190911781559051600190910155565b610ae461208f565b6101f48261ffff1610610b285760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40a8dede40d0d2ced60a31b6044820152606401610379565b6001600160a01b03166000908152600460205260409020805461ffff9092166101000262ffff0019909216919091179055565b60026020528160005260406000208181548110610b7757600080fd5b6000918252602090912060079091020180546001820154600283015460038401546004850154600586015460069096015460ff808716995061010087041697506001600160401b03620100008704811697600160501b90970416956001600160a01b0395861695948516949091168a565b600260015403610c0a5760405162461bcd60e51b815260040161037990612443565b60026001556103e88511610c545760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b610c5d88610904565b610ca05760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0387166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252610d325760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6001600160a01b0389166000818152600260205260409081902054905162aa3a7160e11b815290919063015474e290610d7b90339030908d908c908c908c908c906004016125a3565b600060405180830381600087803b158015610d9557600080fd5b505af1158015610da9573d6000803e3d6000fd5b505050506000610dbd8884602001516120e9565b9050600260008c6001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507f3b24c5db8e1f8aaec17cd20d4e148ad8ee3909fd0c9a1f6a86b1e900a49ef6b7604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b031681525060405161107291906124d5565b60405180910390a1505060018055505050505050505050565b61109361208f565b61109d600061211f565b565b6110a761208f565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036110eb5760405162461bcd60e51b815260040161037990612443565b60026001556110f982610904565b6111155760405162461bcd60e51b81526004016103799061247a565b6001600160a01b038216600090815260026020526040812080546001600160401b038416908110611148576111486124a2565b600091825260209182902060408051610140810182526007909302909101805460ff80821615158086526101008084049092161515968601969096526001600160401b03620100008304811694860194909452600160501b909104909216606084015260018101546001600160a01b0390811660808501526002820154811660a0850152600382015460c0850152600482015460e0850152600582015492840192909252600601541661012082015291506112335760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b3360a08201819052600160208301526000825261012082015160e08301516040516323b872dd60e01b8152600481019390935230602484015260448301526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c791906124b8565b508061012001516001600160a01b031663a9059cbb82608001518360c001518460e001516112f591906125fa565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136491906124b8565b5060c08101516101208201516001600160a01b03166000908152600460205260408120600101805490919061139a908490612611565b90915550506001600160a01b038316600090815260026020526040902080548291906001600160401b0385169081106113d5576113d56124a2565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e086015160048085019190915585870151600585015561012090960151600690930180549091169282169290921790915591840151905163a9059cbb60e01b81523393810193909352602483015284169063a9059cbb906044016020604051808303816000875af1158015611514573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153891906124b8565b507fb6432e18a59c31eafbe7fea705a495b38ea4992c69bdc678262b38ddc31c2d218160405161156891906124d5565b60405180910390a150506001805550565b6005818154811061158957600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600154036115c55760405162461bcd60e51b815260040161037990612443565b60026001556115d386610904565b6115ef5760405162461bcd60e51b81526004016103799061247a565b6001600160a01b038616600090815260036020526040812080546001600160401b038816908110611622576116226124a2565b60009182526020909120600790910201805490915060ff166116745760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b60028101546001600160a01b03166116be5760405162461bcd60e51b815260206004820152600d60248201526c57726f6e67206164647265737360981b6044820152606401610379565b6001810180546001600160a01b03191633908117909155815461ffff19166101001782556002820154600583015460405162aa3a7160e11b81526001600160a01b038b81169463015474e2946117239491939216918b908b908b908b906004016125a3565b600060405180830381600087803b15801561173d57600080fd5b505af1158015611751573d6000803e3d6000fd5b5050506006820154600383015460048401546001600160a01b03909216925063a9059cbb913391611781916125fa565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156117cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f091906124b8565b50600381015460068201546001600160a01b031660009081526004602052604081206001018054909190611825908490612611565b90915550506001600160a01b038716600090815260036020526040902080548291906001600160401b038916908110611860576118606124a2565b600091825260209091208254600790920201805460ff928316151560ff19821681178355845461010090819004909416151590930261ff001990931661ffff19909116179190911780825582546001600160401b036201000091829004811690910269ffffffffffffffff0000198316811784558454600160501b9081900490921690910267ffffffffffffffff60501b1990911662010000600160901b03199092169190911717815560018083015490820180546001600160a01b03199081166001600160a01b03938416179091556002808501549084018054831691841691909117905560038085015490840155600480850154908401556005808501549084015560069384015493909201805490921692169190911790556040517f127e23dc5aa74346dfbee84f2e6e25abf5f06e34ad3beea66e7363e53ff51359906119ab908390612629565b60405180910390a15050600180555050505050565b6119c861208f565b6001600160a01b03831660009081526004602052604090205460ff16611a3457600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0385161790555b60408051606081018252600180825261ffff94851660208084019182528385019586526001600160a01b0397909716600090815260049097529290952090518154925162ffffff1990931690151562ffff00191617610100929094169190910292909217825551910155565b611aa861208f565b611ab181610904565b15611af45760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610379565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b60036020528160005260406000208181548110610b7757600080fd5b600260015403611b845760405162461bcd60e51b815260040161037990612443565b60026001556103e88111611bce5760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b611bd784610904565b611c1a5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0383166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252611cac5760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015611cff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2391906124b8565b506001600160a01b038516600090815260036020908152604082205490830151909190611d519085906120e9565b905060036000886001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507fa23adb6634e58bf746cbb87e2f83ff7c3ba3201ab3f5f6cd04188a2acda98450604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b03168152506040516119ab91906124d5565b6006818154811061158957600080fd5b61201e61208f565b6001600160a01b0381166120835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610379565b61208c8161211f565b50565b6000546001600160a01b0316331461109d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b6000808261ffff16116120fd576000612118565b6103e861210e61ffff8416856126c0565b61211891906126df565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461208c57600080fd5b801515811461208c57600080fd5b80356001600160401b03811681146121a957600080fd5b919050565b6000806000606084860312156121c357600080fd5b83356121ce8161216f565b925060208401356121de81612184565b91506121ec60408501612192565b90509250925092565b60006020828403121561220757600080fd5b81356121188161216f565b803561ffff811681146121a957600080fd5b6000806040838503121561223757600080fd5b61224083612212565b915060208301356122508161216f565b809150509250929050565b6000806040838503121561226e57600080fd5b82356122798161216f565b946020939093013593505050565b803560ff811681146121a957600080fd5b600080600080600080600080610100898b0312156122b557600080fd5b88356122c08161216f565b975060208901356122d08161216f565b96506040890135955060608901359450608089013593506122f360a08a01612287565b925060c0890135915060e089013590509295985092959890939650565b6000806040838503121561232357600080fd5b823561232e8161216f565b915061233c60208401612192565b90509250929050565b60006020828403121561235757600080fd5b5035919050565b60008060008060008060c0878903121561237757600080fd5b86356123828161216f565b955061239060208801612192565b9450604087013593506123a560608801612287565b92506080870135915060a087013590509295509295509295565b6000806000606084860312156123d457600080fd5b83356123df8161216f565b92506123ed60208501612212565b9150604084013590509250925092565b6000806000806080858703121561241357600080fd5b843561241e8161216f565b9350602085013561242e8161216f565b93969395505050506040820135916060013590565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d151bdad95b88155b9b1a5cdd195960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124ca57600080fd5b815161211881612184565b815115158152610140810160208301516124f3602084018215159052565b50604083015161250e60408401826001600160401b03169052565b50606083015161252960608401826001600160401b03169052565b50608083015161254460808401826001600160a01b03169052565b5060a083015161255f60a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e08301526101008084015181840152506101208084015161259b828501826001600160a01b03169052565b505092915050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b634e487b7160e01b600052601160045260246000fd5b60008282101561260c5761260c6125e4565b500390565b60008219821115612624576126246125e4565b500190565b815460ff81161515825261014082019061264d6020840160ff8360081c1615159052565b6001600160401b03601082901c8116604085015260509190911c16606083015260018301546001600160a01b0390811660808401526002840154811660a0840152600384015460c0840152600484015460e084015260058401546101008401526006909301549092166101209091015290565b60008160001904831182151516156126da576126da6125e4565b500290565b6000826126fc57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f64830d4a899d892d4d1cad4c24c30c29fe0bf798ddd8a23bf148eac724db7c164736f6c634300080e0033",
    "sourceMap": "309:7237:19:-:0;;;856:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:6;719:10:13;921:18:6;:32::i;:::-;1701:1:7;1806:22;;967:4:19;957:14;;;;;949:23;;;;;;978:14;:42;;;;;;;;;;;;;-1:-1:-1;;;;;978:42:19;;;-1:-1:-1;;;;;;978:42:19;;;;;;;;1026:10;:24;;;;;;;;;;;;;;;1096:30;;;;;;;;;;;;;;;978:42;1096:30;;;;;;-1:-1:-1;1096:30:19;;;;;;1056:37;;;:22;:37;;;;;;;:70;;;;;;;;;978:42;1056:70;-1:-1:-1;;1056:70:19;;;;;;;-1:-1:-1;;1056:70:19;;;;;;;;;;;;;;;;;;309:7237;;2418:187:6;2491:16;2510:6;;-1:-1:-1;;;;;2526:17:6;;;-1:-1:-1;;;;;;2526:17:6;;;;;;2558:40;;2510:6;;;;;;;2558:40;;2491:16;2558:40;2481:124;2418:187;:::o;14:177:25:-;93:13;;-1:-1:-1;;;;;135:31:25;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:446::-;283:6;291;299;352:2;340:9;331:7;327:23;323:32;320:52;;;368:1;365;358:12;320:52;391:40;421:9;391:40;:::i;:::-;381:50;;450:49;495:2;484:9;480:18;450:49;:::i;:::-;440:59;;542:2;531:9;527:18;521:25;586:6;579:5;575:18;568:5;565:29;555:57;;608:1;605;598:12;555:57;631:5;621:15;;;196:446;;;;;:::o;:::-;309:7237:19;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "309:7237:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5057:861;;;;;;:::i;:::-;;:::i;:::-;;1943:297;;;;;;:::i;:::-;;:::i;:::-;;;1437:14:25;;1430:22;1412:41;;1400:2;1385:18;1943:297:19;;;;;;;;1540:259;;;;;;:::i;:::-;;:::i;2244:191::-;;;;;;:::i;:::-;;:::i;584:55::-;;;;;;:::i;:::-;;:::i;:::-;;;;3164:14:25;;3157:22;3139:41;;3223:14;;3216:22;3211:2;3196:18;;3189:50;-1:-1:-1;;;;;3312:15:25;;;3292:18;;;3285:43;;;;3364:15;;;;3359:2;3344:18;;3337:43;-1:-1:-1;;;;;3455:15:25;;;3449:3;3434:19;;3427:44;3508:15;;;3407:3;3487:19;;3480:44;3555:3;3540:19;;3533:35;3599:3;3584:19;;3577:35;;;;3643:3;3628:19;;3621:35;3693:15;3687:3;3672:19;;3665:44;3126:3;3111:19;584:55:19;2740:975:25;2439:1277:19;;;;;;:::i;:::-;;:::i;1816:101:6:-;;;:::i;1135:102:19:-;;;;;;:::i;:::-;;:::i;1186:85:6:-;1232:7;1258:6;-1:-1:-1;;;;;1258:6:6;1186:85;;;-1:-1:-1;;;;;4853:32:25;;;4835:51;;4823:2;4808:18;1186:85:6;4689:203:25;5922:746:19;;;;;;:::i;:::-;;:::i;769:25::-;;;;;;:::i;:::-;;:::i;6672:872::-;;;;;;:::i;:::-;;:::i;1241:295::-;;;;;;:::i;:::-;;:::i;1803:136::-;;;;;;:::i;:::-;;:::i;643:54::-;;;;;;:::i;:::-;;:::i;701:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6842:14:25;;6835:22;6817:41;;6906:6;6894:19;;;6889:2;6874:18;;6867:47;6930:18;;;6923:34;6805:2;6790:18;701:63:19;6623:340:25;3894:1159:19;;;;;;:::i;:::-;;:::i;798:30::-;;;;;;:::i;:::-;;:::i;2066:198:6:-;;;;;;:::i;:::-;;:::i;5057:861:19:-;1744:1:7;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:7;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;5188:22:19::1;5203:5:::0;5188:7:::1;:22::i;:::-;5180:49;;;;-1:-1:-1::0;;;5180:49:19::1;;;;;;;:::i;:::-;5235:30;5268:22;:99;;-1:-1:-1::0;;;;;5338:22:19;::::1;;::::0;;;:15:::1;:22;::::0;;;;:29;;-1:-1:-1;;;;;5338:29:19;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;;;;;;;5268:99;;;-1:-1:-1::0;;;;;5299:23:19;::::1;;::::0;;;:16:::1;:23;::::0;;;;:30;;-1:-1:-1;;;;;5299:30:19;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;;;;;;;5268:99;5235:132;::::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;::::1;::::0;;::::1;;;;::::0;::::1;::::0;-1:-1:-1;;;;;5235:132:19;;::::1;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;5235:132:19;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;5235:132:19;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;5412:10:19::1;5388:34;::::0;:71:::1;;-1:-1:-1::0;5426:19:19::1;::::0;::::1;::::0;-1:-1:-1;;;;;5426:33:19::1;5449:10;5426:33;5388:71;5373:121;;;::::0;-1:-1:-1;;;5373:121:19;;8535:2:25;5373:121:19::1;::::0;::::1;8517:21:25::0;8574:2;8554:18;;;8547:30;-1:-1:-1;;;8593:18:25;;;8586:49;8652:18;;5373:121:19::1;8333:343:25::0;5373:121:19::1;5521:5;5500:26:::0;;5532:382;::::1;;;5603:20;::::0;::::1;::::0;5568:56:::1;::::0;-1:-1:-1;;;5568:56:19;;5591:10:::1;5568:56;::::0;::::1;8855:51:25::0;8922:18;;;8915:34;;;;-1:-1:-1;;;;;5568:22:19;::::1;::::0;::::1;::::0;8828:18:25;;5568:56:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;5632:23:19;::::1;;::::0;;;:16:::1;:23;::::0;;;;:30;;5665:13;;5632:23;-1:-1:-1;;;;;5632:30:19;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:46;;:30:::1;::::0;;;::::1;;:46:::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;5632:46:19;;;;::::1;;-1:-1:-1::0;;5632:46:19;;;;;::::1;::::0;::::1;;::::0;::::1;;-1:-1:-1::0;;;;;;5632:46:19;;-1:-1:-1;;;;;5632:46:19;;::::1;;-1:-1:-1::0;;;;5632:46:19;;-1:-1:-1;;;5632:46:19;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;5632:46:19;::::1;::::0;;-1:-1:-1;;;;;;5632:46:19;;::::1;-1:-1:-1::0;;;;;5632:46:19;;::::1;;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;5691:33;::::1;::::0;::::1;::::0;5710:13;;5691:33:::1;:::i;:::-;;;;;;;;5532:382;;;5745:22;::::0;::::1;::::0;5789:19:::1;::::0;::::1;::::0;5745:64:::1;::::0;-1:-1:-1;;;5745:64:19;;5777:10:::1;5745:64;::::0;::::1;8855:51:25::0;8922:18;;;8915:34;;;;-1:-1:-1;;;;;5745:31:19;;::::1;::::0;::::1;::::0;8828:18:25;;5745:64:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;5817:22:19;::::1;;::::0;;;:15:::1;:22;::::0;;;;:29;;5849:13;;5817:22;-1:-1:-1;;;;;5817:29:19;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:45;;:29:::1;::::0;;;::::1;;:45:::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;5817:45:19;;;;::::1;;-1:-1:-1::0;;5817:45:19;;;;;::::1;::::0;::::1;;::::0;::::1;;-1:-1:-1::0;;;;;;5817:45:19;;-1:-1:-1;;;;;5817:45:19;;::::1;;-1:-1:-1::0;;;;5817:45:19;;-1:-1:-1;;;5817:45:19;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;5817:45:19;::::1;::::0;;-1:-1:-1;;;;;;5817:45:19;;::::1;-1:-1:-1::0;;;;;5817:45:19;;::::1;;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;5875:32;::::1;::::0;::::1;::::0;5893:13;;5875:32:::1;:::i;:::-;;;;;;;;5532:382;-1:-1:-1::0;;1701:1:7;2628:22;;-1:-1:-1;;5057:861:19:o;1943:297::-;1995:4;2007:22;2032:9;2007:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2007:34:19;;;;;;;;;;;;;;;;-1:-1:-1;;2061:13:19;;2007:34;;-1:-1:-1;2047:11:19;;-1:-1:-1;;;2080:138:19;2104:3;2100:1;:7;2080:138;;;2136:5;-1:-1:-1;;;;;2123:18:19;:6;2130:1;2123:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2123:18:19;;2119:54;;-1:-1:-1;2160:4:19;;1943:297;-1:-1:-1;;;;1943:297:19:o;2119:54::-;2200:3;;2080:138;;;-1:-1:-1;2230:5:19;;1943:297;-1:-1:-1;;;;1943:297:19:o;1540:259::-;1079:13:6;:11;:13::i;:::-;-1:-1:-1;;;;;1634:32:19;;::::1;1604:27;1634:32:::0;;;:22:::1;:32;::::0;;;;;;;;1604:62;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;;::::0;;::::1;::::0;::::1;;;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;;1698:10:::1;::::0;1672:52;;-1:-1:-1;;;1672:52:19;;1698:10;;;::::1;1672:52:::0;;::::1;8855:51:25::0;;;;8922:18;;;8915:34;;;;1672:25:19::1;::::0;8828:18:25;;1672:52:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1746:1:19::1;1730:13;::::0;;::::1;:17:::0;;;-1:-1:-1;;;;;1753:32:19;;::::1;::::0;;:22:::1;:32;::::0;;;;;:41;;;;;;;::::1;::::0;::::1;;;;-1:-1:-1::0;;1753:41:19;::::1;;::::0;;;;-1:-1:-1;;1753:41:19;;;;;;;;;;::::1;::::0;;;;;;;::::1;::::0;1540:259::o;2244:191::-;1079:13:6;:11;:13::i;:::-;2349:3:19::1;2333:13;:19;;;2325:44;;;::::0;-1:-1:-1;;;2325:44:19;;10609:2:25;2325:44:19::1;::::0;::::1;10591:21:25::0;10648:2;10628:18;;;10621:30;-1:-1:-1;;;10667:18:25;;;10660:42;10719:18;;2325:44:19::1;10407:336:25::0;2325:44:19::1;-1:-1:-1::0;;;;;2375:32:19::1;;::::0;;;:22:::1;:32;::::0;;;;:55;;::::1;::::0;;::::1;;;-1:-1:-1::0;;2375:55:19;;::::1;::::0;;;::::1;::::0;;2244:191::o;584:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;584:55:19;;;;;-1:-1:-1;;;;;;584:55:19;;;;;;-1:-1:-1;;;584:55:19;;;;;-1:-1:-1;;;;;584:55:19;;;;;;;;;;;;:::o;2439:1277::-;1744:1:7;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:7;;;;;;;:::i;:::-;1744:1;2455:7;:18;2669:4:19::1;2657:16:::0;::::1;2649:46;;;::::0;-1:-1:-1;;;2649:46:19;;10950:2:25;2649:46:19::1;::::0;::::1;10932:21:25::0;10989:2;10969:18;;;10962:30;-1:-1:-1;;;11008:18:25;;;11001:47;11065:18;;2649:46:19::1;10748:341:25::0;2649:46:19::1;2709:22;2724:5;2709:7;:22::i;:::-;2701:55;;;::::0;-1:-1:-1;;;2701:55:19;;11296:2:25;2701:55:19::1;::::0;::::1;11278:21:25::0;11335:2;11315:18;;;11308:30;-1:-1:-1;;;11354:18:25;;;11347:50;11414:18;;2701:55:19::1;11094:344:25::0;2701:55:19::1;-1:-1:-1::0;;;;;2800:50:19;::::1;2762:35;2800:50:::0;;;:22:::1;:50;::::0;;;;;;;;2762:88;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;2856:55:::1;;;::::0;-1:-1:-1;;;2856:55:19;;11645:2:25;2856:55:19::1;::::0;::::1;11627:21:25::0;11684:2;11664:18;;;11657:30;-1:-1:-1;;;11703:18:25;;;11696:52;11765:18;;2856:55:19::1;11443:346:25::0;2856:55:19::1;-1:-1:-1::0;;;;;2939:23:19;::::1;2917:12;2939:23:::0;;;:16:::1;:23;::::0;;;;;;:30;2976:148;;-1:-1:-1;;;2976:148:19;;2939:30;;:23;2976:46:::1;::::0;:148:::1;::::0;3030:10:::1;::::0;3056:4:::1;::::0;3069:6;;3083:8;;3099:1;;3108;;3117;;2976:148:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3130:11;3144:48;3159:9;3170:14;:21;;;3144:14;:48::i;:::-;3130:62;;3198:16;:23;3215:5;-1:-1:-1::0;;;;;3198:23:19::1;-1:-1:-1::0;;;;;3198:23:19::1;;;;;;;;;;;;3234:214;;;;;;;;3253:4;3234:214;;;;;;3267:5;3234:214;;;;;;3282:5;-1:-1:-1::0;;;;;3234:214:19::1;;;;;3304:15;-1:-1:-1::0;;;;;3234:214:19::1;;;;;3330:10;-1:-1:-1::0;;;;;3234:214:19::1;;;;;3358:1;-1:-1:-1::0;;;;;3234:214:19::1;;;;;3370:3;3234:214;;;;3383:9;3234:214;;;;3402:6;3234:214;;;;3425:14;-1:-1:-1::0;;;;;3234:214:19::1;;;::::0;3198:256:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;-1:-1:-1::0;;;;;3198:256:19::1;;;;;;;;3465:246;3491:214;;;;;;;;3510:4;3491:214;;;;;;3524:5;3491:214;;;;;;3539:5;-1:-1:-1::0;;;;;3491:214:19::1;;;;;3561:15;-1:-1:-1::0;;;;;3491:214:19::1;;;;;3587:10;-1:-1:-1::0;;;;;3491:214:19::1;;;;;3615:1;-1:-1:-1::0;;;;;3491:214:19::1;;;;;3627:3;3491:214;;;;3640:9;3491:214;;;;3659:6;3491:214;;;;3682:14;-1:-1:-1::0;;;;;3491:214:19::1;;;::::0;3465:246:::1;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1701:1:7;2628:22;;-1:-1:-1;;;;;;;;;2439:1277:19:o;1816:101:6:-;1079:13;:11;:13::i;:::-;1880:30:::1;1907:1;1880:18;:30::i;:::-;1816:101::o:0;1135:102:19:-;1079:13:6;:11;:13::i;:::-;1206:10:19::1;:26:::0;;-1:-1:-1;;;;;;1206:26:19::1;-1:-1:-1::0;;;;;1206:26:19;;;::::1;::::0;;;::::1;::::0;;1135:102::o;5922:746::-;1744:1:7;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:7;;;;;;;:::i;:::-;1744:1;2455:7;:18;6000:22:19::1;6015:5:::0;6000:7:::1;:22::i;:::-;5992:49;;;;-1:-1:-1::0;;;5992:49:19::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6076:23:19;::::1;6047:26;6076:23:::0;;;:16:::1;:23;::::0;;;;:30;;-1:-1:-1;;;;;6076:30:19;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;6047:59:::1;::::0;;::::1;::::0;::::1;::::0;;6076:30:::1;::::0;;::::1;::::0;;::::1;6047:59:::0;;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;;;-1:-1:-1;;;;;6047:59:19;;::::1;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;6047:59:19;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;6047:59:19;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;;::::0;::::1;::::0;;;;;-1:-1:-1;6112:38:19::1;;;::::0;-1:-1:-1;;;6112:38:19;;12671:2:25;6112:38:19::1;::::0;::::1;12653:21:25::0;12710:2;12690:18;;;12683:30;-1:-1:-1;;;12729:18:25;;;12722:41;12780:18;;6112:38:19::1;12469:335:25::0;6112:38:19::1;6174:10;6156:15;::::0;::::1;:28:::0;;;6222:4:::1;6190:29;::::0;::::1;:36:::0;-1:-1:-1;6232:22:19;;6260:18:::1;::::0;::::1;::::0;6319:15:::1;::::0;::::1;::::0;6260:75:::1;::::0;-1:-1:-1;;;6260:75:19;;::::1;::::0;::::1;13049:34:25::0;;;;6312:4:19::1;13099:18:25::0;;;13092:43;13151:18;;;13144:34;-1:-1:-1;;;;;6260:31:19::1;::::0;::::1;::::0;12984:18:25;;6260:75:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6341:9;:18;;;-1:-1:-1::0;;;;;6341:27:19::1;;6376:9;:16;;;6418:9;:13;;;6400:9;:15;;;:31;;;;:::i;:::-;6341:96;::::0;-1:-1:-1;;;;;;6341:96:19::1;::::0;;;;;;-1:-1:-1;;;;;8873:32:25;;;6341:96:19::1;::::0;::::1;8855:51:25::0;8922:18;;;8915:34;8828:18;;6341:96:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6505:13:19::1;::::0;::::1;::::0;6474:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;6443:51:19::1;;::::0;;;:22:::1;:51;::::0;;;;:58:::1;;:75:::0;;:58;;:51;:75:::1;::::0;6505:13;;6443:75:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;6524:23:19;::::1;;::::0;;;:16:::1;:23;::::0;;;;:30;;6557:9;;6524:23;-1:-1:-1;;;;;6524:30:19;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:42;;:30:::1;::::0;;;::::1;;:42:::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;6524:42:19;;;;::::1;;-1:-1:-1::0;;6524:42:19;;;;;::::1;::::0;::::1;;::::0;::::1;;-1:-1:-1::0;;;;;;6524:42:19;;-1:-1:-1;;;;;6524:42:19;;::::1;;-1:-1:-1::0;;;;6524:42:19;;-1:-1:-1;;;6524:42:19;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;6524:42:19;::::1;::::0;;-1:-1:-1;;;;;;6524:42:19;;::::1;-1:-1:-1::0;;;;;6524:42:19;;::::1;;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;6607:16;;::::1;::::0;6572:52;;-1:-1:-1;;;6572:52:19;;6595:10:::1;6572:52:::0;;::::1;8855:51:25::0;;;;8922:18;;;8915:34;6572:22:19;::::1;::::0;::::1;::::0;8828:18:25;;6572:52:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6635:28;6653:9;6635:28;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1701:1:7;2628:22;;-1:-1:-1;5922:746:19:o;769:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;769:25:19;;-1:-1:-1;769:25:19;:::o;6672:872::-;1744:1:7;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:7;;;;;;;:::i;:::-;1744:1;2455:7;:18;6828:22:19::1;6843:5:::0;6828:7:::1;:22::i;:::-;6820:49;;;;-1:-1:-1::0;;;6820:49:19::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6904:22:19;::::1;6875:26;6904:22:::0;;;:15:::1;:22;::::0;;;;:29;;-1:-1:-1;;;;;6904:29:19;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;6947:13:::0;;6904:29;;-1:-1:-1;6947:13:19::1;;6939:37;;;::::0;-1:-1:-1;;;6939:37:19;;12671:2:25;6939:37:19::1;::::0;::::1;12653:21:25::0;12710:2;12690:18;;;12683:30;-1:-1:-1;;;12729:18:25;;;12722:41;12780:18;;6939:37:19::1;12469:335:25::0;6939:37:19::1;6990:14;::::0;::::1;::::0;-1:-1:-1;;;;;6990:14:19::1;6982:54;;;::::0;-1:-1:-1;;;6982:54:19;;13786:2:25;6982:54:19::1;::::0;::::1;13768:21:25::0;13825:2;13805:18;;;13798:30;-1:-1:-1;;;13844:18:25;;;13837:43;13897:18;;6982:54:19::1;13584:337:25::0;6982:54:19::1;7042:15;::::0;::::1;:28:::0;;-1:-1:-1;;;;;;7042:28:19::1;7060:10;7042:28:::0;;::::1;::::0;;;7076:35;;-1:-1:-1;;7117:21:19;7042:28:::1;7117:21:::0;;;7216:14:::1;::::0;::::1;::::0;7238:15:::1;::::0;::::1;::::0;7144:158:::1;::::0;-1:-1:-1;;;7144:158:19;;-1:-1:-1;;;;;7144:46:19;;::::1;::::0;::::1;::::0;:158:::1;::::0;7060:10;;7216:14;::::1;::::0;7261:8;;7277:1;;7286;;7295;;7144:158:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;7308:17:19::1;::::0;::::1;::::0;7364:12:::1;::::0;::::1;::::0;7347:14:::1;::::0;::::1;::::0;-1:-1:-1;;;;;7308:17:19;;::::1;::::0;-1:-1:-1;7308:26:19::1;::::0;7335:10:::1;::::0;7347:29:::1;::::0;::::1;:::i;:::-;7308:69;::::0;-1:-1:-1;;;;;;7308:69:19::1;::::0;;;;;;-1:-1:-1;;;;;8873:32:25;;;7308:69:19::1;::::0;::::1;8855:51:25::0;8922:18;;;8915:34;8828:18;;7308:69:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7444:12:19::1;::::0;::::1;::::0;7414:17:::1;::::0;::::1;::::0;-1:-1:-1;;;;;7414:17:19::1;7383:50;::::0;;;:22:::1;:50;::::0;;;;7414:17;7383:57:::1;:73:::0;;:57;;:50;:73:::1;::::0;7444:12;;7383:73:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;7462:22:19;::::1;;::::0;;;:15:::1;:22;::::0;;;;:29;;7494:8;;7462:22;-1:-1:-1;;;;;7462:29:19;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:40;;:29:::1;::::0;;::::1;;:40:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;7462:40:19;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;-1:-1:-1::0;;7462:40:19;;;-1:-1:-1;;7462:40:19;;;;;;;::::1;::::0;;;;;-1:-1:-1;;;;;7462:40:19;;;;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;7462:40:19;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7462:40:19;;;::::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;;7462:40:19;;;-1:-1:-1;;;;;;7462:40:19;;;;;;;::::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;7462:40:19;;::::1;-1:-1:-1::0;;;;;7462:40:19;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;7513:26:::1;::::0;::::1;::::0;::::1;::::0;7530:8;;7513:26:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;1701:1:7;2628:22;;-1:-1:-1;;;;;6672:872:19:o;1241:295::-;1079:13:6;:11;:13::i;:::-;-1:-1:-1;;;;;1360:35:19;::::1;;::::0;;;:22:::1;:35;::::0;;;;:41;::::1;;1355:98;;1411:9;:35:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1411:35:19;;;;;::::1;::::0;;-1:-1:-1;;;;;;1411:35:19::1;-1:-1:-1::0;;;;;1411:35:19;::::1;;::::0;;1355:98:::1;1496:35;::::0;;::::1;::::0;::::1;::::0;;1510:4:::1;1496:35:::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;1458:35:19;;;::::1;-1:-1:-1::0;1458:35:19;;;:22:::1;:35:::0;;;;;;;:73;;;;;;-1:-1:-1;;1458:73:19;;;;::::1;;-1:-1:-1::0;;1458:73:19;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;1241:295::o;1803:136::-;1079:13:6;:11;:13::i;:::-;1869:14:19::1;1877:5;1869:7;:14::i;:::-;1868:15;1860:47;;;::::0;-1:-1:-1;;;1860:47:19;;15521:2:25;1860:47:19::1;::::0;::::1;15503:21:25::0;15560:2;15540:18;;;15533:30;-1:-1:-1;;;15579:18:25;;;15572:49;15638:18;;1860:47:19::1;15319:343:25::0;1860:47:19::1;1913:9;:21:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1913:21:19;;;;;::::1;::::0;;-1:-1:-1;;;;;;1913:21:19::1;-1:-1:-1::0;;;;;1913:21:19;;;::::1;::::0;;;::::1;::::0;;1803:136::o;643:54::-;;;;;;;;;;;;;;;;;;;;3894:1159;1744:1:7;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:7;;;;;;;:::i;:::-;1744:1;2455:7;:18;4058:4:19::1;4046:16:::0;::::1;4038:46;;;::::0;-1:-1:-1;;;4038:46:19;;10950:2:25;4038:46:19::1;::::0;::::1;10932:21:25::0;10989:2;10969:18;;;10962:30;-1:-1:-1;;;11008:18:25;;;11001:47;11065:18;;4038:46:19::1;10748:341:25::0;4038:46:19::1;4098:22;4113:5;4098:7;:22::i;:::-;4090:55;;;::::0;-1:-1:-1;;;4090:55:19;;11296:2:25;4090:55:19::1;::::0;::::1;11278:21:25::0;11335:2;11315:18;;;11308:30;-1:-1:-1;;;11354:18:25;;;11347:50;11414:18;;4090:55:19::1;11094:344:25::0;4090:55:19::1;-1:-1:-1::0;;;;;4189:50:19;::::1;4151:35;4189:50:::0;;;:22:::1;:50;::::0;;;;;;;;4151:88;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;4245:55:::1;;;::::0;-1:-1:-1;;;4245:55:19;;11645:2:25;4245:55:19::1;::::0;::::1;11627:21:25::0;11684:2;11664:18;;;11657:30;-1:-1:-1;;;11703:18:25;;;11696:52;11765:18;;4245:55:19::1;11443:346:25::0;4245:55:19::1;4306:73;::::0;-1:-1:-1;;;4306:73:19;;4342:10:::1;4306:73;::::0;::::1;13049:34:25::0;4362:4:19::1;13099:18:25::0;;;13092:43;13151:18;;;13144:34;;;-1:-1:-1;;;;;4306:35:19;::::1;::::0;::::1;::::0;12984:18:25;;4306:73:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;4433:22:19;::::1;4411:12;4433:22:::0;;;:15:::1;:22;::::0;;;;;;:29;4509:21;;::::1;::::0;4433:29;;4411:12;4483:48:::1;::::0;4498:9;;4483:14:::1;:48::i;:::-;4469:62;;4537:15;:22;4553:5;-1:-1:-1::0;;;;;4537:22:19::1;-1:-1:-1::0;;;;;4537:22:19::1;;;;;;;;;;;;4572:214;;;;;;;;4591:4;4572:214;;;;;;4605:5;4572:214;;;;;;4620:5;-1:-1:-1::0;;;;;4572:214:19::1;;;;;4642:15;-1:-1:-1::0;;;;;4572:214:19::1;;;;;4676:1;-1:-1:-1::0;;;;;4572:214:19::1;;;;;4688:10;-1:-1:-1::0;;;;;4572:214:19::1;;;;;4708:3;4572:214;;;;4721:9;4572:214;;;;4740:6;4572:214;;;;4763:14;-1:-1:-1::0;;;;;4572:214:19::1;;;::::0;4537:255:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;-1:-1:-1::0;;;;;4537:255:19::1;;;;;;;;4803:245;4828:214;;;;;;;;4847:4;4828:214;;;;;;4861:5;4828:214;;;;;;4876:5;-1:-1:-1::0;;;;;4828:214:19::1;;;;;4898:15;-1:-1:-1::0;;;;;4828:214:19::1;;;;;4932:1;-1:-1:-1::0;;;;;4828:214:19::1;;;;;4944:10;-1:-1:-1::0;;;;;4828:214:19::1;;;;;4964:3;4828:214;;;;4977:9;4828:214;;;;4996:6;4828:214;;;;5019:14;-1:-1:-1::0;;;;;4828:214:19::1;;;::::0;4803:245:::1;;;;;;:::i;798:30::-:0;;;;;;;;;;;;2066:198:6;1079:13;:11;:13::i;:::-;-1:-1:-1;;;;;2154:22:6;::::1;2146:73;;;::::0;-1:-1:-1;;;2146:73:6;;15869:2:25;2146:73:6::1;::::0;::::1;15851:21:25::0;15908:2;15888:18;;;15881:30;15947:34;15927:18;;;15920:62;-1:-1:-1;;;15998:18:25;;;15991:36;16044:19;;2146:73:6::1;15667:402:25::0;2146:73:6::1;2229:28;2248:8;2229:18;:28::i;:::-;2066:198:::0;:::o;1344:130::-;1232:7;1258:6;-1:-1:-1;;;;;1258:6:6;719:10:13;1407:23:6;1399:68;;;;-1:-1:-1;;;1399:68:6;;16276:2:25;1399:68:6;;;16258:21:25;;;16295:18;;;16288:30;16354:34;16334:18;;;16327:62;16406:18;;1399:68:6;16074:356:25;3720:170:19;3809:11;3845:1;3836:6;:10;;;:49;;3884:1;3836:49;;;3877:4;3850:23;3858:15;;;3850:5;:23;:::i;:::-;3849:32;;;;:::i;:::-;3830:55;3720:170;-1:-1:-1;;;3720:170:19:o;2418:187:6:-;2491:16;2510:6;;-1:-1:-1;;;;;2526:17:6;;;-1:-1:-1;;;;;;2526:17:6;;;;;;2558:40;;2510:6;;;;;;;2558:40;;2491:16;2558:40;2481:124;2418:187;:::o;14:131:25:-;-1:-1:-1;;;;;89:31:25;;79:42;;69:70;;135:1;132;125:12;150:118;236:5;229:13;222:21;215:5;212:32;202:60;;258:1;255;248:12;273:171;340:20;;-1:-1:-1;;;;;389:30:25;;379:41;;369:69;;434:1;431;424:12;369:69;273:171;;;:::o;449:454::-;522:6;530;538;591:2;579:9;570:7;566:23;562:32;559:52;;;607:1;604;597:12;559:52;646:9;633:23;665:31;690:5;665:31;:::i;:::-;715:5;-1:-1:-1;772:2:25;757:18;;744:32;785:30;744:32;785:30;:::i;:::-;834:7;-1:-1:-1;860:37:25;893:2;878:18;;860:37;:::i;:::-;850:47;;449:454;;;;;:::o;908:263::-;983:6;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;1091:9;1078:23;1110:31;1135:5;1110:31;:::i;1716:159::-;1783:20;;1843:6;1832:18;;1822:29;;1812:57;;1865:1;1862;1855:12;1880:319;1947:6;1955;2008:2;1996:9;1987:7;1983:23;1979:32;1976:52;;;2024:1;2021;2014:12;1976:52;2047:28;2065:9;2047:28;:::i;:::-;2037:38;;2125:2;2114:9;2110:18;2097:32;2138:31;2163:5;2138:31;:::i;:::-;2188:5;2178:15;;;1880:319;;;;;:::o;2204:315::-;2272:6;2280;2333:2;2321:9;2312:7;2308:23;2304:32;2301:52;;;2349:1;2346;2339:12;2301:52;2388:9;2375:23;2407:31;2432:5;2407:31;:::i;:::-;2457:5;2509:2;2494:18;;;;2481:32;;-1:-1:-1;;;2204:315:25:o;3720:156::-;3786:20;;3846:4;3835:16;;3825:27;;3815:55;;3866:1;3863;3856:12;3881:803;4001:6;4009;4017;4025;4033;4041;4049;4057;4110:3;4098:9;4089:7;4085:23;4081:33;4078:53;;;4127:1;4124;4117:12;4078:53;4166:9;4153:23;4185:31;4210:5;4185:31;:::i;:::-;4235:5;-1:-1:-1;4292:2:25;4277:18;;4264:32;4305:33;4264:32;4305:33;:::i;:::-;4357:7;-1:-1:-1;4411:2:25;4396:18;;4383:32;;-1:-1:-1;4462:2:25;4447:18;;4434:32;;-1:-1:-1;4513:3:25;4498:19;;4485:33;;-1:-1:-1;4537:37:25;4569:3;4554:19;;4537:37;:::i;:::-;4527:47;;4621:3;4610:9;4606:19;4593:33;4583:43;;4673:3;4662:9;4658:19;4645:33;4635:43;;3881:803;;;;;;;;;;;:::o;4897:319::-;4964:6;4972;5025:2;5013:9;5004:7;5000:23;4996:32;4993:52;;;5041:1;5038;5031:12;4993:52;5080:9;5067:23;5099:31;5124:5;5099:31;:::i;:::-;5149:5;-1:-1:-1;5173:37:25;5206:2;5191:18;;5173:37;:::i;:::-;5163:47;;4897:319;;;;;:::o;5221:180::-;5280:6;5333:2;5321:9;5312:7;5308:23;5304:32;5301:52;;;5349:1;5346;5339:12;5301:52;-1:-1:-1;5372:23:25;;5221:180;-1:-1:-1;5221:180:25:o;5630:596::-;5731:6;5739;5747;5755;5763;5771;5824:3;5812:9;5803:7;5799:23;5795:33;5792:53;;;5841:1;5838;5831:12;5792:53;5880:9;5867:23;5899:31;5924:5;5899:31;:::i;:::-;5949:5;-1:-1:-1;5973:37:25;6006:2;5991:18;;5973:37;:::i;:::-;5963:47;;6057:2;6046:9;6042:18;6029:32;6019:42;;6080:36;6112:2;6101:9;6097:18;6080:36;:::i;:::-;6070:46;;6163:3;6152:9;6148:19;6135:33;6125:43;;6215:3;6204:9;6200:19;6187:33;6177:43;;5630:596;;;;;;;;:::o;6231:387::-;6307:6;6315;6323;6376:2;6364:9;6355:7;6351:23;6347:32;6344:52;;;6392:1;6389;6382:12;6344:52;6431:9;6418:23;6450:31;6475:5;6450:31;:::i;:::-;6500:5;-1:-1:-1;6524:37:25;6557:2;6542:18;;6524:37;:::i;:::-;6514:47;;6608:2;6597:9;6593:18;6580:32;6570:42;;6231:387;;;;;:::o;6968:525::-;7054:6;7062;7070;7078;7131:3;7119:9;7110:7;7106:23;7102:33;7099:53;;;7148:1;7145;7138:12;7099:53;7187:9;7174:23;7206:31;7231:5;7206:31;:::i;:::-;7256:5;-1:-1:-1;7313:2:25;7298:18;;7285:32;7326:33;7285:32;7326:33;:::i;:::-;6968:525;;7378:7;;-1:-1:-1;;;;7432:2:25;7417:18;;7404:32;;7483:2;7468:18;7455:32;;6968:525::o;7498:355::-;7700:2;7682:21;;;7739:2;7719:18;;;7712:30;7778:33;7773:2;7758:18;;7751:61;7844:2;7829:18;;7498:355::o;7858:338::-;8060:2;8042:21;;;8099:2;8079:18;;;8072:30;-1:-1:-1;;;8133:2:25;8118:18;;8111:44;8187:2;8172:18;;7858:338::o;8201:127::-;8262:10;8257:3;8253:20;8250:1;8243:31;8293:4;8290:1;8283:15;8317:4;8314:1;8307:15;8960:245;9027:6;9080:2;9068:9;9059:7;9055:23;9051:32;9048:52;;;9096:1;9093;9086:12;9048:52;9128:9;9122:16;9147:28;9169:5;9147:28;:::i;9210:1192::-;9429:13;;1246;1239:21;1227:34;;9400:3;9385:19;;9501:4;9493:6;9489:17;9483:24;9516:51;9561:4;9550:9;9546:20;9532:12;1246:13;1239:21;1227:34;;1176:91;9516:51;;9616:4;9608:6;9604:17;9598:24;9631:55;9680:4;9669:9;9665:20;9649:14;-1:-1:-1;;;;;2589:30:25;2577:43;;2524:102;9631:55;;9735:4;9727:6;9723:17;9717:24;9750:55;9799:4;9788:9;9784:20;9768:14;-1:-1:-1;;;;;2589:30:25;2577:43;;2524:102;9750:55;;9854:4;9846:6;9842:17;9836:24;9869:56;9919:4;9908:9;9904:20;9888:14;-1:-1:-1;;;;;2697:31:25;2685:44;;2631:104;9869:56;;9974:4;9966:6;9962:17;9956:24;9989:56;10039:4;10028:9;10024:20;10008:14;-1:-1:-1;;;;;2697:31:25;2685:44;;2631:104;9989:56;;10101:4;10093:6;10089:17;10083:24;10076:4;10065:9;10061:20;10054:54;10164:4;10156:6;10152:17;10146:24;10139:4;10128:9;10124:20;10117:54;10190:6;10250:2;10242:6;10238:15;10232:22;10227:2;10216:9;10212:18;10205:50;;10274:6;10329:2;10321:6;10317:15;10311:22;10342:54;10392:2;10381:9;10377:18;10361:14;-1:-1:-1;;;;;2697:31:25;2685:44;;2631:104;10342:54;;;9210:1192;;;;:::o;11794:670::-;-1:-1:-1;;;;;12161:15:25;;;12143:34;;12213:15;;;;12208:2;12193:18;;12186:43;12260:2;12245:18;;12238:34;;;;12303:2;12288:18;;12281:34;;;;12364:4;12352:17;12346:3;12331:19;;12324:46;12123:3;12386:19;;12379:35;12445:3;12430:19;;12423:35;;;;12092:3;12077:19;;11794:670::o;13189:127::-;13250:10;13245:3;13241:20;13238:1;13231:31;13281:4;13278:1;13271:15;13305:4;13302:1;13295:15;13321:125;13361:4;13389:1;13386;13383:8;13380:34;;;13394:18;;:::i;:::-;-1:-1:-1;13431:9:25;;13321:125::o;13451:128::-;13491:3;13522:1;13518:6;13515:1;13512:13;13509:39;;;13528:18;;:::i;:::-;-1:-1:-1;13564:9:25;;13451:128::o;14069:1245::-;14290:13;;14343:4;14328:20;;1246:13;1239:21;1227:34;;14260:3;14245:19;;;14369:67;14430:4;14419:9;14415:20;14408:4;14396:9;14393:1;14389:17;14385:28;1246:13;1239:21;1227:34;;1176:91;14369:67;-1:-1:-1;;;;;14508:2:25;14504:18;;;14500:27;;14544:4;14529:20;;2577:43;14585:2;14581:18;;;;14577:27;14621:4;14606:20;;2577:43;14717:4;14705:17;;14699:24;-1:-1:-1;;;;;14022:36:25;;;14781:4;14766:20;;2685:44;14879:4;14867:17;;14861:24;14022:36;;14945:4;14930:20;;2685:44;15007:4;14995:17;;14989:24;14982:4;14967:20;;14960:54;15070:4;15058:17;;15052:24;15045:4;15030:20;;15023:54;15135:4;15123:17;;15117:24;15108:6;15093:22;;15086:56;15234:4;15222:17;;;15216:24;14022:36;;;15300:6;15285:22;;;2685:44;14022:36;14069:1245::o;16435:168::-;16475:7;16541:1;16537;16533:6;16529:14;16526:1;16523:21;16518:1;16511:9;16504:17;16500:45;16497:71;;;16548:18;;:::i;:::-;-1:-1:-1;16588:9:25;;16435:168::o;16608:217::-;16648:1;16674;16664:132;;16718:10;16713:3;16709:20;16706:1;16699:31;16753:4;16750:1;16743:15;16781:4;16778:1;16771:15;16664:132;-1:-1:-1;16810:9:25;;16608:217::o",
=======
    "object": "0x60806040523480156200001157600080fd5b506040516200292338038062002923833981016040819052620000349162000186565b6200003f3362000119565b600180556103e861ffff821611156200005757600080fd5b6006805460018181019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b039586166001600160a01b0319918216811790925560078054959096169416939093179093556040805160608101825284815261ffff928316602082810191825260008385018181529681526004909152929092209051815492519093166101000262ffff00199315159390931662ffffff19909216919091179190911781559051910155620001da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018157600080fd5b919050565b6000806000606084860312156200019c57600080fd5b620001a78462000169565b9250620001b76020850162000169565b9150604084015161ffff81168114620001cf57600080fd5b809150509250925092565b61273980620001ea6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063d48bfca711610071578063d48bfca7146102f8578063d59a83bb1461030b578063de8645e61461031e578063f110fb5614610331578063f2fde38b1461034457600080fd5b80638da5cb5b146102875780639a83aa8b146102ac5780639ead7222146102bf578063d28c3a9b146102d2578063d38d0b45146102e557600080fd5b80634303d9d9116100f45780634303d9d9146101895780636afb2a55146102035780636bdf6b3914610259578063715018a61461026c5780638705fcd41461027457600080fd5b806308b4e2a61461012657806319f373611461013b5780631ac3ddeb1461016357806330f738be14610176575b600080fd5b6101396101343660046121b0565b610357565b005b61014e6101493660046121f7565b610904565b60405190151581526020015b60405180910390f35b6101396101713660046121f7565b6109c3565b610139610184366004612226565b610adc565b61019c61019736600461225d565b610b5b565b604080519a15158b5298151560208b01526001600160401b03978816988a01989098529490951660608801526001600160a01b03928316608088015290821660a087015260c086015260e0850192909252610100840152166101208201526101400161015a565b6102396102113660046121f7565b6004602052600090815260409020805460019091015460ff821691610100900461ffff169083565b60408051931515845261ffff90921660208401529082015260600161015a565b61013961026736600461229a565b610be8565b61013961108c565b6101396102823660046121f7565b6110a0565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161015a565b6101396102ba366004612312565b6110ca565b6102946102cd366004612347565b61157a565b6101396102e0366004612360565b6115a4565b6101396102f33660046123c1565b6119c2565b6101396103063660046121f7565b611aa2565b61019c61031936600461225d565b611b48565b61013961032c3660046123ff565b611b64565b61029461033f366004612347565b612008565b6101396103523660046121f7565b612018565b6002600154036103825760405162461bcd60e51b815260040161037990612445565b60405180910390fd5b600260015561039083610904565b6103ac5760405162461bcd60e51b81526004016103799061247c565b6000826103f9576001600160a01b038416600090815260036020526040902080546001600160401b0384169081106103e6576103e66124a4565b906000526020600020906007020161043b565b6001600160a01b038416600090815260026020526040902080546001600160401b03841690811061042c5761042c6124a4565b90600052602060002090600702015b6040805161014081018252825460ff80821615158352610100808304909116151560208401526001600160401b03620100008304811694840194909452600160501b909104909216606082015260018301546001600160a01b03908116608083018190526002850154821660a0840152600385015460c0840152600485015460e08401526005850154938301939093526006909301549092166101208301529091503314806104f6575060a08101516001600160a01b031633145b6105385760405162461bcd60e51b815260206004820152601360248201527210d85b98d95b081d5b985d5d1a1bdc9a5e9959606a1b6044820152606401610379565b60008152821561071d5761010081015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b0385169063a9059cbb906044016020604051808303816000875af1158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906124ba565b506001600160a01b038416600090815260026020526040902080548291906001600160401b0385169081106105f1576105f16124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517f9b3589e58cfaae811e95372b148d4048358e808d0c0af452b23f9d4620f8a23e906107109083906124d7565b60405180910390a16108fa565b61012081015160e082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906124ba565b506001600160a01b038416600090815260036020526040902080548291906001600160401b0385169081106107d2576107d26124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517fb95b9053e8e235c5fb04aa72707d183a8eba7f5f7847a660f916fdf159927cc8906108f19083906124d7565b60405180910390a15b5050600180555050565b600080600580548060200260200160405190810160405280929190818152602001828054801561095d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161093f575b505083519394506000925050505b818110156109b857846001600160a01b031683828151811061098f5761098f6124a4565b60200260200101516001600160a01b0316036109b057506001949350505050565b60010161096b565b506000949350505050565b6109cb612091565b6001600160a01b038181166000818152600460208181526040928390208351606081018552815460ff811615158252610100900461ffff169281019290925260010154818401819052600754935163a9059cbb60e01b81529390951691830191909152602482019390935263a9059cbb906044016020604051808303816000875af1158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906124ba565b50600060408083018281526001600160a01b03909416825260046020908152912082518154929093015161ffff166101000262ffff00199315159390931662ffffff19909216919091179190911781559051600190910155565b610ae4612091565b6101f48261ffff1610610b285760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40a8dede40d0d2ced60a31b6044820152606401610379565b6001600160a01b03166000908152600460205260409020805461ffff9092166101000262ffff0019909216919091179055565b60026020528160005260406000208181548110610b7757600080fd5b6000918252602090912060079091020180546001820154600283015460038401546004850154600586015460069096015460ff808716995061010087041697506001600160401b03620100008704811697600160501b90970416956001600160a01b0395861695948516949091168a565b600260015403610c0a5760405162461bcd60e51b815260040161037990612445565b60026001556103e88511610c545760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b610c5d88610904565b610ca05760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0387166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252610d325760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6001600160a01b0389166000818152600260205260409081902054905163cfac414b60e01b815290919063cfac414b90610d7c90339030908d908c908c908c908c906004016125a5565b600060405180830381600087803b158015610d9657600080fd5b505af1158015610daa573d6000803e3d6000fd5b505050506000610dbe8884602001516120eb565b9050600260008c6001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507f3b24c5db8e1f8aaec17cd20d4e148ad8ee3909fd0c9a1f6a86b1e900a49ef6b7604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b031681525060405161107391906124d7565b60405180910390a1505060018055505050505050505050565b611094612091565b61109e6000612121565b565b6110a8612091565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036110ec5760405162461bcd60e51b815260040161037990612445565b60026001556110fa82610904565b6111165760405162461bcd60e51b81526004016103799061247c565b6001600160a01b038216600090815260026020526040812080546001600160401b038416908110611149576111496124a4565b600091825260209182902060408051610140810182526007909302909101805460ff80821615158086526101008084049092161515968601969096526001600160401b03620100008304811694860194909452600160501b909104909216606084015260018101546001600160a01b0390811660808501526002820154811660a0850152600382015460c0850152600482015460e0850152600582015492840192909252600601541661012082015291506112345760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b3360a08201819052600160208301526000825261012082015160e08301516040516323b872dd60e01b8152600481019390935230602484015260448301526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c891906124ba565b508061012001516001600160a01b031663a9059cbb82608001518360c001518460e001516112f691906125fc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136591906124ba565b5060c08101516101208201516001600160a01b03166000908152600460205260408120600101805490919061139b908490612613565b90915550506001600160a01b038316600090815260026020526040902080548291906001600160401b0385169081106113d6576113d66124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e086015160048085019190915585870151600585015561012090960151600690930180549091169282169290921790915591840151905163a9059cbb60e01b81523393810193909352602483015284169063a9059cbb906044016020604051808303816000875af1158015611515573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153991906124ba565b507fb6432e18a59c31eafbe7fea705a495b38ea4992c69bdc678262b38ddc31c2d218160405161156991906124d7565b60405180910390a150506001805550565b6005818154811061158a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600154036115c65760405162461bcd60e51b815260040161037990612445565b60026001556115d486610904565b6115f05760405162461bcd60e51b81526004016103799061247c565b6001600160a01b038616600090815260036020526040812080546001600160401b038816908110611623576116236124a4565b60009182526020909120600790910201805490915060ff166116755760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b60028101546001600160a01b03166116bf5760405162461bcd60e51b815260206004820152600d60248201526c57726f6e67206164647265737360981b6044820152606401610379565b6001810180546001600160a01b03191633908117909155815461ffff19166101001782556002820154600583015460405163cfac414b60e01b81526001600160a01b038b81169463cfac414b946117259491939216918b908b908b908b906004016125a5565b600060405180830381600087803b15801561173f57600080fd5b505af1158015611753573d6000803e3d6000fd5b5050506006820154600383015460048401546001600160a01b03909216925063a9059cbb913391611783916125fc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156117ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f291906124ba565b50600381015460068201546001600160a01b031660009081526004602052604081206001018054909190611827908490612613565b90915550506001600160a01b038716600090815260036020526040902080548291906001600160401b038916908110611862576118626124a4565b600091825260209091208254600790920201805460ff928316151560ff19821681178355845461010090819004909416151590930261ff001990931661ffff19909116179190911780825582546001600160401b036201000091829004811690910269ffffffffffffffff0000198316811784558454600160501b9081900490921690910267ffffffffffffffff60501b1990911662010000600160901b03199092169190911717815560018083015490820180546001600160a01b03199081166001600160a01b03938416179091556002808501549084018054831691841691909117905560038085015490840155600480850154908401556005808501549084015560069384015493909201805490921692169190911790556040517f127e23dc5aa74346dfbee84f2e6e25abf5f06e34ad3beea66e7363e53ff51359906119ad90839061262b565b60405180910390a15050600180555050505050565b6119ca612091565b6001600160a01b03831660009081526004602052604090205460ff16611a3657600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0385161790555b60408051606081018252600180825261ffff94851660208084019182528385019586526001600160a01b0397909716600090815260049097529290952090518154925162ffffff1990931690151562ffff00191617610100929094169190910292909217825551910155565b611aaa612091565b611ab381610904565b15611af65760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610379565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b60036020528160005260406000208181548110610b7757600080fd5b600260015403611b865760405162461bcd60e51b815260040161037990612445565b60026001556103e88111611bd05760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b611bd984610904565b611c1c5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0383166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252611cae5760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015611d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2591906124ba565b506001600160a01b038516600090815260036020908152604082205490830151909190611d539085906120eb565b905060036000886001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507fa23adb6634e58bf746cbb87e2f83ff7c3ba3201ab3f5f6cd04188a2acda98450604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b03168152506040516119ad91906124d7565b6006818154811061158a57600080fd5b612020612091565b6001600160a01b0381166120855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610379565b61208e81612121565b50565b6000546001600160a01b0316331461109e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b6000808261ffff16116120ff57600061211a565b6103e861211061ffff8416856126c2565b61211a91906126e1565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461208e57600080fd5b801515811461208e57600080fd5b80356001600160401b03811681146121ab57600080fd5b919050565b6000806000606084860312156121c557600080fd5b83356121d081612171565b925060208401356121e081612186565b91506121ee60408501612194565b90509250925092565b60006020828403121561220957600080fd5b813561211a81612171565b803561ffff811681146121ab57600080fd5b6000806040838503121561223957600080fd5b61224283612214565b9150602083013561225281612171565b809150509250929050565b6000806040838503121561227057600080fd5b823561227b81612171565b946020939093013593505050565b803560ff811681146121ab57600080fd5b600080600080600080600080610100898b0312156122b757600080fd5b88356122c281612171565b975060208901356122d281612171565b96506040890135955060608901359450608089013593506122f560a08a01612289565b925060c0890135915060e089013590509295985092959890939650565b6000806040838503121561232557600080fd5b823561233081612171565b915061233e60208401612194565b90509250929050565b60006020828403121561235957600080fd5b5035919050565b60008060008060008060c0878903121561237957600080fd5b863561238481612171565b955061239260208801612194565b9450604087013593506123a760608801612289565b92506080870135915060a087013590509295509295509295565b6000806000606084860312156123d657600080fd5b83356123e181612171565b92506123ef60208501612214565b9150604084013590509250925092565b6000806000806080858703121561241557600080fd5b843561242081612171565b9350602085013561243081612171565b93969395505050506040820135916060013590565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d151bdad95b88155b9b1a5cdd195960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124cc57600080fd5b815161211a81612186565b815115158152610140810160208301516124f5602084018215159052565b50604083015161251060408401826001600160401b03169052565b50606083015161252b60608401826001600160401b03169052565b50608083015161254660808401826001600160a01b03169052565b5060a083015161256160a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e08301526101008084015181840152506101208084015161259d828501826001600160a01b03169052565b505092915050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b634e487b7160e01b600052601160045260246000fd5b60008282101561260e5761260e6125e6565b500390565b60008219821115612626576126266125e6565b500190565b815460ff81161515825261014082019061264f6020840160ff8360081c1615159052565b6001600160401b03601082901c8116604085015260509190911c16606083015260018301546001600160a01b0390811660808401526002840154811660a0840152600384015460c0840152600484015460e084015260058401546101008401526006909301549092166101209091015290565b60008160001904831182151516156126dc576126dc6125e6565b500290565b6000826126fe57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122010a13cf6261ffa87954c3a4d8337a1fba370e1c791a42665350c25f27dadde7364736f6c634300080e0033",
    "sourceMap": "309:7159:24:-:0;;;848:267;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:8;719:10:16;921:18:8;:32::i;:::-;1701:1:10;1806:22;;959:4:24;949:14;;;;;941:23;;;;;;970:14;:42;;;;;;;;;;;;;-1:-1:-1;;;;;970:42:24;;;-1:-1:-1;;;;;;970:42:24;;;;;;;;1018:10;:24;;;;;;;;;;;;;;;1080:30;;;;;;;;;;;;;;;970:42;1080:30;;;;;;-1:-1:-1;1080:30:24;;;;;;1048:29;;;:14;:29;;;;;;;:62;;;;;;;;;970:42;1048:62;-1:-1:-1;;1048:62:24;;;;;;;-1:-1:-1;;1048:62:24;;;;;;;;;;;;;;;;;;309:7159;;2418:187:8;2491:16;2510:6;;-1:-1:-1;;;;;2526:17:8;;;-1:-1:-1;;;;;;2526:17:8;;;;;;2558:40;;2510:6;;;;;;;2558:40;;2491:16;2558:40;2481:124;2418:187;:::o;14:177:35:-;93:13;;-1:-1:-1;;;;;135:31:35;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:446::-;283:6;291;299;352:2;340:9;331:7;327:23;323:32;320:52;;;368:1;365;358:12;320:52;391:40;421:9;391:40;:::i;:::-;381:50;;450:49;495:2;484:9;480:18;450:49;:::i;:::-;440:59;;542:2;531:9;527:18;521:25;586:6;579:5;575:18;568:5;565:29;555:57;;608:1;605;598:12;555:57;631:5;621:15;;;196:446;;;;;:::o;:::-;309:7159:24;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063d48bfca711610071578063d48bfca7146102f8578063d59a83bb1461030b578063de8645e61461031e578063f110fb5614610331578063f2fde38b1461034457600080fd5b80638da5cb5b146102875780639a83aa8b146102ac5780639ead7222146102bf578063d28c3a9b146102d2578063d38d0b45146102e557600080fd5b80634303d9d9116100f45780634303d9d9146101895780636afb2a55146102035780636bdf6b3914610259578063715018a61461026c5780638705fcd41461027457600080fd5b806308b4e2a61461012657806319f373611461013b5780631ac3ddeb1461016357806330f738be14610176575b600080fd5b6101396101343660046121b0565b610357565b005b61014e6101493660046121f7565b610904565b60405190151581526020015b60405180910390f35b6101396101713660046121f7565b6109c3565b610139610184366004612226565b610adc565b61019c61019736600461225d565b610b5b565b604080519a15158b5298151560208b01526001600160401b03978816988a01989098529490951660608801526001600160a01b03928316608088015290821660a087015260c086015260e0850192909252610100840152166101208201526101400161015a565b6102396102113660046121f7565b6004602052600090815260409020805460019091015460ff821691610100900461ffff169083565b60408051931515845261ffff90921660208401529082015260600161015a565b61013961026736600461229a565b610be8565b61013961108c565b6101396102823660046121f7565b6110a0565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161015a565b6101396102ba366004612312565b6110ca565b6102946102cd366004612347565b61157a565b6101396102e0366004612360565b6115a4565b6101396102f33660046123c1565b6119c2565b6101396103063660046121f7565b611aa2565b61019c61031936600461225d565b611b48565b61013961032c3660046123ff565b611b64565b61029461033f366004612347565b612008565b6101396103523660046121f7565b612018565b6002600154036103825760405162461bcd60e51b815260040161037990612445565b60405180910390fd5b600260015561039083610904565b6103ac5760405162461bcd60e51b81526004016103799061247c565b6000826103f9576001600160a01b038416600090815260036020526040902080546001600160401b0384169081106103e6576103e66124a4565b906000526020600020906007020161043b565b6001600160a01b038416600090815260026020526040902080546001600160401b03841690811061042c5761042c6124a4565b90600052602060002090600702015b6040805161014081018252825460ff80821615158352610100808304909116151560208401526001600160401b03620100008304811694840194909452600160501b909104909216606082015260018301546001600160a01b03908116608083018190526002850154821660a0840152600385015460c0840152600485015460e08401526005850154938301939093526006909301549092166101208301529091503314806104f6575060a08101516001600160a01b031633145b6105385760405162461bcd60e51b815260206004820152601360248201527210d85b98d95b081d5b985d5d1a1bdc9a5e9959606a1b6044820152606401610379565b60008152821561071d5761010081015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b0385169063a9059cbb906044016020604051808303816000875af1158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906124ba565b506001600160a01b038416600090815260026020526040902080548291906001600160401b0385169081106105f1576105f16124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517f9b3589e58cfaae811e95372b148d4048358e808d0c0af452b23f9d4620f8a23e906107109083906124d7565b60405180910390a16108fa565b61012081015160e082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906124ba565b506001600160a01b038416600090815260036020526040902080548291906001600160401b0385169081106107d2576107d26124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517fb95b9053e8e235c5fb04aa72707d183a8eba7f5f7847a660f916fdf159927cc8906108f19083906124d7565b60405180910390a15b5050600180555050565b600080600580548060200260200160405190810160405280929190818152602001828054801561095d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161093f575b505083519394506000925050505b818110156109b857846001600160a01b031683828151811061098f5761098f6124a4565b60200260200101516001600160a01b0316036109b057506001949350505050565b60010161096b565b506000949350505050565b6109cb612091565b6001600160a01b038181166000818152600460208181526040928390208351606081018552815460ff811615158252610100900461ffff169281019290925260010154818401819052600754935163a9059cbb60e01b81529390951691830191909152602482019390935263a9059cbb906044016020604051808303816000875af1158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906124ba565b50600060408083018281526001600160a01b03909416825260046020908152912082518154929093015161ffff166101000262ffff00199315159390931662ffffff19909216919091179190911781559051600190910155565b610ae4612091565b6101f48261ffff1610610b285760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40a8dede40d0d2ced60a31b6044820152606401610379565b6001600160a01b03166000908152600460205260409020805461ffff9092166101000262ffff0019909216919091179055565b60026020528160005260406000208181548110610b7757600080fd5b6000918252602090912060079091020180546001820154600283015460038401546004850154600586015460069096015460ff808716995061010087041697506001600160401b03620100008704811697600160501b90970416956001600160a01b0395861695948516949091168a565b600260015403610c0a5760405162461bcd60e51b815260040161037990612445565b60026001556103e88511610c545760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b610c5d88610904565b610ca05760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0387166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252610d325760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6001600160a01b0389166000818152600260205260409081902054905163cfac414b60e01b815290919063cfac414b90610d7c90339030908d908c908c908c908c906004016125a5565b600060405180830381600087803b158015610d9657600080fd5b505af1158015610daa573d6000803e3d6000fd5b505050506000610dbe8884602001516120eb565b9050600260008c6001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507f3b24c5db8e1f8aaec17cd20d4e148ad8ee3909fd0c9a1f6a86b1e900a49ef6b7604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b031681525060405161107391906124d7565b60405180910390a1505060018055505050505050505050565b611094612091565b61109e6000612121565b565b6110a8612091565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036110ec5760405162461bcd60e51b815260040161037990612445565b60026001556110fa82610904565b6111165760405162461bcd60e51b81526004016103799061247c565b6001600160a01b038216600090815260026020526040812080546001600160401b038416908110611149576111496124a4565b600091825260209182902060408051610140810182526007909302909101805460ff80821615158086526101008084049092161515968601969096526001600160401b03620100008304811694860194909452600160501b909104909216606084015260018101546001600160a01b0390811660808501526002820154811660a0850152600382015460c0850152600482015460e0850152600582015492840192909252600601541661012082015291506112345760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b3360a08201819052600160208301526000825261012082015160e08301516040516323b872dd60e01b8152600481019390935230602484015260448301526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c891906124ba565b508061012001516001600160a01b031663a9059cbb82608001518360c001518460e001516112f691906125fc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136591906124ba565b5060c08101516101208201516001600160a01b03166000908152600460205260408120600101805490919061139b908490612613565b90915550506001600160a01b038316600090815260026020526040902080548291906001600160401b0385169081106113d6576113d66124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e086015160048085019190915585870151600585015561012090960151600690930180549091169282169290921790915591840151905163a9059cbb60e01b81523393810193909352602483015284169063a9059cbb906044016020604051808303816000875af1158015611515573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153991906124ba565b507fb6432e18a59c31eafbe7fea705a495b38ea4992c69bdc678262b38ddc31c2d218160405161156991906124d7565b60405180910390a150506001805550565b6005818154811061158a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600154036115c65760405162461bcd60e51b815260040161037990612445565b60026001556115d486610904565b6115f05760405162461bcd60e51b81526004016103799061247c565b6001600160a01b038616600090815260036020526040812080546001600160401b038816908110611623576116236124a4565b60009182526020909120600790910201805490915060ff166116755760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b60028101546001600160a01b03166116bf5760405162461bcd60e51b815260206004820152600d60248201526c57726f6e67206164647265737360981b6044820152606401610379565b6001810180546001600160a01b03191633908117909155815461ffff19166101001782556002820154600583015460405163cfac414b60e01b81526001600160a01b038b81169463cfac414b946117259491939216918b908b908b908b906004016125a5565b600060405180830381600087803b15801561173f57600080fd5b505af1158015611753573d6000803e3d6000fd5b5050506006820154600383015460048401546001600160a01b03909216925063a9059cbb913391611783916125fc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156117ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f291906124ba565b50600381015460068201546001600160a01b031660009081526004602052604081206001018054909190611827908490612613565b90915550506001600160a01b038716600090815260036020526040902080548291906001600160401b038916908110611862576118626124a4565b600091825260209091208254600790920201805460ff928316151560ff19821681178355845461010090819004909416151590930261ff001990931661ffff19909116179190911780825582546001600160401b036201000091829004811690910269ffffffffffffffff0000198316811784558454600160501b9081900490921690910267ffffffffffffffff60501b1990911662010000600160901b03199092169190911717815560018083015490820180546001600160a01b03199081166001600160a01b03938416179091556002808501549084018054831691841691909117905560038085015490840155600480850154908401556005808501549084015560069384015493909201805490921692169190911790556040517f127e23dc5aa74346dfbee84f2e6e25abf5f06e34ad3beea66e7363e53ff51359906119ad90839061262b565b60405180910390a15050600180555050505050565b6119ca612091565b6001600160a01b03831660009081526004602052604090205460ff16611a3657600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0385161790555b60408051606081018252600180825261ffff94851660208084019182528385019586526001600160a01b0397909716600090815260049097529290952090518154925162ffffff1990931690151562ffff00191617610100929094169190910292909217825551910155565b611aaa612091565b611ab381610904565b15611af65760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610379565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b60036020528160005260406000208181548110610b7757600080fd5b600260015403611b865760405162461bcd60e51b815260040161037990612445565b60026001556103e88111611bd05760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b611bd984610904565b611c1c5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0383166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252611cae5760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015611d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2591906124ba565b506001600160a01b038516600090815260036020908152604082205490830151909190611d539085906120eb565b905060036000886001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507fa23adb6634e58bf746cbb87e2f83ff7c3ba3201ab3f5f6cd04188a2acda98450604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b03168152506040516119ad91906124d7565b6006818154811061158a57600080fd5b612020612091565b6001600160a01b0381166120855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610379565b61208e81612121565b50565b6000546001600160a01b0316331461109e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b6000808261ffff16116120ff57600061211a565b6103e861211061ffff8416856126c2565b61211a91906126e1565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461208e57600080fd5b801515811461208e57600080fd5b80356001600160401b03811681146121ab57600080fd5b919050565b6000806000606084860312156121c557600080fd5b83356121d081612171565b925060208401356121e081612186565b91506121ee60408501612194565b90509250925092565b60006020828403121561220957600080fd5b813561211a81612171565b803561ffff811681146121ab57600080fd5b6000806040838503121561223957600080fd5b61224283612214565b9150602083013561225281612171565b809150509250929050565b6000806040838503121561227057600080fd5b823561227b81612171565b946020939093013593505050565b803560ff811681146121ab57600080fd5b600080600080600080600080610100898b0312156122b757600080fd5b88356122c281612171565b975060208901356122d281612171565b96506040890135955060608901359450608089013593506122f560a08a01612289565b925060c0890135915060e089013590509295985092959890939650565b6000806040838503121561232557600080fd5b823561233081612171565b915061233e60208401612194565b90509250929050565b60006020828403121561235957600080fd5b5035919050565b60008060008060008060c0878903121561237957600080fd5b863561238481612171565b955061239260208801612194565b9450604087013593506123a760608801612289565b92506080870135915060a087013590509295509295509295565b6000806000606084860312156123d657600080fd5b83356123e181612171565b92506123ef60208501612214565b9150604084013590509250925092565b6000806000806080858703121561241557600080fd5b843561242081612171565b9350602085013561243081612171565b93969395505050506040820135916060013590565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d151bdad95b88155b9b1a5cdd195960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124cc57600080fd5b815161211a81612186565b815115158152610140810160208301516124f5602084018215159052565b50604083015161251060408401826001600160401b03169052565b50606083015161252b60608401826001600160401b03169052565b50608083015161254660808401826001600160a01b03169052565b5060a083015161256160a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e08301526101008084015181840152506101208084015161259d828501826001600160a01b03169052565b505092915050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b634e487b7160e01b600052601160045260246000fd5b60008282101561260e5761260e6125e6565b500390565b60008219821115612626576126266125e6565b500190565b815460ff81161515825261014082019061264f6020840160ff8360081c1615159052565b6001600160401b03601082901c8116604085015260509190911c16606083015260018301546001600160a01b0390811660808401526002840154811660a0840152600384015460c0840152600484015460e084015260058401546101008401526006909301549092166101209091015290565b60008160001904831182151516156126dc576126dc6125e6565b500290565b6000826126fe57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122010a13cf6261ffa87954c3a4d8337a1fba370e1c791a42665350c25f27dadde7364736f6c634300080e0033",
    "sourceMap": "309:7159:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4993:861;;;;;;:::i;:::-;;:::i;:::-;;1895:297;;;;;;:::i;:::-;;:::i;:::-;;;1437:14:35;;1430:22;1412:41;;1400:2;1385:18;1895:297:24;;;;;;;;1508:243;;;;;;:::i;:::-;;:::i;2196:183::-;;;;;;:::i;:::-;;:::i;584:55::-;;;;;;:::i;:::-;;:::i;:::-;;;;3164:14:35;;3157:22;3139:41;;3223:14;;3216:22;3211:2;3196:18;;3189:50;-1:-1:-1;;;;;3312:15:35;;;3292:18;;;3285:43;;;;3364:15;;;;3359:2;3344:18;;3337:43;-1:-1:-1;;;;;3455:15:35;;;3449:3;3434:19;;3427:44;3508:15;;;3407:3;3487:19;;3480:44;3555:3;3540:19;;3533:35;3599:3;3584:19;;3577:35;;;;3643:3;3628:19;;3621:35;3693:15;3687:3;3672:19;;3665:44;3126:3;3111:19;584:55:24;2740:975:35;701:55:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3939:14:35;;3932:22;3914:41;;4003:6;3991:19;;;3986:2;3971:18;;3964:47;4027:18;;;4020:34;3902:2;3887:18;701:55:24;3720:340:35;2383:1289:24;;;;;;:::i;:::-;;:::i;1816:101:8:-;;;:::i;1119:102:24:-;;;;;;:::i;:::-;;:::i;1186:85:8:-;1232:7;1258:6;-1:-1:-1;;;;;1258:6:8;1186:85;;;-1:-1:-1;;;;;5198:32:35;;;5180:51;;5168:2;5153:18;1186:85:8;5034:203:35;5858:738:24;;;;;;:::i;:::-;;:::i;761:25::-;;;;;;:::i;:::-;;:::i;6600:866::-;;;;;;:::i;:::-;;:::i;1225:279::-;;;;;;:::i;:::-;;:::i;1755:136::-;;;;;;:::i;:::-;;:::i;643:54::-;;;;;;:::i;:::-;;:::i;3850:1139::-;;;;;;:::i;:::-;;:::i;790:30::-;;;;;;:::i;:::-;;:::i;2066:198:8:-;;;;;;:::i;:::-;;:::i;4993:861:24:-;1744:1:10;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:10;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;5124:22:24::1;5139:5:::0;5124:7:::1;:22::i;:::-;5116:49;;;;-1:-1:-1::0;;;5116:49:24::1;;;;;;;:::i;:::-;5171:30;5204:22;:99;;-1:-1:-1::0;;;;;5274:22:24;::::1;;::::0;;;:15:::1;:22;::::0;;;;:29;;-1:-1:-1;;;;;5274:29:24;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;;;;;;;5204:99;;;-1:-1:-1::0;;;;;5235:23:24;::::1;;::::0;;;:16:::1;:23;::::0;;;;:30;;-1:-1:-1;;;;;5235:30:24;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;;;;;;;5204:99;5171:132;::::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;::::1;::::0;;::::1;;;;::::0;::::1;::::0;-1:-1:-1;;;;;5171:132:24;;::::1;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;5171:132:24;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;5171:132:24;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;5348:10:24::1;5324:34;::::0;:71:::1;;-1:-1:-1::0;5362:19:24::1;::::0;::::1;::::0;-1:-1:-1;;;;;5362:33:24::1;5385:10;5362:33;5324:71;5309:121;;;::::0;-1:-1:-1;;;5309:121:24;;8535:2:35;5309:121:24::1;::::0;::::1;8517:21:35::0;8574:2;8554:18;;;8547:30;-1:-1:-1;;;8593:18:35;;;8586:49;8652:18;;5309:121:24::1;8333:343:35::0;5309:121:24::1;5457:5;5436:26:::0;;5468:382;::::1;;;5539:20;::::0;::::1;::::0;5504:56:::1;::::0;-1:-1:-1;;;5504:56:24;;5527:10:::1;5504:56;::::0;::::1;8855:51:35::0;8922:18;;;8915:34;;;;-1:-1:-1;;;;;5504:22:24;::::1;::::0;::::1;::::0;8828:18:35;;5504:56:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;5568:23:24;::::1;;::::0;;;:16:::1;:23;::::0;;;;:30;;5601:13;;5568:23;-1:-1:-1;;;;;5568:30:24;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:46;;:30:::1;::::0;;;::::1;;:46:::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;5568:46:24;;;;::::1;;-1:-1:-1::0;;5568:46:24;;;;;::::1;::::0;::::1;;::::0;::::1;;-1:-1:-1::0;;;;;;5568:46:24;;-1:-1:-1;;;;;5568:46:24;;::::1;;-1:-1:-1::0;;;;5568:46:24;;-1:-1:-1;;;5568:46:24;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;5568:46:24;::::1;::::0;;-1:-1:-1;;;;;;5568:46:24;;::::1;-1:-1:-1::0;;;;;5568:46:24;;::::1;;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;5627:33;::::1;::::0;::::1;::::0;5646:13;;5627:33:::1;:::i;:::-;;;;;;;;5468:382;;;5681:22;::::0;::::1;::::0;5725:19:::1;::::0;::::1;::::0;5681:64:::1;::::0;-1:-1:-1;;;5681:64:24;;5713:10:::1;5681:64;::::0;::::1;8855:51:35::0;8922:18;;;8915:34;;;;-1:-1:-1;;;;;5681:31:24;;::::1;::::0;::::1;::::0;8828:18:35;;5681:64:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;5753:22:24;::::1;;::::0;;;:15:::1;:22;::::0;;;;:29;;5785:13;;5753:22;-1:-1:-1;;;;;5753:29:24;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:45;;:29:::1;::::0;;;::::1;;:45:::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;5753:45:24;;;;::::1;;-1:-1:-1::0;;5753:45:24;;;;;::::1;::::0;::::1;;::::0;::::1;;-1:-1:-1::0;;;;;;5753:45:24;;-1:-1:-1;;;;;5753:45:24;;::::1;;-1:-1:-1::0;;;;5753:45:24;;-1:-1:-1;;;5753:45:24;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;5753:45:24;::::1;::::0;;-1:-1:-1;;;;;;5753:45:24;;::::1;-1:-1:-1::0;;;;;5753:45:24;;::::1;;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;5811:32;::::1;::::0;::::1;::::0;5829:13;;5811:32:::1;:::i;:::-;;;;;;;;5468:382;-1:-1:-1::0;;1701:1:10;2628:22;;-1:-1:-1;;4993:861:24:o;1895:297::-;1947:4;1959:22;1984:9;1959:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1959:34:24;;;;;;;;;;;;;;;;-1:-1:-1;;2013:13:24;;1959:34;;-1:-1:-1;1999:11:24;;-1:-1:-1;;;2032:138:24;2056:3;2052:1;:7;2032:138;;;2088:5;-1:-1:-1;;;;;2075:18:24;:6;2082:1;2075:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2075:18:24;;2071:54;;-1:-1:-1;2112:4:24;;1895:297;-1:-1:-1;;;;1895:297:24:o;2071:54::-;2152:3;;2032:138;;;-1:-1:-1;2182:5:24;;1895:297;-1:-1:-1;;;;1895:297:24:o;1508:243::-;1079:13:8;:11;:13::i;:::-;-1:-1:-1;;;;;1602:24:24;;::::1;1572:27;1602:24:::0;;;:14:::1;:24;::::0;;;;;;;;1572:54;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;;::::0;;::::1;::::0;::::1;;;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;;1658:10:::1;::::0;1632:52;;-1:-1:-1;;;1632:52:24;;1658:10;;;::::1;1632:52:::0;;::::1;8855:51:35::0;;;;8922:18;;;8915:34;;;;1632:25:24::1;::::0;8828:18:35;;1632:52:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1706:1:24::1;1690:13;::::0;;::::1;:17:::0;;;-1:-1:-1;;;;;1713:24:24;;::::1;::::0;;:14:::1;:24;::::0;;;;;:33;;;;;;;::::1;::::0;::::1;;;;-1:-1:-1::0;;1713:33:24;::::1;;::::0;;;;-1:-1:-1;;1713:33:24;;;;;;;;;;::::1;::::0;;;;;;;::::1;::::0;1508:243::o;2196:183::-;1079:13:8;:11;:13::i;:::-;2301:3:24::1;2285:13;:19;;;2277:44;;;::::0;-1:-1:-1;;;2277:44:24;;10609:2:35;2277:44:24::1;::::0;::::1;10591:21:35::0;10648:2;10628:18;;;10621:30;-1:-1:-1;;;10667:18:35;;;10660:42;10719:18;;2277:44:24::1;10407:336:35::0;2277:44:24::1;-1:-1:-1::0;;;;;2327:24:24::1;;::::0;;;:14:::1;:24;::::0;;;;:47;;::::1;::::0;;::::1;;;-1:-1:-1::0;;2327:47:24;;::::1;::::0;;;::::1;::::0;;2196:183::o;584:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;584:55:24;;;;;-1:-1:-1;;;;;;584:55:24;;;;;;-1:-1:-1;;;584:55:24;;;;;-1:-1:-1;;;;;584:55:24;;;;;;;;;;;;:::o;2383:1289::-;1744:1:10;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:10;;;;;;;:::i;:::-;1744:1;2455:7;:18;2613:4:24::1;2601:16:::0;::::1;2593:46;;;::::0;-1:-1:-1;;;2593:46:24;;10950:2:35;2593:46:24::1;::::0;::::1;10932:21:35::0;10989:2;10969:18;;;10962:30;-1:-1:-1;;;11008:18:35;;;11001:47;11065:18;;2593:46:24::1;10748:341:35::0;2593:46:24::1;2653:22;2668:5;2653:7;:22::i;:::-;2645:55;;;::::0;-1:-1:-1;;;2645:55:24;;11296:2:35;2645:55:24::1;::::0;::::1;11278:21:35::0;11335:2;11315:18;;;11308:30;-1:-1:-1;;;11354:18:35;;;11347:50;11414:18;;2645:55:24::1;11094:344:35::0;2645:55:24::1;-1:-1:-1::0;;;;;2744:30:24;::::1;2706:35;2744:30:::0;;;:14:::1;:30;::::0;;;;;;;;2706:68;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;2780:55:::1;;;::::0;-1:-1:-1;;;2780:55:24;;11645:2:35;2780:55:24::1;::::0;::::1;11627:21:35::0;11684:2;11664:18;;;11657:30;-1:-1:-1;;;11703:18:35;;;11696:52;11765:18;;2780:55:24::1;11443:346:35::0;2780:55:24::1;-1:-1:-1::0;;;;;2863:23:24;::::1;2841:12;2863:23:::0;;;:16:::1;:23;::::0;;;;;;:30;2900:150;;-1:-1:-1;;;2900:150:24;;2863:30;;:23;2900:48:::1;::::0;:150:::1;::::0;2956:10:::1;::::0;2982:4:::1;::::0;2995:6;;3009:8;;3025:1;;3034;;3043;;2900:150:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3086:11;3100:48;3115:9;3126:14;:21;;;3100:14;:48::i;:::-;3086:62;;3154:16;:23;3171:5;-1:-1:-1::0;;;;;3154:23:24::1;-1:-1:-1::0;;;;;3154:23:24::1;;;;;;;;;;;;3190:214;;;;;;;;3209:4;3190:214;;;;;;3223:5;3190:214;;;;;;3238:5;-1:-1:-1::0;;;;;3190:214:24::1;;;;;3260:15;-1:-1:-1::0;;;;;3190:214:24::1;;;;;3286:10;-1:-1:-1::0;;;;;3190:214:24::1;;;;;3314:1;-1:-1:-1::0;;;;;3190:214:24::1;;;;;3326:3;3190:214;;;;3339:9;3190:214;;;;3358:6;3190:214;;;;3381:14;-1:-1:-1::0;;;;;3190:214:24::1;;;::::0;3154:256:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;-1:-1:-1::0;;;;;3154:256:24::1;;;;;;;;3421:246;3447:214;;;;;;;;3466:4;3447:214;;;;;;3480:5;3447:214;;;;;;3495:5;-1:-1:-1::0;;;;;3447:214:24::1;;;;;3517:15;-1:-1:-1::0;;;;;3447:214:24::1;;;;;3543:10;-1:-1:-1::0;;;;;3447:214:24::1;;;;;3571:1;-1:-1:-1::0;;;;;3447:214:24::1;;;;;3583:3;3447:214;;;;3596:9;3447:214;;;;3615:6;3447:214;;;;3638:14;-1:-1:-1::0;;;;;3447:214:24::1;;;::::0;3421:246:::1;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1701:1:10;2628:22;;-1:-1:-1;;;;;;;;;2383:1289:24:o;1816:101:8:-;1079:13;:11;:13::i;:::-;1880:30:::1;1907:1;1880:18;:30::i;:::-;1816:101::o:0;1119:102:24:-;1079:13:8;:11;:13::i;:::-;1190:10:24::1;:26:::0;;-1:-1:-1;;;;;;1190:26:24::1;-1:-1:-1::0;;;;;1190:26:24;;;::::1;::::0;;;::::1;::::0;;1119:102::o;5858:738::-;1744:1:10;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:10;;;;;;;:::i;:::-;1744:1;2455:7;:18;5936:22:24::1;5951:5:::0;5936:7:::1;:22::i;:::-;5928:49;;;;-1:-1:-1::0;;;5928:49:24::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6012:23:24;::::1;5983:26;6012:23:::0;;;:16:::1;:23;::::0;;;;:30;;-1:-1:-1;;;;;6012:30:24;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;5983:59:::1;::::0;;::::1;::::0;::::1;::::0;;6012:30:::1;::::0;;::::1;::::0;;::::1;5983:59:::0;;::::1;::::0;;::::1;;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;;;-1:-1:-1;;;;;5983:59:24;;::::1;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;5983:59:24;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;5983:59:24;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;;::::0;::::1;::::0;;;;;-1:-1:-1;6048:38:24::1;;;::::0;-1:-1:-1;;;6048:38:24;;12671:2:35;6048:38:24::1;::::0;::::1;12653:21:35::0;12710:2;12690:18;;;12683:30;-1:-1:-1;;;12729:18:35;;;12722:41;12780:18;;6048:38:24::1;12469:335:35::0;6048:38:24::1;6110:10;6092:15;::::0;::::1;:28:::0;;;6158:4:::1;6126:29;::::0;::::1;:36:::0;-1:-1:-1;6168:22:24;;6196:18:::1;::::0;::::1;::::0;6255:15:::1;::::0;::::1;::::0;6196:75:::1;::::0;-1:-1:-1;;;6196:75:24;;::::1;::::0;::::1;13049:34:35::0;;;;6248:4:24::1;13099:18:35::0;;;13092:43;13151:18;;;13144:34;-1:-1:-1;;;;;6196:31:24::1;::::0;::::1;::::0;12984:18:35;;6196:75:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6277:9;:18;;;-1:-1:-1::0;;;;;6277:27:24::1;;6312:9;:16;;;6354:9;:13;;;6336:9;:15;;;:31;;;;:::i;:::-;6277:96;::::0;-1:-1:-1;;;;;;6277:96:24::1;::::0;;;;;;-1:-1:-1;;;;;8873:32:35;;;6277:96:24::1;::::0;::::1;8855:51:35::0;8922:18;;;8915:34;8828:18;;6277:96:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6433:13:24::1;::::0;::::1;::::0;6402:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;6379:43:24::1;;::::0;;;:14:::1;:43;::::0;;;;:50:::1;;:67:::0;;:50;;:43;:67:::1;::::0;6433:13;;6379:67:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;6452:23:24;::::1;;::::0;;;:16:::1;:23;::::0;;;;:30;;6485:9;;6452:23;-1:-1:-1;;;;;6452:30:24;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:42;;:30:::1;::::0;;;::::1;;:42:::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;6452:42:24;;;;::::1;;-1:-1:-1::0;;6452:42:24;;;;;::::1;::::0;::::1;;::::0;::::1;;-1:-1:-1::0;;;;;;6452:42:24;;-1:-1:-1;;;;;6452:42:24;;::::1;;-1:-1:-1::0;;;;6452:42:24;;-1:-1:-1;;;6452:42:24;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;6452:42:24;::::1;::::0;;-1:-1:-1;;;;;;6452:42:24;;::::1;-1:-1:-1::0;;;;;6452:42:24;;::::1;;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;6535:16;;::::1;::::0;6500:52;;-1:-1:-1;;;6500:52:24;;6523:10:::1;6500:52:::0;;::::1;8855:51:35::0;;;;8922:18;;;8915:34;6500:22:24;::::1;::::0;::::1;::::0;8828:18:35;;6500:52:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6563:28;6581:9;6563:28;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1701:1:10;2628:22;;-1:-1:-1;5858:738:24:o;761:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;761:25:24;;-1:-1:-1;761:25:24;:::o;6600:866::-;1744:1:10;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:10;;;;;;;:::i;:::-;1744:1;2455:7;:18;6756:22:24::1;6771:5:::0;6756:7:::1;:22::i;:::-;6748:49;;;;-1:-1:-1::0;;;6748:49:24::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6832:22:24;::::1;6803:26;6832:22:::0;;;:15:::1;:22;::::0;;;;:29;;-1:-1:-1;;;;;6832:29:24;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;6875:13:::0;;6832:29;;-1:-1:-1;6875:13:24::1;;6867:37;;;::::0;-1:-1:-1;;;6867:37:24;;12671:2:35;6867:37:24::1;::::0;::::1;12653:21:35::0;12710:2;12690:18;;;12683:30;-1:-1:-1;;;12729:18:35;;;12722:41;12780:18;;6867:37:24::1;12469:335:35::0;6867:37:24::1;6918:14;::::0;::::1;::::0;-1:-1:-1;;;;;6918:14:24::1;6910:54;;;::::0;-1:-1:-1;;;6910:54:24;;13786:2:35;6910:54:24::1;::::0;::::1;13768:21:35::0;13825:2;13805:18;;;13798:30;-1:-1:-1;;;13844:18:35;;;13837:43;13897:18;;6910:54:24::1;13584:337:35::0;6910:54:24::1;6970:15;::::0;::::1;:28:::0;;-1:-1:-1;;;;;;6970:28:24::1;6988:10;6970:28:::0;;::::1;::::0;;;7004:35;;-1:-1:-1;;7045:21:24;6970:28:::1;7045:21:::0;;;7146:14:::1;::::0;::::1;::::0;7168:15:::1;::::0;::::1;::::0;7072:160:::1;::::0;-1:-1:-1;;;7072:160:24;;-1:-1:-1;;;;;7072:48:24;;::::1;::::0;::::1;::::0;:160:::1;::::0;6988:10;;7146:14;::::1;::::0;7191:8;;7207:1;;7216;;7225;;7072:160:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;7238:17:24::1;::::0;::::1;::::0;7294:12:::1;::::0;::::1;::::0;7277:14:::1;::::0;::::1;::::0;-1:-1:-1;;;;;7238:17:24;;::::1;::::0;-1:-1:-1;7238:26:24::1;::::0;7265:10:::1;::::0;7277:29:::1;::::0;::::1;:::i;:::-;7238:69;::::0;-1:-1:-1;;;;;;7238:69:24::1;::::0;;;;;;-1:-1:-1;;;;;8873:32:35;;;7238:69:24::1;::::0;::::1;8855:51:35::0;8922:18;;;8915:34;8828:18;;7238:69:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7366:12:24::1;::::0;::::1;::::0;7336:17:::1;::::0;::::1;::::0;-1:-1:-1;;;;;7336:17:24::1;7313:42;::::0;;;:14:::1;:42;::::0;;;;7336:17;7313:49:::1;:65:::0;;:49;;:42;:65:::1;::::0;7366:12;;7313:65:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;7384:22:24;::::1;;::::0;;;:15:::1;:22;::::0;;;;:29;;7416:8;;7384:22;-1:-1:-1;;;;;7384:29:24;::::1;::::0;;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:40;;:29:::1;::::0;;::::1;;:40:::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;7384:40:24;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;-1:-1:-1::0;;7384:40:24;;;-1:-1:-1;;7384:40:24;;;;;;;::::1;::::0;;;;;-1:-1:-1;;;;;7384:40:24;;;;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;7384:40:24;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7384:40:24;;;::::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;;7384:40:24;;;-1:-1:-1;;;;;;7384:40:24;;;;;;;::::1;::::0;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;7384:40:24;;::::1;-1:-1:-1::0;;;;;7384:40:24;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;7435:26:::1;::::0;::::1;::::0;::::1;::::0;7452:8;;7435:26:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;1701:1:10;2628:22;;-1:-1:-1;;;;;6600:866:24:o;1225:279::-;1079:13:8;:11;:13::i;:::-;-1:-1:-1;;;;;1344:27:24;::::1;;::::0;;;:14:::1;:27;::::0;;;;:33;::::1;;1339:90;;1387:9;:35:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1387:35:24;;;;;::::1;::::0;;-1:-1:-1;;;;;;1387:35:24::1;-1:-1:-1::0;;;;;1387:35:24;::::1;;::::0;;1339:90:::1;1464:35;::::0;;::::1;::::0;::::1;::::0;;1478:4:::1;1464:35:::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;1434:27:24;;;::::1;-1:-1:-1::0;1434:27:24;;;:14:::1;:27:::0;;;;;;;:65;;;;;;-1:-1:-1;;1434:65:24;;;;::::1;;-1:-1:-1::0;;1434:65:24;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;1225:279::o;1755:136::-;1079:13:8;:11;:13::i;:::-;1821:14:24::1;1829:5;1821:7;:14::i;:::-;1820:15;1812:47;;;::::0;-1:-1:-1;;;1812:47:24;;15521:2:35;1812:47:24::1;::::0;::::1;15503:21:35::0;15560:2;15540:18;;;15533:30;-1:-1:-1;;;15579:18:35;;;15572:49;15638:18;;1812:47:24::1;15319:343:35::0;1812:47:24::1;1865:9;:21:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1865:21:24;;;;;::::1;::::0;;-1:-1:-1;;;;;;1865:21:24::1;-1:-1:-1::0;;;;;1865:21:24;;;::::1;::::0;;;::::1;::::0;;1755:136::o;643:54::-;;;;;;;;;;;;;;;;;;;;3850:1139;1744:1:10;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:10;;;;;;;:::i;:::-;1744:1;2455:7;:18;4014:4:24::1;4002:16:::0;::::1;3994:46;;;::::0;-1:-1:-1;;;3994:46:24;;10950:2:35;3994:46:24::1;::::0;::::1;10932:21:35::0;10989:2;10969:18;;;10962:30;-1:-1:-1;;;11008:18:35;;;11001:47;11065:18;;3994:46:24::1;10748:341:35::0;3994:46:24::1;4054:22;4069:5;4054:7;:22::i;:::-;4046:55;;;::::0;-1:-1:-1;;;4046:55:24;;11296:2:35;4046:55:24::1;::::0;::::1;11278:21:35::0;11335:2;11315:18;;;11308:30;-1:-1:-1;;;11354:18:35;;;11347:50;11414:18;;4046:55:24::1;11094:344:35::0;4046:55:24::1;-1:-1:-1::0;;;;;4145:30:24;::::1;4107:35;4145:30:::0;;;:14:::1;:30;::::0;;;;;;;;4107:68;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;;;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;4181:55:::1;;;::::0;-1:-1:-1;;;4181:55:24;;11645:2:35;4181:55:24::1;::::0;::::1;11627:21:35::0;11684:2;11664:18;;;11657:30;-1:-1:-1;;;11703:18:35;;;11696:52;11765:18;;4181:55:24::1;11443:346:35::0;4181:55:24::1;4242:73;::::0;-1:-1:-1;;;4242:73:24;;4278:10:::1;4242:73;::::0;::::1;13049:34:35::0;4298:4:24::1;13099:18:35::0;;;13092:43;13151:18;;;13144:34;;;-1:-1:-1;;;;;4242:35:24;::::1;::::0;::::1;::::0;12984:18:35;;4242:73:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;4369:22:24;::::1;4347:12;4369:22:::0;;;:15:::1;:22;::::0;;;;;;:29;4445:21;;::::1;::::0;4369:29;;4347:12;4419:48:::1;::::0;4434:9;;4419:14:::1;:48::i;:::-;4405:62;;4473:15;:22;4489:5;-1:-1:-1::0;;;;;4473:22:24::1;-1:-1:-1::0;;;;;4473:22:24::1;;;;;;;;;;;;4508:214;;;;;;;;4527:4;4508:214;;;;;;4541:5;4508:214;;;;;;4556:5;-1:-1:-1::0;;;;;4508:214:24::1;;;;;4578:15;-1:-1:-1::0;;;;;4508:214:24::1;;;;;4612:1;-1:-1:-1::0;;;;;4508:214:24::1;;;;;4624:10;-1:-1:-1::0;;;;;4508:214:24::1;;;;;4644:3;4508:214;;;;4657:9;4508:214;;;;4676:6;4508:214;;;;4699:14;-1:-1:-1::0;;;;;4508:214:24::1;;;::::0;4473:255:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;-1:-1:-1::0;;;;;4473:255:24::1;;;;;;;;4739:245;4764:214;;;;;;;;4783:4;4764:214;;;;;;4797:5;4764:214;;;;;;4812:5;-1:-1:-1::0;;;;;4764:214:24::1;;;;;4834:15;-1:-1:-1::0;;;;;4764:214:24::1;;;;;4868:1;-1:-1:-1::0;;;;;4764:214:24::1;;;;;4880:10;-1:-1:-1::0;;;;;4764:214:24::1;;;;;4900:3;4764:214;;;;4913:9;4764:214;;;;4932:6;4764:214;;;;4955:14;-1:-1:-1::0;;;;;4764:214:24::1;;;::::0;4739:245:::1;;;;;;:::i;790:30::-:0;;;;;;;;;;;;2066:198:8;1079:13;:11;:13::i;:::-;-1:-1:-1;;;;;2154:22:8;::::1;2146:73;;;::::0;-1:-1:-1;;;2146:73:8;;15869:2:35;2146:73:8::1;::::0;::::1;15851:21:35::0;15908:2;15888:18;;;15881:30;15947:34;15927:18;;;15920:62;-1:-1:-1;;;15998:18:35;;;15991:36;16044:19;;2146:73:8::1;15667:402:35::0;2146:73:8::1;2229:28;2248:8;2229:18;:28::i;:::-;2066:198:::0;:::o;1344:130::-;1232:7;1258:6;-1:-1:-1;;;;;1258:6:8;719:10:16;1407:23:8;1399:68;;;;-1:-1:-1;;;1399:68:8;;16276:2:35;1399:68:8;;;16258:21:35;;;16295:18;;;16288:30;16354:34;16334:18;;;16327:62;16406:18;;1399:68:8;16074:356:35;3676:170:24;3765:11;3801:1;3792:6;:10;;;:49;;3840:1;3792:49;;;3833:4;3806:23;3814:15;;;3806:5;:23;:::i;:::-;3805:32;;;;:::i;:::-;3786:55;3676:170;-1:-1:-1;;;3676:170:24:o;2418:187:8:-;2491:16;2510:6;;-1:-1:-1;;;;;2526:17:8;;;-1:-1:-1;;;;;;2526:17:8;;;;;;2558:40;;2510:6;;;;;;;2558:40;;2491:16;2558:40;2481:124;2418:187;:::o;14:131:35:-;-1:-1:-1;;;;;89:31:35;;79:42;;69:70;;135:1;132;125:12;150:118;236:5;229:13;222:21;215:5;212:32;202:60;;258:1;255;248:12;273:171;340:20;;-1:-1:-1;;;;;389:30:35;;379:41;;369:69;;434:1;431;424:12;369:69;273:171;;;:::o;449:454::-;522:6;530;538;591:2;579:9;570:7;566:23;562:32;559:52;;;607:1;604;597:12;559:52;646:9;633:23;665:31;690:5;665:31;:::i;:::-;715:5;-1:-1:-1;772:2:35;757:18;;744:32;785:30;744:32;785:30;:::i;:::-;834:7;-1:-1:-1;860:37:35;893:2;878:18;;860:37;:::i;:::-;850:47;;449:454;;;;;:::o;908:263::-;983:6;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;1091:9;1078:23;1110:31;1135:5;1110:31;:::i;1716:159::-;1783:20;;1843:6;1832:18;;1822:29;;1812:57;;1865:1;1862;1855:12;1880:319;1947:6;1955;2008:2;1996:9;1987:7;1983:23;1979:32;1976:52;;;2024:1;2021;2014:12;1976:52;2047:28;2065:9;2047:28;:::i;:::-;2037:38;;2125:2;2114:9;2110:18;2097:32;2138:31;2163:5;2138:31;:::i;:::-;2188:5;2178:15;;;1880:319;;;;;:::o;2204:315::-;2272:6;2280;2333:2;2321:9;2312:7;2308:23;2304:32;2301:52;;;2349:1;2346;2339:12;2301:52;2388:9;2375:23;2407:31;2432:5;2407:31;:::i;:::-;2457:5;2509:2;2494:18;;;;2481:32;;-1:-1:-1;;;2204:315:35:o;4065:156::-;4131:20;;4191:4;4180:16;;4170:27;;4160:55;;4211:1;4208;4201:12;4226:803;4346:6;4354;4362;4370;4378;4386;4394;4402;4455:3;4443:9;4434:7;4430:23;4426:33;4423:53;;;4472:1;4469;4462:12;4423:53;4511:9;4498:23;4530:31;4555:5;4530:31;:::i;:::-;4580:5;-1:-1:-1;4637:2:35;4622:18;;4609:32;4650:33;4609:32;4650:33;:::i;:::-;4702:7;-1:-1:-1;4756:2:35;4741:18;;4728:32;;-1:-1:-1;4807:2:35;4792:18;;4779:32;;-1:-1:-1;4858:3:35;4843:19;;4830:33;;-1:-1:-1;4882:37:35;4914:3;4899:19;;4882:37;:::i;:::-;4872:47;;4966:3;4955:9;4951:19;4938:33;4928:43;;5018:3;5007:9;5003:19;4990:33;4980:43;;4226:803;;;;;;;;;;;:::o;5242:319::-;5309:6;5317;5370:2;5358:9;5349:7;5345:23;5341:32;5338:52;;;5386:1;5383;5376:12;5338:52;5425:9;5412:23;5444:31;5469:5;5444:31;:::i;:::-;5494:5;-1:-1:-1;5518:37:35;5551:2;5536:18;;5518:37;:::i;:::-;5508:47;;5242:319;;;;;:::o;5566:180::-;5625:6;5678:2;5666:9;5657:7;5653:23;5649:32;5646:52;;;5694:1;5691;5684:12;5646:52;-1:-1:-1;5717:23:35;;5566:180;-1:-1:-1;5566:180:35:o;5975:596::-;6076:6;6084;6092;6100;6108;6116;6169:3;6157:9;6148:7;6144:23;6140:33;6137:53;;;6186:1;6183;6176:12;6137:53;6225:9;6212:23;6244:31;6269:5;6244:31;:::i;:::-;6294:5;-1:-1:-1;6318:37:35;6351:2;6336:18;;6318:37;:::i;:::-;6308:47;;6402:2;6391:9;6387:18;6374:32;6364:42;;6425:36;6457:2;6446:9;6442:18;6425:36;:::i;:::-;6415:46;;6508:3;6497:9;6493:19;6480:33;6470:43;;6560:3;6549:9;6545:19;6532:33;6522:43;;5975:596;;;;;;;;:::o;6576:387::-;6652:6;6660;6668;6721:2;6709:9;6700:7;6696:23;6692:32;6689:52;;;6737:1;6734;6727:12;6689:52;6776:9;6763:23;6795:31;6820:5;6795:31;:::i;:::-;6845:5;-1:-1:-1;6869:37:35;6902:2;6887:18;;6869:37;:::i;:::-;6859:47;;6953:2;6942:9;6938:18;6925:32;6915:42;;6576:387;;;;;:::o;6968:525::-;7054:6;7062;7070;7078;7131:3;7119:9;7110:7;7106:23;7102:33;7099:53;;;7148:1;7145;7138:12;7099:53;7187:9;7174:23;7206:31;7231:5;7206:31;:::i;:::-;7256:5;-1:-1:-1;7313:2:35;7298:18;;7285:32;7326:33;7285:32;7326:33;:::i;:::-;6968:525;;7378:7;;-1:-1:-1;;;;7432:2:35;7417:18;;7404:32;;7483:2;7468:18;7455:32;;6968:525::o;7498:355::-;7700:2;7682:21;;;7739:2;7719:18;;;7712:30;7778:33;7773:2;7758:18;;7751:61;7844:2;7829:18;;7498:355::o;7858:338::-;8060:2;8042:21;;;8099:2;8079:18;;;8072:30;-1:-1:-1;;;8133:2:35;8118:18;;8111:44;8187:2;8172:18;;7858:338::o;8201:127::-;8262:10;8257:3;8253:20;8250:1;8243:31;8293:4;8290:1;8283:15;8317:4;8314:1;8307:15;8960:245;9027:6;9080:2;9068:9;9059:7;9055:23;9051:32;9048:52;;;9096:1;9093;9086:12;9048:52;9128:9;9122:16;9147:28;9169:5;9147:28;:::i;9210:1192::-;9429:13;;1246;1239:21;1227:34;;9400:3;9385:19;;9501:4;9493:6;9489:17;9483:24;9516:51;9561:4;9550:9;9546:20;9532:12;1246:13;1239:21;1227:34;;1176:91;9516:51;;9616:4;9608:6;9604:17;9598:24;9631:55;9680:4;9669:9;9665:20;9649:14;-1:-1:-1;;;;;2589:30:35;2577:43;;2524:102;9631:55;;9735:4;9727:6;9723:17;9717:24;9750:55;9799:4;9788:9;9784:20;9768:14;-1:-1:-1;;;;;2589:30:35;2577:43;;2524:102;9750:55;;9854:4;9846:6;9842:17;9836:24;9869:56;9919:4;9908:9;9904:20;9888:14;-1:-1:-1;;;;;2697:31:35;2685:44;;2631:104;9869:56;;9974:4;9966:6;9962:17;9956:24;9989:56;10039:4;10028:9;10024:20;10008:14;-1:-1:-1;;;;;2697:31:35;2685:44;;2631:104;9989:56;;10101:4;10093:6;10089:17;10083:24;10076:4;10065:9;10061:20;10054:54;10164:4;10156:6;10152:17;10146:24;10139:4;10128:9;10124:20;10117:54;10190:6;10250:2;10242:6;10238:15;10232:22;10227:2;10216:9;10212:18;10205:50;;10274:6;10329:2;10321:6;10317:15;10311:22;10342:54;10392:2;10381:9;10377:18;10361:14;-1:-1:-1;;;;;2697:31:35;2685:44;;2631:104;10342:54;;;9210:1192;;;;:::o;11794:670::-;-1:-1:-1;;;;;12161:15:35;;;12143:34;;12213:15;;;;12208:2;12193:18;;12186:43;12260:2;12245:18;;12238:34;;;;12303:2;12288:18;;12281:34;;;;12364:4;12352:17;12346:3;12331:19;;12324:46;12123:3;12386:19;;12379:35;12445:3;12430:19;;12423:35;;;;12092:3;12077:19;;11794:670::o;13189:127::-;13250:10;13245:3;13241:20;13238:1;13231:31;13281:4;13278:1;13271:15;13305:4;13302:1;13295:15;13321:125;13361:4;13389:1;13386;13383:8;13380:34;;;13394:18;;:::i;:::-;-1:-1:-1;13431:9:35;;13321:125::o;13451:128::-;13491:3;13522:1;13518:6;13515:1;13512:13;13509:39;;;13528:18;;:::i;:::-;-1:-1:-1;13564:9:35;;13451:128::o;14069:1245::-;14290:13;;14343:4;14328:20;;1246:13;1239:21;1227:34;;14260:3;14245:19;;;14369:67;14430:4;14419:9;14415:20;14408:4;14396:9;14393:1;14389:17;14385:28;1246:13;1239:21;1227:34;;1176:91;14369:67;-1:-1:-1;;;;;14508:2:35;14504:18;;;14500:27;;14544:4;14529:20;;2577:43;14585:2;14581:18;;;;14577:27;14621:4;14606:20;;2577:43;14717:4;14705:17;;14699:24;-1:-1:-1;;;;;14022:36:35;;;14781:4;14766:20;;2685:44;14879:4;14867:17;;14861:24;14022:36;;14945:4;14930:20;;2685:44;15007:4;14995:17;;14989:24;14982:4;14967:20;;14960:54;15070:4;15058:17;;15052:24;15045:4;15030:20;;15023:54;15135:4;15123:17;;15117:24;15108:6;15093:22;;15086:56;15234:4;15222:17;;;15216:24;14022:36;;;15300:6;15285:22;;;2685:44;14022:36;14069:1245::o;16435:168::-;16475:7;16541:1;16537;16533:6;16529:14;16526:1;16523:21;16518:1;16511:9;16504:17;16500:45;16497:71;;;16548:18;;:::i;:::-;-1:-1:-1;16588:9:35;;16435:168::o;16608:217::-;16648:1;16674;16664:132;;16718:10;16713:3;16709:20;16706:1;16699:31;16753:4;16750:1;16743:15;16781:4;16778:1;16771:15;16664:132;-1:-1:-1;16810:9:35;;16608:217::o",
>>>>>>> optimisation
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addToken(address)": "d48bfca7",
    "buy(address,uint64)": "9a83aa8b",
    "buyOrderByToken(address,uint256)": "d59a83bb",
    "cancelOrder(address,bool,uint64)": "08b4e2a6",
    "currenciesUsed(uint256)": "f110fb56",
    "currencyInfosByAddress(address)": "dc48dfc0",
    "initBuyOrder(address,address,uint256,uint256)": "de8645e6",
    "initSellOrder(address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)": "6bdf6b39",
    "isToken(address)": "19f37361",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "sell(address,uint64,uint256,uint8,bytes32,bytes32)": "d28c3a9b",
    "sellOrderByToken(address,uint256)": "4303d9d9",
    "setCurrency(address,uint16,uint256)": "d38d0b45",
    "setFee(uint16,address)": "30f738be",
    "setFeeAddress(address)": "8705fcd4",
    "tokenList(uint256)": "9ead7222",
    "transferOwnership(address)": "f2fde38b",
    "withdrawFee(address)": "1ac3ddeb"
  },
  "ast": {
    "absolutePath": "src/OTC.sol",
<<<<<<< HEAD
    "id": 23789,
=======
    "id": 24571,
>>>>>>> optimisation
    "exportedSymbols": {
      "Context": [
        22416
      ],
      "CurrencyInfos": [
        25035
      ],
      "IERC20": [
        22161
      ],
      "IERC20Permit": [
        22394
      ],
      "IOTC": [
<<<<<<< HEAD
        25157
      ],
      "IPropertyToken": [
        24182
      ],
      "OTC": [
        23788
      ],
      "OrderInfo": [
        25028
=======
        27001
      ],
      "IPropertyToken": [
        25869
      ],
      "OTC": [
        24570
>>>>>>> optimisation
      ],
      "Ownable": [
        21396
      ],
      "ReentrancyGuard": [
<<<<<<< HEAD
        21043
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:7510:19",
=======
        21497
      ],
      "Step": [
        25781
      ],
      "Variables": [
        25796
      ],
      "currencyInfos": [
        26887
      ],
      "orderInfo": [
        26880
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:7432:24",
>>>>>>> optimisation
    "nodes": [
      {
        "id": 23646,
        "nodeType": "PragmaDirective",
        "src": "37:24:24",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 23647,
        "nodeType": "ImportDirective",
        "src": "63:62:24",
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 23789,
        "sourceUnit": 21044,
=======
        "scope": 24571,
        "sourceUnit": 21498,
>>>>>>> optimisation
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23648,
        "nodeType": "ImportDirective",
        "src": "126:56:24",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 23789,
        "sourceUnit": 21708,
=======
        "scope": 24571,
        "sourceUnit": 22162,
>>>>>>> optimisation
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23649,
        "nodeType": "ImportDirective",
        "src": "183:52:24",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 23789,
        "sourceUnit": 21004,
=======
        "scope": 24571,
        "sourceUnit": 21397,
>>>>>>> optimisation
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23650,
        "nodeType": "ImportDirective",
        "src": "236:40:24",
        "absolutePath": "src/interface/IPropertyToken.sol",
        "file": "./interface/IPropertyToken.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 23789,
        "sourceUnit": 24183,
=======
        "scope": 24571,
        "sourceUnit": 25870,
>>>>>>> optimisation
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23651,
        "nodeType": "ImportDirective",
        "src": "277:30:24",
        "absolutePath": "src/interface/IOTC.sol",
        "file": "./interface/IOTC.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 23789,
        "sourceUnit": 25158,
=======
        "scope": 24571,
        "sourceUnit": 27002,
>>>>>>> optimisation
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 23788,
        "nodeType": "ContractDefinition",
        "src": "309:7237:19",
=======
        "id": 24570,
        "nodeType": "ContractDefinition",
        "src": "309:7159:24",
>>>>>>> optimisation
        "nodes": [
          {
            "id": 23660,
            "nodeType": "EventDefinition",
            "src": "354:36:24",
            "anonymous": false,
            "eventSelector": "3b24c5db8e1f8aaec17cd20d4e148ad8ee3909fd0c9a1f6a86b1e900a49ef6b7",
            "name": "SellOrderInitiated",
            "nameLocation": "360:18:24",
            "parameters": {
              "id": 23659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23658,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23660,
                  "src": "379:9:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                    "typeString": "struct OrderInfo"
=======
                    "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                    "typeString": "struct orderInfo"
>>>>>>> optimisation
                  },
                  "typeName": {
                    "id": 23657,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
<<<<<<< HEAD
                      "id": 22874,
                      "name": "OrderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25028,
                      "src": "379:9:19"
                    },
                    "referencedDeclaration": 25028,
                    "src": "379:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                      "typeString": "struct OrderInfo"
=======
                      "id": 23656,
                      "name": "orderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26880,
                      "src": "379:9:24"
                    },
                    "referencedDeclaration": 26880,
                    "src": "379:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                      "typeString": "struct orderInfo"
>>>>>>> optimisation
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "378:11:24"
            }
          },
          {
            "id": 23665,
            "nodeType": "EventDefinition",
            "src": "393:36:24",
            "anonymous": false,
            "eventSelector": "9b3589e58cfaae811e95372b148d4048358e808d0c0af452b23f9d4620f8a23e",
            "name": "SellOrderCancelled",
            "nameLocation": "399:18:24",
            "parameters": {
              "id": 23664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23663,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23665,
                  "src": "418:9:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                    "typeString": "struct OrderInfo"
=======
                    "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                    "typeString": "struct orderInfo"
>>>>>>> optimisation
                  },
                  "typeName": {
                    "id": 23662,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
<<<<<<< HEAD
                      "id": 22879,
                      "name": "OrderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25028,
                      "src": "418:9:19"
                    },
                    "referencedDeclaration": 25028,
                    "src": "418:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                      "typeString": "struct OrderInfo"
=======
                      "id": 23661,
                      "name": "orderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26880,
                      "src": "418:9:24"
                    },
                    "referencedDeclaration": 26880,
                    "src": "418:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                      "typeString": "struct orderInfo"
>>>>>>> optimisation
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "417:11:24"
            }
          },
          {
            "id": 23670,
            "nodeType": "EventDefinition",
            "src": "432:35:24",
            "anonymous": false,
            "eventSelector": "b6432e18a59c31eafbe7fea705a495b38ea4992c69bdc678262b38ddc31c2d21",
            "name": "SellOrderAccepted",
            "nameLocation": "438:17:24",
            "parameters": {
              "id": 23669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23668,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23670,
                  "src": "456:9:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                    "typeString": "struct OrderInfo"
=======
                    "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                    "typeString": "struct orderInfo"
>>>>>>> optimisation
                  },
                  "typeName": {
                    "id": 23667,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
<<<<<<< HEAD
                      "id": 22884,
                      "name": "OrderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25028,
                      "src": "456:9:19"
                    },
                    "referencedDeclaration": 25028,
                    "src": "456:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                      "typeString": "struct OrderInfo"
=======
                      "id": 23666,
                      "name": "orderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26880,
                      "src": "456:9:24"
                    },
                    "referencedDeclaration": 26880,
                    "src": "456:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                      "typeString": "struct orderInfo"
>>>>>>> optimisation
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:11:24"
            }
          },
          {
            "id": 23675,
            "nodeType": "EventDefinition",
            "src": "470:35:24",
            "anonymous": false,
            "eventSelector": "a23adb6634e58bf746cbb87e2f83ff7c3ba3201ab3f5f6cd04188a2acda98450",
            "name": "BuyOrderInitiated",
            "nameLocation": "476:17:24",
            "parameters": {
              "id": 23674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23673,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23675,
                  "src": "494:9:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                    "typeString": "struct OrderInfo"
=======
                    "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                    "typeString": "struct orderInfo"
>>>>>>> optimisation
                  },
                  "typeName": {
                    "id": 23672,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
<<<<<<< HEAD
                      "id": 22889,
                      "name": "OrderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25028,
                      "src": "494:9:19"
                    },
                    "referencedDeclaration": 25028,
                    "src": "494:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                      "typeString": "struct OrderInfo"
=======
                      "id": 23671,
                      "name": "orderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26880,
                      "src": "494:9:24"
                    },
                    "referencedDeclaration": 26880,
                    "src": "494:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                      "typeString": "struct orderInfo"
>>>>>>> optimisation
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "493:11:24"
            }
          },
          {
            "id": 23680,
            "nodeType": "EventDefinition",
            "src": "508:35:24",
            "anonymous": false,
            "eventSelector": "b95b9053e8e235c5fb04aa72707d183a8eba7f5f7847a660f916fdf159927cc8",
            "name": "BuyOrderCancelled",
            "nameLocation": "514:17:24",
            "parameters": {
              "id": 23679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23678,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23680,
                  "src": "532:9:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                    "typeString": "struct OrderInfo"
=======
                    "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                    "typeString": "struct orderInfo"
>>>>>>> optimisation
                  },
                  "typeName": {
                    "id": 23677,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
<<<<<<< HEAD
                      "id": 22894,
                      "name": "OrderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25028,
                      "src": "532:9:19"
                    },
                    "referencedDeclaration": 25028,
                    "src": "532:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                      "typeString": "struct OrderInfo"
=======
                      "id": 23676,
                      "name": "orderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26880,
                      "src": "532:9:24"
                    },
                    "referencedDeclaration": 26880,
                    "src": "532:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                      "typeString": "struct orderInfo"
>>>>>>> optimisation
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "531:11:24"
            }
          },
          {
            "id": 23685,
            "nodeType": "EventDefinition",
            "src": "546:34:24",
            "anonymous": false,
            "eventSelector": "127e23dc5aa74346dfbee84f2e6e25abf5f06e34ad3beea66e7363e53ff51359",
            "name": "BuyOrderAccepted",
            "nameLocation": "552:16:24",
            "parameters": {
              "id": 23684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23683,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23685,
                  "src": "569:9:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                    "typeString": "struct OrderInfo"
=======
                    "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                    "typeString": "struct orderInfo"
>>>>>>> optimisation
                  },
                  "typeName": {
                    "id": 23682,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
<<<<<<< HEAD
                      "id": 22899,
                      "name": "OrderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25028,
                      "src": "569:9:19"
                    },
                    "referencedDeclaration": 25028,
                    "src": "569:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                      "typeString": "struct OrderInfo"
=======
                      "id": 23681,
                      "name": "orderInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26880,
                      "src": "569:9:24"
                    },
                    "referencedDeclaration": 26880,
                    "src": "569:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                      "typeString": "struct orderInfo"
>>>>>>> optimisation
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "568:11:24"
            }
          },
          {
            "id": 23691,
            "nodeType": "VariableDeclaration",
            "src": "584:55:24",
            "constant": false,
            "functionSelector": "4303d9d9",
            "mutability": "mutable",
            "name": "sellOrderByToken",
<<<<<<< HEAD
            "nameLocation": "623:16:19",
            "scope": 23788,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct OrderInfo[])"
=======
            "nameLocation": "623:16:24",
            "scope": 24570,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct orderInfo[])"
>>>>>>> optimisation
            },
            "typeName": {
              "id": 23690,
              "keyType": {
                "id": 23686,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "592:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "584:31:24",
              "typeDescriptions": {
<<<<<<< HEAD
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct OrderInfo[])"
=======
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct orderInfo[])"
>>>>>>> optimisation
              },
              "valueType": {
                "baseType": {
                  "id": 23688,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
<<<<<<< HEAD
                    "id": 22905,
                    "name": "OrderInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 25028,
                    "src": "603:9:19"
                  },
                  "referencedDeclaration": 25028,
                  "src": "603:9:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                    "typeString": "struct OrderInfo"
=======
                    "id": 23687,
                    "name": "orderInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 26880,
                    "src": "603:9:24"
                  },
                  "referencedDeclaration": 26880,
                  "src": "603:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                    "typeString": "struct orderInfo"
>>>>>>> optimisation
                  }
                },
                "id": 23689,
                "nodeType": "ArrayTypeName",
                "src": "603:11:24",
                "typeDescriptions": {
<<<<<<< HEAD
                  "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_ptr",
                  "typeString": "struct OrderInfo[]"
=======
                  "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_ptr",
                  "typeString": "struct orderInfo[]"
>>>>>>> optimisation
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 23697,
            "nodeType": "VariableDeclaration",
            "src": "643:54:24",
            "constant": false,
            "functionSelector": "d59a83bb",
            "mutability": "mutable",
            "name": "buyOrderByToken",
<<<<<<< HEAD
            "nameLocation": "682:15:19",
            "scope": 23788,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct OrderInfo[])"
=======
            "nameLocation": "682:15:24",
            "scope": 24570,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct orderInfo[])"
>>>>>>> optimisation
            },
            "typeName": {
              "id": 23696,
              "keyType": {
                "id": 23692,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "651:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "643:31:24",
              "typeDescriptions": {
<<<<<<< HEAD
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct OrderInfo[])"
=======
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct orderInfo[])"
>>>>>>> optimisation
              },
              "valueType": {
                "baseType": {
                  "id": 23694,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
<<<<<<< HEAD
                    "id": 22911,
                    "name": "OrderInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 25028,
                    "src": "662:9:19"
                  },
                  "referencedDeclaration": 25028,
                  "src": "662:9:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                    "typeString": "struct OrderInfo"
=======
                    "id": 23693,
                    "name": "orderInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 26880,
                    "src": "662:9:24"
                  },
                  "referencedDeclaration": 26880,
                  "src": "662:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                    "typeString": "struct orderInfo"
>>>>>>> optimisation
                  }
                },
                "id": 23695,
                "nodeType": "ArrayTypeName",
                "src": "662:11:24",
                "typeDescriptions": {
<<<<<<< HEAD
                  "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_ptr",
                  "typeString": "struct OrderInfo[]"
=======
                  "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_ptr",
                  "typeString": "struct orderInfo[]"
>>>>>>> optimisation
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 23702,
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD
            "src": "701:63:19",
=======
            "src": "701:55:24",
>>>>>>> optimisation
            "constant": false,
            "functionSelector": "dc48dfc0",
            "mutability": "mutable",
<<<<<<< HEAD
            "name": "currencyInfosByAddress",
            "nameLocation": "742:22:19",
            "scope": 23788,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
              "typeString": "mapping(address => struct CurrencyInfos)"
=======
            "name": "currencyByLink",
            "nameLocation": "742:14:24",
            "scope": 24570,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
              "typeString": "mapping(address => struct currencyInfos)"
>>>>>>> optimisation
            },
            "typeName": {
              "id": 23701,
              "keyType": {
                "id": 23698,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "709:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "701:33:24",
              "typeDescriptions": {
<<<<<<< HEAD
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                "typeString": "mapping(address => struct CurrencyInfos)"
=======
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                "typeString": "mapping(address => struct currencyInfos)"
>>>>>>> optimisation
              },
              "valueType": {
                "id": 23700,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
<<<<<<< HEAD
                  "id": 22917,
                  "name": "CurrencyInfos",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25035,
                  "src": "720:13:19"
                },
                "referencedDeclaration": 25035,
                "src": "720:13:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage_ptr",
                  "typeString": "struct CurrencyInfos"
=======
                  "id": 23699,
                  "name": "currencyInfos",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26887,
                  "src": "720:13:24"
                },
                "referencedDeclaration": 26887,
                "src": "720:13:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_currencyInfos_$26887_storage_ptr",
                  "typeString": "struct currencyInfos"
>>>>>>> optimisation
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 23706,
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD
            "src": "769:25:19",
=======
            "src": "761:25:24",
>>>>>>> optimisation
            "constant": false,
            "functionSelector": "9ead7222",
            "mutability": "mutable",
            "name": "tokenList",
<<<<<<< HEAD
            "nameLocation": "785:9:19",
            "scope": 23788,
=======
            "nameLocation": "777:9:24",
            "scope": 24570,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_storage",
              "typeString": "contract IERC20[]"
            },
            "typeName": {
              "baseType": {
                "id": 23704,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 23703,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 21707,
                  "src": "769:6:19"
                },
                "referencedDeclaration": 21707,
                "src": "769:6:19",
=======
                  "referencedDeclaration": 22161,
                  "src": "761:6:24"
                },
                "referencedDeclaration": 22161,
                "src": "761:6:24",
>>>>>>> optimisation
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$22161",
                  "typeString": "contract IERC20"
                }
              },
              "id": 23705,
              "nodeType": "ArrayTypeName",
<<<<<<< HEAD
              "src": "769:8:19",
=======
              "src": "761:8:24",
>>>>>>> optimisation
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_storage_ptr",
                "typeString": "contract IERC20[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 23710,
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD
            "src": "798:30:19",
=======
            "src": "790:30:24",
>>>>>>> optimisation
            "constant": false,
            "functionSelector": "f110fb56",
            "mutability": "mutable",
            "name": "currenciesUsed",
<<<<<<< HEAD
            "nameLocation": "814:14:19",
            "scope": 23788,
=======
            "nameLocation": "806:14:24",
            "scope": 24570,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_storage",
              "typeString": "contract IERC20[]"
            },
            "typeName": {
              "baseType": {
                "id": 23708,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 23707,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 21707,
                  "src": "798:6:19"
                },
                "referencedDeclaration": 21707,
                "src": "798:6:19",
=======
                  "referencedDeclaration": 22161,
                  "src": "790:6:24"
                },
                "referencedDeclaration": 22161,
                "src": "790:6:24",
>>>>>>> optimisation
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$22161",
                  "typeString": "contract IERC20"
                }
              },
              "id": 23709,
              "nodeType": "ArrayTypeName",
<<<<<<< HEAD
              "src": "798:8:19",
=======
              "src": "790:8:24",
>>>>>>> optimisation
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_storage_ptr",
                "typeString": "contract IERC20[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 23712,
            "nodeType": "VariableDeclaration",
<<<<<<< HEAD
            "src": "833:18:19",
            "constant": false,
            "mutability": "mutable",
            "name": "feeAddress",
            "nameLocation": "841:10:19",
            "scope": 23788,
=======
            "src": "825:18:24",
            "constant": false,
            "mutability": "mutable",
            "name": "feeAddress",
            "nameLocation": "833:10:24",
            "scope": 24570,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23711,
              "name": "address",
              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
              "src": "833:7:19",
=======
              "src": "825:7:24",
>>>>>>> optimisation
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 23750,
            "nodeType": "FunctionDefinition",
<<<<<<< HEAD
            "src": "856:275:19",
=======
            "src": "848:267:24",
>>>>>>> optimisation
            "body": {
              "id": 23749,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "943:188:19",
=======
              "src": "935:180:24",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 23724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23722,
                          "name": "feex10",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 22936,
                          "src": "957:6:19",
=======
                          "referencedDeclaration": 23718,
                          "src": "949:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 23723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "967:4:19",
=======
                          "src": "959:4:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
<<<<<<< HEAD
                        "src": "957:14:19",
=======
                        "src": "949:14:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "949:7:19",
=======
                      "src": "941:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 23725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "949:23:19",
=======
                    "src": "941:23:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23726,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "949:23:19"
=======
                  "src": "941:23:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23731,
                            "name": "_currencyUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 22932,
                            "src": "1005:13:19",
=======
                            "referencedDeclaration": 23714,
                            "src": "997:13:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23730,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 21707,
                          "src": "998:6:19",
=======
                          "referencedDeclaration": 22161,
                          "src": "990:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 23732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "998:21:19",
=======
                        "src": "990:21:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 23727,
                        "name": "currenciesUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 22928,
                        "src": "978:14:19",
=======
                        "referencedDeclaration": 23710,
                        "src": "970:14:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_storage",
                          "typeString": "contract IERC20[] storage ref"
                        }
                      },
                      "id": 23729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "978:19:19",
=======
                      "src": "970:19:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IERC20_$22161_$dyn_storage_ptr_$_t_contract$_IERC20_$22161_$returns$__$bound_to$_t_array$_t_contract$_IERC20_$22161_$dyn_storage_ptr_$",
                        "typeString": "function (contract IERC20[] storage pointer,contract IERC20)"
                      }
                    },
                    "id": 23733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "978:42:19",
=======
                    "src": "970:42:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23734,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "978:42:19"
=======
                  "src": "970:42:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "id": 23737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23735,
                      "name": "feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 22930,
                      "src": "1026:10:19",
=======
                      "referencedDeclaration": 23712,
                      "src": "1018:10:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23736,
                      "name": "_feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 22934,
                      "src": "1039:11:19",
=======
                      "referencedDeclaration": 23716,
                      "src": "1031:11:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "1026:24:19",
=======
                    "src": "1018:24:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23738,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1026:24:19"
=======
                  "src": "1018:24:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "id": 23747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 22957,
                        "name": "currencyInfosByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22920,
                        "src": "1056:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                          "typeString": "mapping(address => struct CurrencyInfos storage ref)"
=======
                        "id": 23739,
                        "name": "currencyByLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23702,
                        "src": "1048:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                          "typeString": "mapping(address => struct currencyInfos storage ref)"
>>>>>>> optimisation
                        }
                      },
                      "id": 23741,
                      "indexExpression": {
                        "id": 23740,
                        "name": "_currencyUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 22932,
                        "src": "1079:13:19",
=======
                        "referencedDeclaration": 23714,
                        "src": "1063:13:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1056:37:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                        "typeString": "struct CurrencyInfos storage ref"
=======
                      "src": "1048:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                        "typeString": "struct currencyInfos storage ref"
>>>>>>> optimisation
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 23743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1110:4:19",
=======
                          "src": "1094:4:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 23744,
                          "name": "feex10",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 22936,
                          "src": "1116:6:19",
=======
                          "referencedDeclaration": 23718,
                          "src": "1100:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 23745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1124:1:19",
=======
                          "src": "1108:1:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
<<<<<<< HEAD
                        "id": 22960,
                        "name": "CurrencyInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25035,
                        "src": "1096:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CurrencyInfos_$25035_storage_ptr_$",
                          "typeString": "type(struct CurrencyInfos storage pointer)"
=======
                        "id": 23742,
                        "name": "currencyInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26887,
                        "src": "1080:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_currencyInfos_$26887_storage_ptr_$",
                          "typeString": "type(struct currencyInfos storage pointer)"
>>>>>>> optimisation
                        }
                      },
                      "id": 23746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "1096:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                        "typeString": "struct CurrencyInfos memory"
                      }
                    },
                    "src": "1056:70:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                      "typeString": "struct CurrencyInfos storage ref"
=======
                      "src": "1080:30:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                        "typeString": "struct currencyInfos memory"
                      }
                    },
                    "src": "1048:62:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                      "typeString": "struct currencyInfos storage ref"
>>>>>>> optimisation
                    }
                  },
                  "id": 23748,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1056:70:19"
=======
                  "src": "1048:62:24"
>>>>>>> optimisation
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 23719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23714,
                  "mutability": "mutable",
                  "name": "_currencyUsed",
<<<<<<< HEAD
                  "nameLocation": "881:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 22968,
                  "src": "873:21:19",
=======
                  "nameLocation": "873:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23750,
                  "src": "865:21:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "873:7:19",
=======
                    "src": "865:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23716,
                  "mutability": "mutable",
                  "name": "_feeAddress",
<<<<<<< HEAD
                  "nameLocation": "908:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 22968,
                  "src": "900:19:19",
=======
                  "nameLocation": "900:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23750,
                  "src": "892:19:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "900:7:19",
=======
                    "src": "892:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23718,
                  "mutability": "mutable",
                  "name": "feex10",
<<<<<<< HEAD
                  "nameLocation": "932:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 22968,
                  "src": "925:13:19",
=======
                  "nameLocation": "924:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23750,
                  "src": "917:13:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 23717,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "925:6:19",
=======
                    "src": "917:6:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "867:75:19"
=======
              "src": "859:75:24"
>>>>>>> optimisation
            },
            "returnParameters": {
              "id": 23720,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "943:0:19"
            },
            "scope": 23788,
=======
              "src": "935:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23762,
            "nodeType": "FunctionDefinition",
<<<<<<< HEAD
            "src": "1135:102:19",
=======
            "src": "1119:102:24",
>>>>>>> optimisation
            "body": {
              "id": 23761,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1200:37:19",
=======
              "src": "1184:37:24",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "id": 23759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23757,
                      "name": "feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 22930,
                      "src": "1206:10:19",
=======
                      "referencedDeclaration": 23712,
                      "src": "1190:10:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23758,
                      "name": "newFeeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 22970,
                      "src": "1219:13:19",
=======
                      "referencedDeclaration": 23752,
                      "src": "1203:13:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "1206:26:19",
=======
                    "src": "1190:26:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23760,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1206:26:19"
=======
                  "src": "1190:26:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "8705fcd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23755,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23754,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 20922,
                  "src": "1190:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1190:9:19"
              }
            ],
            "name": "setFeeAddress",
            "nameLocation": "1144:13:19",
=======
                  "referencedDeclaration": 21315,
                  "src": "1174:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "1174:9:24"
              }
            ],
            "name": "setFeeAddress",
            "nameLocation": "1128:13:24",
>>>>>>> optimisation
            "parameters": {
              "id": 23753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23752,
                  "mutability": "mutable",
                  "name": "newFeeAddress",
<<<<<<< HEAD
                  "nameLocation": "1166:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 22980,
                  "src": "1158:21:19",
=======
                  "nameLocation": "1150:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23762,
                  "src": "1142:21:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1158:7:19",
=======
                    "src": "1142:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1157:23:19"
=======
              "src": "1141:23:24"
>>>>>>> optimisation
            },
            "returnParameters": {
              "id": 23756,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1200:0:19"
            },
            "scope": 23788,
=======
              "src": "1184:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23799,
            "nodeType": "FunctionDefinition",
<<<<<<< HEAD
            "src": "1241:295:19",
=======
            "src": "1225:279:24",
>>>>>>> optimisation
            "body": {
              "id": 23798,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1349:187:19",
=======
              "src": "1333:171:24",
>>>>>>> optimisation
              "statements": [
                {
                  "condition": {
                    "id": 23777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
<<<<<<< HEAD
                    "src": "1359:42:19",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 22991,
                          "name": "currencyInfosByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22920,
                          "src": "1360:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                            "typeString": "mapping(address => struct CurrencyInfos storage ref)"
=======
                    "src": "1343:34:24",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 23773,
                          "name": "currencyByLink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23702,
                          "src": "1344:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                            "typeString": "mapping(address => struct currencyInfos storage ref)"
>>>>>>> optimisation
                          }
                        },
                        "id": 23775,
                        "indexExpression": {
                          "id": 23774,
                          "name": "newCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 22982,
                          "src": "1383:11:19",
=======
                          "referencedDeclaration": 23764,
                          "src": "1359:11:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "1360:35:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                          "typeString": "struct CurrencyInfos storage ref"
=======
                        "src": "1344:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                          "typeString": "struct currencyInfos storage ref"
>>>>>>> optimisation
                        }
                      },
                      "id": 23776,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "exist",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25030,
                      "src": "1360:41:19",
=======
                      "referencedDeclaration": 26882,
                      "src": "1344:33:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23787,
                  "nodeType": "IfStatement",
<<<<<<< HEAD
                  "src": "1355:98:19",
=======
                  "src": "1339:90:24",
>>>>>>> optimisation
                  "trueBody": {
                    "id": 23786,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "1403:50:19",
=======
                    "src": "1379:50:24",
>>>>>>> optimisation
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 23782,
                                  "name": "newCurrency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 22982,
                                  "src": "1433:11:19",
=======
                                  "referencedDeclaration": 23764,
                                  "src": "1409:11:24",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 23781,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 21707,
                                "src": "1426:6:19",
=======
                                "referencedDeclaration": 22161,
                                "src": "1402:6:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 23783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "1426:19:19",
=======
                              "src": "1402:19:24",
>>>>>>> optimisation
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "expression": {
                              "id": 23778,
                              "name": "tokenList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 22924,
                              "src": "1411:9:19",
=======
                              "referencedDeclaration": 23706,
                              "src": "1387:9:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_storage",
                                "typeString": "contract IERC20[] storage ref"
                              }
                            },
                            "id": 23780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "1411:14:19",
=======
                            "src": "1387:14:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IERC20_$22161_$dyn_storage_ptr_$_t_contract$_IERC20_$22161_$returns$__$bound_to$_t_array$_t_contract$_IERC20_$22161_$dyn_storage_ptr_$",
                              "typeString": "function (contract IERC20[] storage pointer,contract IERC20)"
                            }
                          },
                          "id": 23784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1411:35:19",
=======
                          "src": "1387:35:24",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23785,
                        "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                        "src": "1411:35:19"
=======
                        "src": "1387:35:24"
>>>>>>> optimisation
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 23796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 23006,
                        "name": "currencyInfosByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22920,
                        "src": "1458:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                          "typeString": "mapping(address => struct CurrencyInfos storage ref)"
=======
                        "id": 23788,
                        "name": "currencyByLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23702,
                        "src": "1434:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                          "typeString": "mapping(address => struct currencyInfos storage ref)"
>>>>>>> optimisation
                        }
                      },
                      "id": 23790,
                      "indexExpression": {
                        "id": 23789,
                        "name": "newCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 22982,
                        "src": "1481:11:19",
=======
                        "referencedDeclaration": 23764,
                        "src": "1449:11:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1458:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                        "typeString": "struct CurrencyInfos storage ref"
=======
                      "src": "1434:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                        "typeString": "struct currencyInfos storage ref"
>>>>>>> optimisation
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 23792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1510:4:19",
=======
                          "src": "1478:4:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 23793,
                          "name": "feeX10",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 22984,
                          "src": "1516:6:19",
=======
                          "referencedDeclaration": 23766,
                          "src": "1484:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 23794,
                          "name": "feePot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 22986,
                          "src": "1524:6:19",
=======
                          "referencedDeclaration": 23768,
                          "src": "1492:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
<<<<<<< HEAD
                        "id": 23009,
                        "name": "CurrencyInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25035,
                        "src": "1496:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CurrencyInfos_$25035_storage_ptr_$",
                          "typeString": "type(struct CurrencyInfos storage pointer)"
=======
                        "id": 23791,
                        "name": "currencyInfos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26887,
                        "src": "1464:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_currencyInfos_$26887_storage_ptr_$",
                          "typeString": "type(struct currencyInfos storage pointer)"
>>>>>>> optimisation
                        }
                      },
                      "id": 23795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "1496:35:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                        "typeString": "struct CurrencyInfos memory"
                      }
                    },
                    "src": "1458:73:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                      "typeString": "struct CurrencyInfos storage ref"
=======
                      "src": "1464:35:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                        "typeString": "struct currencyInfos memory"
                      }
                    },
                    "src": "1434:65:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                      "typeString": "struct currencyInfos storage ref"
>>>>>>> optimisation
                    }
                  },
                  "id": 23797,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1458:73:19"
=======
                  "src": "1434:65:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "d38d0b45",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23771,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23770,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 20922,
                  "src": "1339:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1339:9:19"
              }
            ],
            "name": "setCurrency",
            "nameLocation": "1250:11:19",
=======
                  "referencedDeclaration": 21315,
                  "src": "1323:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "1323:9:24"
              }
            ],
            "name": "setCurrency",
            "nameLocation": "1234:11:24",
>>>>>>> optimisation
            "parameters": {
              "id": 23769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23764,
                  "mutability": "mutable",
                  "name": "newCurrency",
<<<<<<< HEAD
                  "nameLocation": "1275:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23017,
                  "src": "1267:19:19",
=======
                  "nameLocation": "1259:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23799,
                  "src": "1251:19:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1267:7:19",
=======
                    "src": "1251:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23766,
                  "mutability": "mutable",
                  "name": "feeX10",
<<<<<<< HEAD
                  "nameLocation": "1299:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23017,
                  "src": "1292:13:19",
=======
                  "nameLocation": "1283:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23799,
                  "src": "1276:13:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 23765,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1292:6:19",
=======
                    "src": "1276:6:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23768,
                  "mutability": "mutable",
                  "name": "feePot",
<<<<<<< HEAD
                  "nameLocation": "1319:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23017,
                  "src": "1311:14:19",
=======
                  "nameLocation": "1303:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23799,
                  "src": "1295:14:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1311:7:19",
=======
                    "src": "1295:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1261:68:19"
=======
              "src": "1245:68:24"
>>>>>>> optimisation
            },
            "returnParameters": {
              "id": 23772,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1349:0:19"
            },
            "scope": 23788,
=======
              "src": "1333:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23835,
            "nodeType": "FunctionDefinition",
<<<<<<< HEAD
            "src": "1540:259:19",
=======
            "src": "1508:243:24",
>>>>>>> optimisation
            "body": {
              "id": 23834,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1598:201:19",
=======
              "src": "1566:185:24",
>>>>>>> optimisation
              "statements": [
                {
                  "assignments": [
                    23808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23808,
                      "mutability": "mutable",
                      "name": "buffer",
<<<<<<< HEAD
                      "nameLocation": "1625:6:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23052,
                      "src": "1604:27:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                        "typeString": "struct CurrencyInfos"
=======
                      "nameLocation": "1593:6:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 23834,
                      "src": "1572:27:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                        "typeString": "struct currencyInfos"
>>>>>>> optimisation
                      },
                      "typeName": {
                        "id": 23807,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
<<<<<<< HEAD
                          "id": 23024,
                          "name": "CurrencyInfos",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25035,
                          "src": "1604:13:19"
                        },
                        "referencedDeclaration": 25035,
                        "src": "1604:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage_ptr",
                          "typeString": "struct CurrencyInfos"
=======
                          "id": 23806,
                          "name": "currencyInfos",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26887,
                          "src": "1572:13:24"
                        },
                        "referencedDeclaration": 26887,
                        "src": "1572:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_currencyInfos_$26887_storage_ptr",
                          "typeString": "struct currencyInfos"
>>>>>>> optimisation
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23812,
                  "initialValue": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 23027,
                      "name": "currencyInfosByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22920,
                      "src": "1634:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                        "typeString": "mapping(address => struct CurrencyInfos storage ref)"
=======
                      "id": 23809,
                      "name": "currencyByLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23702,
                      "src": "1602:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                        "typeString": "mapping(address => struct currencyInfos storage ref)"
>>>>>>> optimisation
                      }
                    },
                    "id": 23811,
                    "indexExpression": {
                      "id": 23810,
                      "name": "currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 23019,
                      "src": "1657:8:19",
=======
                      "referencedDeclaration": 23801,
                      "src": "1617:8:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "1634:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                      "typeString": "struct CurrencyInfos storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:62:19"
=======
                    "src": "1602:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                      "typeString": "struct currencyInfos storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1572:54:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23817,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 22930,
                        "src": "1698:10:19",
=======
                        "referencedDeclaration": 23712,
                        "src": "1658:10:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 23818,
                          "name": "buffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 23026,
                          "src": "1710:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                            "typeString": "struct CurrencyInfos memory"
=======
                          "referencedDeclaration": 23808,
                          "src": "1670:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                            "typeString": "struct currencyInfos memory"
>>>>>>> optimisation
                          }
                        },
                        "id": 23819,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feePot",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25034,
                        "src": "1710:13:19",
=======
                        "referencedDeclaration": 26886,
                        "src": "1670:13:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 23814,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23019,
                            "src": "1679:8:19",
=======
                            "referencedDeclaration": 23801,
                            "src": "1639:8:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23813,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 21707,
                          "src": "1672:6:19",
=======
                          "referencedDeclaration": 22161,
                          "src": "1632:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 23815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1672:16:19",
=======
                        "src": "1632:16:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 23816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 21674,
                      "src": "1672:25:19",
=======
                      "referencedDeclaration": 22128,
                      "src": "1632:25:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 23820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1672:52:19",
=======
                    "src": "1632:52:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23821,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1672:52:19"
=======
                  "src": "1632:52:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "id": 23826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23822,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 23026,
                        "src": "1730:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                          "typeString": "struct CurrencyInfos memory"
=======
                        "referencedDeclaration": 23808,
                        "src": "1690:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                          "typeString": "struct currencyInfos memory"
>>>>>>> optimisation
                        }
                      },
                      "id": 23824,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feePot",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25034,
                      "src": "1730:13:19",
=======
                      "referencedDeclaration": 26886,
                      "src": "1690:13:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 23825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "1746:1:19",
=======
                      "src": "1706:1:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "1730:17:19",
=======
                    "src": "1690:17:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23827,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1730:17:19"
=======
                  "src": "1690:17:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "id": 23832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 23046,
                        "name": "currencyInfosByAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22920,
                        "src": "1753:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                          "typeString": "mapping(address => struct CurrencyInfos storage ref)"
=======
                        "id": 23828,
                        "name": "currencyByLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23702,
                        "src": "1713:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                          "typeString": "mapping(address => struct currencyInfos storage ref)"
>>>>>>> optimisation
                        }
                      },
                      "id": 23830,
                      "indexExpression": {
                        "id": 23829,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 23019,
                        "src": "1776:8:19",
=======
                        "referencedDeclaration": 23801,
                        "src": "1728:8:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1753:32:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                        "typeString": "struct CurrencyInfos storage ref"
=======
                      "src": "1713:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                        "typeString": "struct currencyInfos storage ref"
>>>>>>> optimisation
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23831,
                      "name": "buffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 23026,
                      "src": "1788:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                        "typeString": "struct CurrencyInfos memory"
                      }
                    },
                    "src": "1753:41:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                      "typeString": "struct CurrencyInfos storage ref"
=======
                      "referencedDeclaration": 23808,
                      "src": "1740:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                        "typeString": "struct currencyInfos memory"
                      }
                    },
                    "src": "1713:33:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                      "typeString": "struct currencyInfos storage ref"
>>>>>>> optimisation
                    }
                  },
                  "id": 23833,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1753:41:19"
=======
                  "src": "1713:33:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "1ac3ddeb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23804,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23803,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 20922,
                  "src": "1588:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1588:9:19"
              }
            ],
            "name": "withdrawFee",
            "nameLocation": "1549:11:19",
=======
                  "referencedDeclaration": 21315,
                  "src": "1556:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "1556:9:24"
              }
            ],
            "name": "withdrawFee",
            "nameLocation": "1517:11:24",
>>>>>>> optimisation
            "parameters": {
              "id": 23802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23801,
                  "mutability": "mutable",
                  "name": "currency",
<<<<<<< HEAD
                  "nameLocation": "1569:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23053,
                  "src": "1561:16:19",
=======
                  "nameLocation": "1537:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23835,
                  "src": "1529:16:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1561:7:19",
=======
                    "src": "1529:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1560:18:19"
=======
              "src": "1528:18:24"
>>>>>>> optimisation
            },
            "returnParameters": {
              "id": 23805,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1598:0:19"
            },
            "scope": 23788,
=======
              "src": "1566:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23858,
            "nodeType": "FunctionDefinition",
<<<<<<< HEAD
            "src": "1803:136:19",
=======
            "src": "1755:136:24",
>>>>>>> optimisation
            "body": {
              "id": 23857,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1854:85:19",
=======
              "src": "1806:85:24",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
<<<<<<< HEAD
                        "src": "1868:15:19",
=======
                        "src": "1820:15:24",
>>>>>>> optimisation
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 23845,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 23056,
                              "src": "1877:5:19",
=======
                              "referencedDeclaration": 23838,
                              "src": "1829:5:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 23844,
                            "name": "isToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23121,
                            "src": "1869:7:19",
=======
                            "referencedDeclaration": 23903,
                            "src": "1821:7:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$22161_$returns$_t_bool_$",
                              "typeString": "function (contract IERC20) view returns (bool)"
                            }
                          },
                          "id": 23846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1869:14:19",
=======
                          "src": "1821:14:24",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616c7265616479206164646564",
                        "id": 23848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1885:21:19",
=======
                        "src": "1837:21:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309",
                          "typeString": "literal_string \"Token already added\""
                        },
                        "value": "Token already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309",
                          "typeString": "literal_string \"Token already added\""
                        }
                      ],
                      "id": 23843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "1860:7:19",
=======
                      "src": "1812:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1860:47:19",
=======
                    "src": "1812:47:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23850,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1860:47:19"
=======
                  "src": "1812:47:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23854,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 23056,
                        "src": "1928:5:19",
=======
                        "referencedDeclaration": 23838,
                        "src": "1880:5:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 23851,
                        "name": "tokenList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 22924,
                        "src": "1913:9:19",
=======
                        "referencedDeclaration": 23706,
                        "src": "1865:9:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_storage",
                          "typeString": "contract IERC20[] storage ref"
                        }
                      },
                      "id": 23853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "1913:14:19",
=======
                      "src": "1865:14:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IERC20_$22161_$dyn_storage_ptr_$_t_contract$_IERC20_$22161_$returns$__$bound_to$_t_array$_t_contract$_IERC20_$22161_$dyn_storage_ptr_$",
                        "typeString": "function (contract IERC20[] storage pointer,contract IERC20)"
                      }
                    },
                    "id": 23855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1913:21:19",
=======
                    "src": "1865:21:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23856,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "1913:21:19"
=======
                  "src": "1865:21:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "d48bfca7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23841,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23840,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 20922,
                  "src": "1844:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1844:9:19"
              }
            ],
            "name": "addToken",
            "nameLocation": "1812:8:19",
=======
                  "referencedDeclaration": 21315,
                  "src": "1796:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "1796:9:24"
              }
            ],
            "name": "addToken",
            "nameLocation": "1764:8:24",
>>>>>>> optimisation
            "parameters": {
              "id": 23839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23838,
                  "mutability": "mutable",
                  "name": "token",
<<<<<<< HEAD
                  "nameLocation": "1828:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23076,
                  "src": "1821:12:19",
=======
                  "nameLocation": "1780:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23858,
                  "src": "1773:12:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$22161",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 23837,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23836,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
<<<<<<< HEAD
                      "referencedDeclaration": 21707,
                      "src": "1821:6:19"
                    },
                    "referencedDeclaration": 21707,
                    "src": "1821:6:19",
=======
                      "referencedDeclaration": 22161,
                      "src": "1773:6:24"
                    },
                    "referencedDeclaration": 22161,
                    "src": "1773:6:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$22161",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1820:14:19"
=======
              "src": "1772:14:24"
>>>>>>> optimisation
            },
            "returnParameters": {
              "id": 23842,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "1854:0:19"
            },
            "scope": 23788,
=======
              "src": "1806:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23903,
            "nodeType": "FunctionDefinition",
<<<<<<< HEAD
            "src": "1943:297:19",
=======
            "src": "1895:297:24",
>>>>>>> optimisation
            "body": {
              "id": 23902,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2001:239:19",
=======
              "src": "1953:239:24",
>>>>>>> optimisation
              "statements": [
                {
                  "assignments": [
                    23870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23870,
                      "mutability": "mutable",
                      "name": "buffer",
<<<<<<< HEAD
                      "nameLocation": "2023:6:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23120,
                      "src": "2007:22:19",
=======
                      "nameLocation": "1975:6:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 23902,
                      "src": "1959:22:24",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23868,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23867,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
<<<<<<< HEAD
                            "referencedDeclaration": 21707,
                            "src": "2007:6:19"
                          },
                          "referencedDeclaration": 21707,
                          "src": "2007:6:19",
=======
                            "referencedDeclaration": 22161,
                            "src": "1959:6:24"
                          },
                          "referencedDeclaration": 22161,
                          "src": "1959:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$22161",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 23869,
                        "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "2007:8:19",
=======
                        "src": "1959:8:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23872,
                  "initialValue": {
                    "id": 23871,
                    "name": "tokenList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
                    "referencedDeclaration": 22924,
                    "src": "2032:9:19",
=======
                    "referencedDeclaration": 23706,
                    "src": "1984:9:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2007:34:19"
=======
                  "src": "1959:34:24"
>>>>>>> optimisation
                },
                {
                  "assignments": [
                    23874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23874,
                      "mutability": "mutable",
                      "name": "max",
<<<<<<< HEAD
                      "nameLocation": "2055:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23120,
                      "src": "2047:11:19",
=======
                      "nameLocation": "2007:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 23902,
                      "src": "1999:11:24",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23873,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "2047:7:19",
=======
                        "src": "1999:7:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23877,
                  "initialValue": {
                    "expression": {
                      "id": 23875,
                      "name": "buffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 23088,
                      "src": "2061:6:19",
=======
                      "referencedDeclaration": 23870,
                      "src": "2013:6:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "id": 23876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "src": "2061:13:19",
=======
                    "src": "2013:13:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2047:27:19"
=======
                  "src": "1999:27:24"
>>>>>>> optimisation
                },
                {
                  "body": {
                    "id": 23898,
                    "nodeType": "Block",
<<<<<<< HEAD
                    "src": "2111:107:19",
=======
                    "src": "2063:107:24",
>>>>>>> optimisation
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$22161",
                            "typeString": "contract IERC20"
                          },
                          "id": 23889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 23885,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 23088,
                              "src": "2123:6:19",
=======
                              "referencedDeclaration": 23870,
                              "src": "2075:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$22161_$dyn_memory_ptr",
                                "typeString": "contract IERC20[] memory"
                              }
                            },
                            "id": 23887,
                            "indexExpression": {
                              "id": 23886,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 23097,
                              "src": "2130:1:19",
=======
                              "referencedDeclaration": 23879,
                              "src": "2082:1:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "2123:9:19",
=======
                            "src": "2075:9:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 23888,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23079,
                            "src": "2136:5:19",
=======
                            "referencedDeclaration": 23861,
                            "src": "2088:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          },
<<<<<<< HEAD
                          "src": "2123:18:19",
=======
                          "src": "2075:18:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23893,
                        "nodeType": "IfStatement",
<<<<<<< HEAD
                        "src": "2119:54:19",
=======
                        "src": "2071:54:24",
>>>>>>> optimisation
                        "trueBody": {
                          "id": 23892,
                          "nodeType": "Block",
<<<<<<< HEAD
                          "src": "2143:30:19",
=======
                          "src": "2095:30:24",
>>>>>>> optimisation
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 23890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "2160:4:19",
=======
                                "src": "2112:4:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 23865,
                              "id": 23891,
                              "nodeType": "Return",
<<<<<<< HEAD
                              "src": "2153:11:19"
=======
                              "src": "2105:11:24"
>>>>>>> optimisation
                            }
                          ]
                        }
                      },
                      {
                        "id": 23897,
                        "nodeType": "UncheckedBlock",
<<<<<<< HEAD
                        "src": "2180:32:19",
=======
                        "src": "2132:32:24",
>>>>>>> optimisation
                        "statements": [
                          {
                            "expression": {
                              "id": 23895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
<<<<<<< HEAD
                              "src": "2200:3:19",
=======
                              "src": "2152:3:24",
>>>>>>> optimisation
                              "subExpression": {
                                "id": 23894,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 23097,
                                "src": "2202:1:19",
=======
                                "referencedDeclaration": 23879,
                                "src": "2154:1:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 23896,
                            "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                            "src": "2200:3:19"
=======
                            "src": "2152:3:24"
>>>>>>> optimisation
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23882,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 23097,
                      "src": "2100:1:19",
=======
                      "referencedDeclaration": 23879,
                      "src": "2052:1:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 23883,
                      "name": "max",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 23092,
                      "src": "2104:3:19",
=======
                      "referencedDeclaration": 23874,
                      "src": "2056:3:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "2100:7:19",
=======
                    "src": "2052:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23899,
                  "initializationExpression": {
                    "assignments": [
                      23879
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 23879,
                        "mutability": "mutable",
                        "name": "i",
<<<<<<< HEAD
                        "nameLocation": "2093:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 23117,
                        "src": "2085:9:19",
=======
                        "nameLocation": "2045:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 23899,
                        "src": "2037:9:24",
>>>>>>> optimisation
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23878,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "2085:7:19",
=======
                          "src": "2037:7:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 23881,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 23880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2097:1:19",
=======
                      "src": "2049:1:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "2085:13:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "2080:138:19"
=======
                    "src": "2037:13:24"
                  },
                  "nodeType": "ForStatement",
                  "src": "2032:138:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 23900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "2230:5:19",
=======
                    "src": "2182:5:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 23865,
                  "id": 23901,
                  "nodeType": "Return",
<<<<<<< HEAD
                  "src": "2223:12:19"
=======
                  "src": "2175:12:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "19f37361",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isToken",
<<<<<<< HEAD
            "nameLocation": "1952:7:19",
=======
            "nameLocation": "1904:7:24",
>>>>>>> optimisation
            "parameters": {
              "id": 23862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23861,
                  "mutability": "mutable",
                  "name": "token",
<<<<<<< HEAD
                  "nameLocation": "1967:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23121,
                  "src": "1960:12:19",
=======
                  "nameLocation": "1919:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23903,
                  "src": "1912:12:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$22161",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 23860,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23859,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
<<<<<<< HEAD
                      "referencedDeclaration": 21707,
                      "src": "1960:6:19"
                    },
                    "referencedDeclaration": 21707,
                    "src": "1960:6:19",
=======
                      "referencedDeclaration": 22161,
                      "src": "1912:6:24"
                    },
                    "referencedDeclaration": 22161,
                    "src": "1912:6:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$22161",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1959:14:19"
=======
              "src": "1911:14:24"
>>>>>>> optimisation
            },
            "returnParameters": {
              "id": 23865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 23121,
                  "src": "1995:4:19",
=======
                  "scope": 23903,
                  "src": "1947:4:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23863,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "1995:4:19",
=======
                    "src": "1947:4:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1994:6:19"
            },
            "scope": 23788,
=======
              "src": "1946:6:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23927,
            "nodeType": "FunctionDefinition",
<<<<<<< HEAD
            "src": "2244:191:19",
=======
            "src": "2196:183:24",
>>>>>>> optimisation
            "body": {
              "id": 23926,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2319:116:19",
=======
              "src": "2271:108:24",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 23915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23913,
                          "name": "feePercentx10",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 23123,
                          "src": "2333:13:19",
=======
                          "referencedDeclaration": 23905,
                          "src": "2285:13:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "353030",
                          "id": 23914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "2349:3:19",
=======
                          "src": "2301:3:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
<<<<<<< HEAD
                        "src": "2333:19:19",
=======
                        "src": "2285:19:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46656520546f6f2068696768",
                        "id": 23916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2354:14:19",
=======
                        "src": "2306:14:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddcb92f1e3cd817289a4b2a5528693ca2617ce43df73a01baa09f2a8ad7bb089",
                          "typeString": "literal_string \"Fee Too high\""
                        },
                        "value": "Fee Too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddcb92f1e3cd817289a4b2a5528693ca2617ce43df73a01baa09f2a8ad7bb089",
                          "typeString": "literal_string \"Fee Too high\""
                        }
                      ],
                      "id": 23912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2325:7:19",
=======
                      "src": "2277:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2325:44:19",
=======
                    "src": "2277:44:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23918,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2325:44:19"
=======
                  "src": "2277:44:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "id": 23924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 23137,
                          "name": "currencyInfosByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22920,
                          "src": "2375:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                            "typeString": "mapping(address => struct CurrencyInfos storage ref)"
=======
                          "id": 23919,
                          "name": "currencyByLink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23702,
                          "src": "2327:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                            "typeString": "mapping(address => struct currencyInfos storage ref)"
>>>>>>> optimisation
                          }
                        },
                        "id": 23921,
                        "indexExpression": {
                          "id": 23920,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 23125,
                          "src": "2398:8:19",
=======
                          "referencedDeclaration": 23907,
                          "src": "2342:8:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "2375:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                          "typeString": "struct CurrencyInfos storage ref"
=======
                        "src": "2327:24:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                          "typeString": "struct currencyInfos storage ref"
>>>>>>> optimisation
                        }
                      },
                      "id": 23922,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feeX10",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25032,
                      "src": "2375:39:19",
=======
                      "referencedDeclaration": 26884,
                      "src": "2327:31:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23923,
                      "name": "feePercentx10",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 23123,
                      "src": "2417:13:19",
=======
                      "referencedDeclaration": 23905,
                      "src": "2361:13:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
<<<<<<< HEAD
                    "src": "2375:55:19",
=======
                    "src": "2327:47:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 23925,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2375:55:19"
=======
                  "src": "2327:47:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "30f738be",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23910,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23909,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 20922,
                  "src": "2309:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2309:9:19"
              }
            ],
            "name": "setFee",
            "nameLocation": "2253:6:19",
=======
                  "referencedDeclaration": 21315,
                  "src": "2261:9:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2261:9:24"
              }
            ],
            "name": "setFee",
            "nameLocation": "2205:6:24",
>>>>>>> optimisation
            "parameters": {
              "id": 23908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23905,
                  "mutability": "mutable",
                  "name": "feePercentx10",
<<<<<<< HEAD
                  "nameLocation": "2267:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23145,
                  "src": "2260:20:19",
=======
                  "nameLocation": "2219:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23927,
                  "src": "2212:20:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 23904,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2260:6:19",
=======
                    "src": "2212:6:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23907,
                  "mutability": "mutable",
                  "name": "currency",
<<<<<<< HEAD
                  "nameLocation": "2290:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23145,
                  "src": "2282:16:19",
=======
                  "nameLocation": "2242:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 23927,
                  "src": "2234:16:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2282:7:19",
=======
                    "src": "2234:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2259:40:19"
=======
              "src": "2211:40:24"
>>>>>>> optimisation
            },
            "returnParameters": {
              "id": 23911,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2319:0:19"
            },
            "scope": 23788,
=======
              "src": "2271:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24066,
            "nodeType": "FunctionDefinition",
<<<<<<< HEAD
            "src": "2439:1277:19",
=======
            "src": "2383:1289:24",
>>>>>>> optimisation
            "body": {
              "id": 24065,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "2643:1073:19",
=======
              "src": "2587:1085:24",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23949,
                          "name": "sellPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 23153,
                          "src": "2657:9:19",
=======
                          "referencedDeclaration": 23935,
                          "src": "2601:9:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 23950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "2669:4:19",
=======
                          "src": "2613:4:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
<<<<<<< HEAD
                        "src": "2657:16:19",
=======
                        "src": "2601:16:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c507269636520746f6f206c6f77",
                        "id": 23952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2675:19:19",
=======
                        "src": "2619:19:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71183d505590dc7f0650091e2f82a596f26fcfa65fdfd267355de1fc8747b9bb",
                          "typeString": "literal_string \"SellPrice too low\""
                        },
                        "value": "SellPrice too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71183d505590dc7f0650091e2f82a596f26fcfa65fdfd267355de1fc8747b9bb",
                          "typeString": "literal_string \"SellPrice too low\""
                        }
                      ],
                      "id": 23948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2649:7:19",
=======
                      "src": "2593:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2649:46:19",
=======
                    "src": "2593:46:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23954,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2649:46:19"
=======
                  "src": "2593:46:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 23958,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 23147,
                                "src": "2724:5:19",
=======
                                "referencedDeclaration": 23929,
                                "src": "2668:5:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 23957,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 21707,
                              "src": "2717:6:19",
=======
                              "referencedDeclaration": 22161,
                              "src": "2661:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 23959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "2717:13:19",
=======
                            "src": "2661:13:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 23956,
                          "name": "isToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 23121,
                          "src": "2709:7:19",
=======
                          "referencedDeclaration": 23903,
                          "src": "2653:7:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$22161_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view returns (bool)"
                          }
                        },
                        "id": 23960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2709:22:19",
=======
                        "src": "2653:22:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e204e6f742052656769737465726564",
                        "id": 23961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2733:22:19",
=======
                        "src": "2677:22:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4895f573f36b888de1a6ed51d586c0c4e8aa37ea097032eba97052ea50d2c6c7",
                          "typeString": "literal_string \"Token Not Registered\""
                        },
                        "value": "Token Not Registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4895f573f36b888de1a6ed51d586c0c4e8aa37ea097032eba97052ea50d2c6c7",
                          "typeString": "literal_string \"Token Not Registered\""
                        }
                      ],
                      "id": 23955,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2701:7:19",
=======
                      "src": "2645:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2701:55:19",
=======
                    "src": "2645:55:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23963,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2701:55:19"
=======
                  "src": "2645:55:24"
>>>>>>> optimisation
                },
                {
                  "assignments": [
                    23966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23966,
                      "mutability": "mutable",
                      "name": "bufferCurrency",
<<<<<<< HEAD
                      "nameLocation": "2783:14:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23283,
                      "src": "2762:35:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                        "typeString": "struct CurrencyInfos"
=======
                      "nameLocation": "2727:14:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24065,
                      "src": "2706:35:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                        "typeString": "struct currencyInfos"
>>>>>>> optimisation
                      },
                      "typeName": {
                        "id": 23965,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
<<<<<<< HEAD
                          "id": 23182,
                          "name": "CurrencyInfos",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25035,
                          "src": "2762:13:19"
                        },
                        "referencedDeclaration": 25035,
                        "src": "2762:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage_ptr",
                          "typeString": "struct CurrencyInfos"
=======
                          "id": 23964,
                          "name": "currencyInfos",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26887,
                          "src": "2706:13:24"
                        },
                        "referencedDeclaration": 26887,
                        "src": "2706:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_currencyInfos_$26887_storage_ptr",
                          "typeString": "struct currencyInfos"
>>>>>>> optimisation
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23970,
                  "initialValue": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 23185,
                      "name": "currencyInfosByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22920,
                      "src": "2800:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                        "typeString": "mapping(address => struct CurrencyInfos storage ref)"
=======
                      "id": 23967,
                      "name": "currencyByLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23702,
                      "src": "2744:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                        "typeString": "mapping(address => struct currencyInfos storage ref)"
>>>>>>> optimisation
                      }
                    },
                    "id": 23969,
                    "indexExpression": {
                      "id": 23968,
                      "name": "currencyWanted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 23149,
                      "src": "2830:14:19",
=======
                      "referencedDeclaration": 23931,
                      "src": "2759:14:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "2800:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                      "typeString": "struct CurrencyInfos storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2762:88:19"
=======
                    "src": "2744:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                      "typeString": "struct currencyInfos storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2706:68:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23972,
                          "name": "bufferCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 23184,
                          "src": "2864:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                            "typeString": "struct CurrencyInfos memory"
=======
                          "referencedDeclaration": 23966,
                          "src": "2788:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                            "typeString": "struct currencyInfos memory"
>>>>>>> optimisation
                          }
                        },
                        "id": 23973,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exist",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25030,
                        "src": "2864:20:19",
=======
                        "referencedDeclaration": 26882,
                        "src": "2788:20:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e6379206e6f7420746f6c657261746564",
                        "id": 23974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2886:24:19",
=======
                        "src": "2810:24:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4837158240e63c40e0ef78cec6bb6ebf8f1c5d289891ba7c0ac768615a5a7d33",
                          "typeString": "literal_string \"Currency not tolerated\""
                        },
                        "value": "Currency not tolerated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4837158240e63c40e0ef78cec6bb6ebf8f1c5d289891ba7c0ac768615a5a7d33",
                          "typeString": "literal_string \"Currency not tolerated\""
                        }
                      ],
                      "id": 23971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2856:7:19",
=======
                      "src": "2780:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2856:55:19",
=======
                    "src": "2780:55:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23976,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2856:55:19"
=======
                  "src": "2780:55:24"
>>>>>>> optimisation
                },
                {
                  "assignments": [
                    23978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23978,
                      "mutability": "mutable",
                      "name": "index",
<<<<<<< HEAD
                      "nameLocation": "2924:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23283,
                      "src": "2917:12:19",
=======
                      "nameLocation": "2848:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24065,
                      "src": "2841:12:24",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 23977,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "2917:6:19",
=======
                        "src": "2841:6:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23986,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 23981,
                            "name": "sellOrderByToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 22909,
                            "src": "2939:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
=======
                            "referencedDeclaration": 23691,
                            "src": "2863:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
>>>>>>> optimisation
                            }
                          },
                          "id": 23983,
                          "indexExpression": {
                            "id": 23982,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23147,
                            "src": "2956:5:19",
=======
                            "referencedDeclaration": 23929,
                            "src": "2880:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "2939:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                            "typeString": "struct OrderInfo storage ref[] storage ref"
=======
                          "src": "2863:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                            "typeString": "struct orderInfo storage ref[] storage ref"
>>>>>>> optimisation
                          }
                        },
                        "id": 23984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "2939:30:19",
=======
                        "src": "2863:30:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                      "src": "2932:6:19",
=======
                      "src": "2856:6:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 23979,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "2932:6:19",
=======
                        "src": "2856:6:24",
>>>>>>> optimisation
                        "typeDescriptions": {}
                      }
                    },
                    "id": 23985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2932:38:19",
=======
                    "src": "2856:38:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2917:53:19"
=======
                  "src": "2841:53:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23991,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
<<<<<<< HEAD
                          "src": "3030:3:19",
=======
                          "src": "2956:3:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "3030:10:19",
=======
                        "src": "2956:10:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 23995,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
<<<<<<< HEAD
                            "src": "3056:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$23788",
=======
                            "src": "2982:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$24570",
>>>>>>> optimisation
                              "typeString": "contract OTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_OTC_$23788",
=======
                              "typeIdentifier": "t_contract$_OTC_$24570",
>>>>>>> optimisation
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 23994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "3048:7:19",
=======
                          "src": "2974:7:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23993,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "3048:7:19",
=======
                            "src": "2974:7:24",
>>>>>>> optimisation
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3048:13:19",
=======
                        "src": "2974:13:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23997,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 23151,
                        "src": "3069:6:19",
=======
                        "referencedDeclaration": 23933,
                        "src": "2995:6:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23998,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 23155,
                        "src": "3083:8:19",
=======
                        "referencedDeclaration": 23937,
                        "src": "3009:8:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23999,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 23157,
                        "src": "3099:1:19",
=======
                        "referencedDeclaration": 23939,
                        "src": "3025:1:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 24000,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 23159,
                        "src": "3108:1:19",
=======
                        "referencedDeclaration": 23941,
                        "src": "3034:1:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 24001,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 23161,
                        "src": "3117:1:19",
=======
                        "referencedDeclaration": 23943,
                        "src": "3043:1:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 23988,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23147,
                            "src": "2991:5:19",
=======
                            "referencedDeclaration": 23929,
                            "src": "2915:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23987,
                          "name": "IPropertyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 24182,
                          "src": "2976:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPropertyToken_$24182_$",
=======
                          "referencedDeclaration": 25869,
                          "src": "2900:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPropertyToken_$25869_$",
>>>>>>> optimisation
                            "typeString": "type(contract IPropertyToken)"
                          }
                        },
                        "id": 23989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2976:21:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPropertyToken_$24182",
=======
                        "src": "2900:21:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPropertyToken_$25869",
>>>>>>> optimisation
                          "typeString": "contract IPropertyToken"
                        }
                      },
                      "id": 23990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFromWithPermission",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 24181,
                      "src": "2976:46:19",
=======
                      "referencedDeclaration": 25858,
                      "src": "2900:48:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 24002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2976:148:19",
=======
                    "src": "2900:150:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24003,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2976:148:19"
=======
                  "src": "2900:150:24"
>>>>>>> optimisation
                },
                {
                  "assignments": [
                    24005
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24005,
                      "mutability": "mutable",
                      "name": "fee",
<<<<<<< HEAD
                      "nameLocation": "3138:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23283,
                      "src": "3130:11:19",
=======
                      "nameLocation": "3094:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24065,
                      "src": "3086:11:24",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24004,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "3130:7:19",
=======
                        "src": "3086:7:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24011,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24007,
                        "name": "sellPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 23153,
                        "src": "3159:9:19",
=======
                        "referencedDeclaration": 23935,
                        "src": "3115:9:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 24008,
                          "name": "bufferCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 23184,
                          "src": "3170:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                            "typeString": "struct CurrencyInfos memory"
=======
                          "referencedDeclaration": 23966,
                          "src": "3126:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                            "typeString": "struct currencyInfos memory"
>>>>>>> optimisation
                          }
                        },
                        "id": 24009,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeX10",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25032,
                        "src": "3170:21:19",
=======
                        "referencedDeclaration": 26884,
                        "src": "3126:21:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 24006,
                      "name": "feeCalculation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 23311,
                      "src": "3144:14:19",
=======
                      "referencedDeclaration": 24093,
                      "src": "3100:14:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint16) pure returns (uint256)"
                      }
                    },
                    "id": 24010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3144:48:19",
=======
                    "src": "3100:48:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3130:62:19"
=======
                  "src": "3086:62:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 24017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "3253:4:19",
=======
                            "src": "3209:4:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 24018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "3267:5:19",
=======
                            "src": "3223:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 24019,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23196,
                            "src": "3282:5:19",
=======
                            "referencedDeclaration": 23978,
                            "src": "3238:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 24022,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
<<<<<<< HEAD
                                  "src": "3304:5:19",
=======
                                  "src": "3260:5:24",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 24023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "src": "3304:15:19",
=======
                                "src": "3260:15:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 24021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3297:6:19",
=======
                              "src": "3253:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 24020,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "3297:6:19",
=======
                                "src": "3253:6:24",
>>>>>>> optimisation
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3297:23:19",
=======
                            "src": "3253:23:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "expression": {
                              "id": 24025,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
<<<<<<< HEAD
                              "src": "3330:3:19",
=======
                              "src": "3286:3:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 24026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3330:10:19",
=======
                            "src": "3286:10:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 24029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "3358:1:19",
=======
                                "src": "3314:1:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 24028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3350:7:19",
=======
                              "src": "3306:7:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24027,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "3350:7:19",
=======
                                "src": "3306:7:24",
>>>>>>> optimisation
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3350:10:19",
=======
                            "src": "3306:10:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24031,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23223,
                            "src": "3370:3:19",
=======
                            "referencedDeclaration": 24005,
                            "src": "3326:3:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 24032,
                            "name": "sellPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23153,
                            "src": "3383:9:19",
=======
                            "referencedDeclaration": 23935,
                            "src": "3339:9:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 24033,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23151,
                            "src": "3402:6:19",
=======
                            "referencedDeclaration": 23933,
                            "src": "3358:6:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 24035,
                                "name": "currencyWanted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 23149,
                                "src": "3425:14:19",
=======
                                "referencedDeclaration": 23931,
                                "src": "3381:14:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24034,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 21707,
                              "src": "3418:6:19",
=======
                              "referencedDeclaration": 22161,
                              "src": "3374:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3418:22:19",
=======
                            "src": "3374:22:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23234,
                          "name": "OrderInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25028,
                          "src": "3234:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_OrderInfo_$25028_storage_ptr_$",
                            "typeString": "type(struct OrderInfo storage pointer)"
=======
                          "id": 24016,
                          "name": "orderInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26880,
                          "src": "3190:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_orderInfo_$26880_storage_ptr_$",
                            "typeString": "type(struct orderInfo storage pointer)"
>>>>>>> optimisation
                          }
                        },
                        "id": 24037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3234:214:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
=======
                        "src": "3190:214:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
=======
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 24012,
                          "name": "sellOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 22909,
                          "src": "3198:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
=======
                          "referencedDeclaration": 23691,
                          "src": "3154:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
>>>>>>> optimisation
                          }
                        },
                        "id": 24014,
                        "indexExpression": {
                          "id": 24013,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
<<<<<<< HEAD
                          "referencedDeclaration": 23147,
                          "src": "3215:5:19",
=======
                          "referencedDeclaration": 23929,
                          "src": "3171:5:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "3198:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                          "typeString": "struct OrderInfo storage ref[] storage ref"
=======
                        "src": "3154:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                          "typeString": "struct orderInfo storage ref[] storage ref"
>>>>>>> optimisation
                        }
                      },
                      "id": 24015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "3198:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_ptr_$_t_struct$_OrderInfo_$25028_storage_$returns$__$bound_to$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct OrderInfo storage ref[] storage pointer,struct OrderInfo storage ref)"
=======
                      "src": "3154:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_ptr_$_t_struct$_orderInfo_$26880_storage_$returns$__$bound_to$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct orderInfo storage ref[] storage pointer,struct orderInfo storage ref)"
>>>>>>> optimisation
                      }
                    },
                    "id": 24038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3198:256:19",
=======
                    "src": "3154:256:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24039,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3198:256:19"
=======
                  "src": "3154:256:24"
>>>>>>> optimisation
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 24042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "3510:4:19",
=======
                            "src": "3466:4:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 24043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "3524:5:19",
=======
                            "src": "3480:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "id": 24044,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23196,
                            "src": "3539:5:19",
=======
                            "referencedDeclaration": 23978,
                            "src": "3495:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 24047,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
<<<<<<< HEAD
                                  "src": "3561:5:19",
=======
                                  "src": "3517:5:24",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 24048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "src": "3561:15:19",
=======
                                "src": "3517:15:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 24046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3554:6:19",
=======
                              "src": "3510:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 24045,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "3554:6:19",
=======
                                "src": "3510:6:24",
>>>>>>> optimisation
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3554:23:19",
=======
                            "src": "3510:23:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "expression": {
                              "id": 24050,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
<<<<<<< HEAD
                              "src": "3587:3:19",
=======
                              "src": "3543:3:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 24051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3587:10:19",
=======
                            "src": "3543:10:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 24054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "3615:1:19",
=======
                                "src": "3571:1:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 24053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3607:7:19",
=======
                              "src": "3563:7:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24052,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "3607:7:19",
=======
                                "src": "3563:7:24",
>>>>>>> optimisation
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3607:10:19",
=======
                            "src": "3563:10:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24056,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23223,
                            "src": "3627:3:19",
=======
                            "referencedDeclaration": 24005,
                            "src": "3583:3:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 24057,
                            "name": "sellPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23153,
                            "src": "3640:9:19",
=======
                            "referencedDeclaration": 23935,
                            "src": "3596:9:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 24058,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 23151,
                            "src": "3659:6:19",
=======
                            "referencedDeclaration": 23933,
                            "src": "3615:6:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 24060,
                                "name": "currencyWanted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 23149,
                                "src": "3682:14:19",
=======
                                "referencedDeclaration": 23931,
                                "src": "3638:14:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24059,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 21707,
                              "src": "3675:6:19",
=======
                              "referencedDeclaration": 22161,
                              "src": "3631:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3675:22:19",
=======
                            "src": "3631:22:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23259,
                          "name": "OrderInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25028,
                          "src": "3491:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_OrderInfo_$25028_storage_ptr_$",
                            "typeString": "type(struct OrderInfo storage pointer)"
=======
                          "id": 24041,
                          "name": "orderInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26880,
                          "src": "3447:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_orderInfo_$26880_storage_ptr_$",
                            "typeString": "type(struct orderInfo storage pointer)"
>>>>>>> optimisation
                          }
                        },
                        "id": 24062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3491:214:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
=======
                        "src": "3447:214:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
=======
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                        }
                      ],
                      "id": 24040,
                      "name": "SellOrderInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 22878,
                      "src": "3465:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_OrderInfo_$25028_memory_ptr_$returns$__$",
                        "typeString": "function (struct OrderInfo memory)"
=======
                      "referencedDeclaration": 23660,
                      "src": "3421:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_orderInfo_$26880_memory_ptr_$returns$__$",
                        "typeString": "function (struct orderInfo memory)"
>>>>>>> optimisation
                      }
                    },
                    "id": 24063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3465:246:19",
=======
                    "src": "3421:246:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24064,
                  "nodeType": "EmitStatement",
<<<<<<< HEAD
                  "src": "3460:251:19"
=======
                  "src": "3416:251:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "6bdf6b39",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23946,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23945,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 21042,
                  "src": "2630:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2630:12:19"
              }
            ],
            "name": "initSellOrder",
            "nameLocation": "2448:13:19",
=======
                  "referencedDeclaration": 21496,
                  "src": "2574:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2574:12:24"
              }
            ],
            "name": "initSellOrder",
            "nameLocation": "2392:13:24",
>>>>>>> optimisation
            "parameters": {
              "id": 23944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23929,
                  "mutability": "mutable",
                  "name": "token",
<<<<<<< HEAD
                  "nameLocation": "2475:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23284,
                  "src": "2467:13:19",
=======
                  "nameLocation": "2419:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24066,
                  "src": "2411:13:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2467:7:19",
=======
                    "src": "2411:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23931,
                  "mutability": "mutable",
                  "name": "currencyWanted",
<<<<<<< HEAD
                  "nameLocation": "2494:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23284,
                  "src": "2486:22:19",
=======
                  "nameLocation": "2438:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24066,
                  "src": "2430:22:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2486:7:19",
=======
                    "src": "2430:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23933,
                  "mutability": "mutable",
                  "name": "amount",
<<<<<<< HEAD
                  "nameLocation": "2522:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23284,
                  "src": "2514:14:19",
=======
                  "nameLocation": "2466:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24066,
                  "src": "2458:14:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2514:7:19",
=======
                    "src": "2458:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23935,
                  "mutability": "mutable",
                  "name": "sellPrice",
<<<<<<< HEAD
                  "nameLocation": "2542:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23284,
                  "src": "2534:17:19",
=======
                  "nameLocation": "2486:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24066,
                  "src": "2478:17:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2534:7:19",
=======
                    "src": "2478:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23937,
                  "mutability": "mutable",
                  "name": "deadline",
<<<<<<< HEAD
                  "nameLocation": "2565:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23284,
                  "src": "2557:16:19",
=======
                  "nameLocation": "2509:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24066,
                  "src": "2501:16:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2557:7:19",
=======
                    "src": "2501:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23939,
                  "mutability": "mutable",
                  "name": "v",
<<<<<<< HEAD
                  "nameLocation": "2585:1:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23284,
                  "src": "2579:7:19",
=======
                  "nameLocation": "2529:1:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24066,
                  "src": "2523:7:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 23938,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2579:5:19",
=======
                    "src": "2523:5:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23941,
                  "mutability": "mutable",
                  "name": "r",
<<<<<<< HEAD
                  "nameLocation": "2600:1:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23284,
                  "src": "2592:9:19",
=======
                  "nameLocation": "2544:1:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24066,
                  "src": "2536:9:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23940,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2592:7:19",
=======
                    "src": "2536:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23943,
                  "mutability": "mutable",
                  "name": "s",
<<<<<<< HEAD
                  "nameLocation": "2615:1:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23284,
                  "src": "2607:9:19",
=======
                  "nameLocation": "2559:1:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24066,
                  "src": "2551:9:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23942,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "2607:7:19",
=======
                    "src": "2551:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2461:159:19"
=======
              "src": "2405:159:24"
>>>>>>> optimisation
            },
            "returnParameters": {
              "id": 23947,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "2643:0:19"
            },
            "scope": 23788,
=======
              "src": "2587:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 23311,
            "nodeType": "FunctionDefinition",
            "src": "3720:170:19",
            "body": {
              "id": 23310,
              "nodeType": "Block",
              "src": "3824:66:19",
              "statements": [
                {
                  "expression": {
                    "id": 23308,
=======
            "id": 24093,
            "nodeType": "FunctionDefinition",
            "src": "3676:170:24",
            "body": {
              "id": 24092,
              "nodeType": "Block",
              "src": "3780:66:24",
              "statements": [
                {
                  "expression": {
                    "id": 24090,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24075,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 23291,
                      "src": "3830:3:19",
=======
                      "referencedDeclaration": 24073,
                      "src": "3786:3:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
<<<<<<< HEAD
                        "id": 23296,
=======
                        "id": 24078,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 23294,
                          "name": "feex10",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23288,
                          "src": "3836:6:19",
=======
                          "id": 24076,
                          "name": "feex10",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24070,
                          "src": "3792:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 23295,
=======
                          "id": 24077,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3845:1:19",
=======
                          "src": "3801:1:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "3836:10:19",
=======
                        "src": "3792:10:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
<<<<<<< HEAD
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 23306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3884:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 23307,
=======
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 24088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3840:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 24089,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
<<<<<<< HEAD
                      "src": "3836:49:19",
=======
                      "src": "3792:49:24",
>>>>>>> optimisation
                      "trueExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 23305,
=======
                        "id": 24087,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
<<<<<<< HEAD
                              "id": 23302,
=======
                              "id": 24084,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
<<<<<<< HEAD
                                "id": 23297,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23286,
                                "src": "3850:5:19",
=======
                                "id": 24079,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24068,
                                "src": "3806:5:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
<<<<<<< HEAD
                                    "id": 23300,
                                    "name": "feex10",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23288,
                                    "src": "3866:6:19",
=======
                                    "id": 24082,
                                    "name": "feex10",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24070,
                                    "src": "3822:6:24",
>>>>>>> optimisation
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 23299,
=======
                                  "id": 24081,
>>>>>>> optimisation
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "3858:7:19",
=======
                                  "src": "3814:7:24",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 23298,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3858:7:19",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 23301,
=======
                                    "id": 24080,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3814:7:24",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 24083,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "3858:15:19",
=======
                                "src": "3814:15:24",
>>>>>>> optimisation
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
<<<<<<< HEAD
                              "src": "3850:23:19",
=======
                              "src": "3806:23:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
<<<<<<< HEAD
                          "id": 23303,
=======
                          "id": 24085,
>>>>>>> optimisation
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
<<<<<<< HEAD
                          "src": "3849:25:19",
=======
                          "src": "3805:25:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "31303030",
<<<<<<< HEAD
                          "id": 23304,
=======
                          "id": 24086,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3877:4:19",
=======
                          "src": "3833:4:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
<<<<<<< HEAD
                        "src": "3849:32:19",
=======
                        "src": "3805:32:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "3830:55:19",
=======
                    "src": "3786:55:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 23309,
                  "nodeType": "ExpressionStatement",
                  "src": "3830:55:19"
=======
                  "id": 24091,
                  "nodeType": "ExpressionStatement",
                  "src": "3786:55:24"
>>>>>>> optimisation
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "feeCalculation",
<<<<<<< HEAD
            "nameLocation": "3729:14:19",
=======
            "nameLocation": "3685:14:24",
>>>>>>> optimisation
            "parameters": {
              "id": 24071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24068,
                  "mutability": "mutable",
                  "name": "price",
<<<<<<< HEAD
                  "nameLocation": "3752:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23311,
                  "src": "3744:13:19",
=======
                  "nameLocation": "3708:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24093,
                  "src": "3700:13:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3744:7:19",
=======
                    "src": "3700:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24070,
                  "mutability": "mutable",
                  "name": "feex10",
<<<<<<< HEAD
                  "nameLocation": "3766:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23311,
                  "src": "3759:13:19",
=======
                  "nameLocation": "3722:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24093,
                  "src": "3715:13:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 24069,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3759:6:19",
=======
                    "src": "3715:6:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3743:30:19"
=======
              "src": "3699:30:24"
>>>>>>> optimisation
            },
            "returnParameters": {
              "id": 24074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24073,
                  "mutability": "mutable",
                  "name": "res",
<<<<<<< HEAD
                  "nameLocation": "3817:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23311,
                  "src": "3809:11:19",
=======
                  "nameLocation": "3773:3:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24093,
                  "src": "3765:11:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "3809:7:19",
=======
                    "src": "3765:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3808:13:19"
            },
            "scope": 23788,
=======
              "src": "3764:13:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 23438,
            "nodeType": "FunctionDefinition",
            "src": "3894:1159:19",
            "body": {
              "id": 23437,
              "nodeType": "Block",
              "src": "4032:1021:19",
=======
            "id": 24220,
            "nodeType": "FunctionDefinition",
            "src": "3850:1139:24",
            "body": {
              "id": 24219,
              "nodeType": "Block",
              "src": "3988:1001:24",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 23327,
=======
                        "id": 24109,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 23325,
                          "name": "sellPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23319,
                          "src": "4046:9:19",
=======
                          "id": 24107,
                          "name": "sellPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24101,
                          "src": "4002:9:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31303030",
<<<<<<< HEAD
                          "id": 23326,
=======
                          "id": 24108,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4058:4:19",
=======
                          "src": "4014:4:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
<<<<<<< HEAD
                        "src": "4046:16:19",
=======
                        "src": "4002:16:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c6c507269636520746f6f206c6f77",
<<<<<<< HEAD
                        "id": 23328,
=======
                        "id": 24110,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4064:19:19",
=======
                        "src": "4020:19:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71183d505590dc7f0650091e2f82a596f26fcfa65fdfd267355de1fc8747b9bb",
                          "typeString": "literal_string \"SellPrice too low\""
                        },
                        "value": "SellPrice too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71183d505590dc7f0650091e2f82a596f26fcfa65fdfd267355de1fc8747b9bb",
                          "typeString": "literal_string \"SellPrice too low\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23324,
=======
                      "id": 24106,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "4038:7:19",
=======
                      "src": "3994:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23329,
=======
                    "id": 24111,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4038:46:19",
=======
                    "src": "3994:46:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23330,
                  "nodeType": "ExpressionStatement",
                  "src": "4038:46:19"
=======
                  "id": 24112,
                  "nodeType": "ExpressionStatement",
                  "src": "3994:46:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
<<<<<<< HEAD
                                "id": 23334,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23313,
                                "src": "4113:5:19",
=======
                                "id": 24116,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24095,
                                "src": "4069:5:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23333,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21707,
                              "src": "4106:6:19",
=======
                              "id": 24115,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22161,
                              "src": "4062:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
<<<<<<< HEAD
                            "id": 23335,
=======
                            "id": 24117,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4106:13:19",
=======
                            "src": "4062:13:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23332,
                          "name": "isToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23121,
                          "src": "4098:7:19",
=======
                          "id": 24114,
                          "name": "isToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23903,
                          "src": "4054:7:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$22161_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 23336,
=======
                        "id": 24118,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4098:22:19",
=======
                        "src": "4054:22:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e204e6f742052656769737465726564",
<<<<<<< HEAD
                        "id": 23337,
=======
                        "id": 24119,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4122:22:19",
=======
                        "src": "4078:22:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4895f573f36b888de1a6ed51d586c0c4e8aa37ea097032eba97052ea50d2c6c7",
                          "typeString": "literal_string \"Token Not Registered\""
                        },
                        "value": "Token Not Registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4895f573f36b888de1a6ed51d586c0c4e8aa37ea097032eba97052ea50d2c6c7",
                          "typeString": "literal_string \"Token Not Registered\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23331,
=======
                      "id": 24113,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "4090:7:19",
=======
                      "src": "4046:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23338,
=======
                    "id": 24120,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4090:55:19",
=======
                    "src": "4046:55:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23339,
                  "nodeType": "ExpressionStatement",
                  "src": "4090:55:19"
                },
                {
                  "assignments": [
                    23342
=======
                  "id": 24121,
                  "nodeType": "ExpressionStatement",
                  "src": "4046:55:24"
                },
                {
                  "assignments": [
                    24124
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 23342,
                      "mutability": "mutable",
                      "name": "bufferCurrency",
                      "nameLocation": "4172:14:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23437,
                      "src": "4151:35:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                        "typeString": "struct CurrencyInfos"
                      },
                      "typeName": {
                        "id": 23341,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23340,
                          "name": "CurrencyInfos",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25035,
                          "src": "4151:13:19"
                        },
                        "referencedDeclaration": 25035,
                        "src": "4151:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage_ptr",
                          "typeString": "struct CurrencyInfos"
=======
                      "id": 24124,
                      "mutability": "mutable",
                      "name": "bufferCurrency",
                      "nameLocation": "4128:14:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24219,
                      "src": "4107:35:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                        "typeString": "struct currencyInfos"
                      },
                      "typeName": {
                        "id": 24123,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24122,
                          "name": "currencyInfos",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26887,
                          "src": "4107:13:24"
                        },
                        "referencedDeclaration": 26887,
                        "src": "4107:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_currencyInfos_$26887_storage_ptr",
                          "typeString": "struct currencyInfos"
>>>>>>> optimisation
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 23346,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23343,
                      "name": "currencyInfosByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22920,
                      "src": "4189:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                        "typeString": "mapping(address => struct CurrencyInfos storage ref)"
                      }
                    },
                    "id": 23345,
                    "indexExpression": {
                      "id": 23344,
                      "name": "currencyWanted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23315,
                      "src": "4219:14:19",
=======
                  "id": 24128,
                  "initialValue": {
                    "baseExpression": {
                      "id": 24125,
                      "name": "currencyByLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23702,
                      "src": "4145:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                        "typeString": "mapping(address => struct currencyInfos storage ref)"
                      }
                    },
                    "id": 24127,
                    "indexExpression": {
                      "id": 24126,
                      "name": "currencyWanted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24097,
                      "src": "4160:14:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "4189:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                      "typeString": "struct CurrencyInfos storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4151:88:19"
=======
                    "src": "4145:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                      "typeString": "struct currencyInfos storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4107:68:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23348,
                          "name": "bufferCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23342,
                          "src": "4253:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                            "typeString": "struct CurrencyInfos memory"
                          }
                        },
                        "id": 23349,
=======
                          "id": 24130,
                          "name": "bufferCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24124,
                          "src": "4189:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                            "typeString": "struct currencyInfos memory"
                          }
                        },
                        "id": 24131,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exist",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25030,
                        "src": "4253:20:19",
=======
                        "referencedDeclaration": 26882,
                        "src": "4189:20:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e6379206e6f7420746f6c657261746564",
<<<<<<< HEAD
                        "id": 23350,
=======
                        "id": 24132,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4275:24:19",
=======
                        "src": "4211:24:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4837158240e63c40e0ef78cec6bb6ebf8f1c5d289891ba7c0ac768615a5a7d33",
                          "typeString": "literal_string \"Currency not tolerated\""
                        },
                        "value": "Currency not tolerated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4837158240e63c40e0ef78cec6bb6ebf8f1c5d289891ba7c0ac768615a5a7d33",
                          "typeString": "literal_string \"Currency not tolerated\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23347,
=======
                      "id": 24129,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "4245:7:19",
=======
                      "src": "4181:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23351,
=======
                    "id": 24133,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4245:55:19",
=======
                    "src": "4181:55:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23352,
                  "nodeType": "ExpressionStatement",
                  "src": "4245:55:19"
=======
                  "id": 24134,
                  "nodeType": "ExpressionStatement",
                  "src": "4181:55:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23357,
=======
                          "id": 24139,
>>>>>>> optimisation
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
<<<<<<< HEAD
                          "src": "4342:3:19",
=======
                          "src": "4278:3:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 23358,
=======
                        "id": 24140,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "4342:10:19",
=======
                        "src": "4278:10:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 23361,
=======
                            "id": 24143,
>>>>>>> optimisation
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
<<<<<<< HEAD
                            "src": "4362:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$23788",
=======
                            "src": "4298:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$24570",
>>>>>>> optimisation
                              "typeString": "contract OTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 23360,
=======
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 24142,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "4354:7:19",
=======
                          "src": "4290:7:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 23359,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4354:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23362,
=======
                            "id": 24141,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4290:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24144,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4354:13:19",
=======
                        "src": "4290:13:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 23363,
                        "name": "sellPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23319,
                        "src": "4369:9:19",
=======
                        "id": 24145,
                        "name": "sellPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24101,
                        "src": "4305:9:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 23354,
                            "name": "currencyWanted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23315,
                            "src": "4313:14:19",
=======
                            "id": 24136,
                            "name": "currencyWanted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24097,
                            "src": "4249:14:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23353,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21707,
                          "src": "4306:6:19",
=======
                          "id": 24135,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22161,
                          "src": "4242:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
<<<<<<< HEAD
                        "id": 23355,
=======
                        "id": 24137,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4306:22:19",
=======
                        "src": "4242:22:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      },
<<<<<<< HEAD
                      "id": 23356,
=======
                      "id": 24138,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 21706,
                      "src": "4306:35:19",
=======
                      "referencedDeclaration": 22160,
                      "src": "4242:35:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 23364,
=======
                    "id": 24146,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4306:73:19",
=======
                    "src": "4242:73:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23365,
                  "nodeType": "ExpressionStatement",
                  "src": "4306:73:19"
                },
                {
                  "assignments": [
                    23367
=======
                  "id": 24147,
                  "nodeType": "ExpressionStatement",
                  "src": "4242:73:24"
                },
                {
                  "assignments": [
                    24149
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 23367,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "4418:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23437,
                      "src": "4411:12:19",
=======
                      "id": 24149,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "4354:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24219,
                      "src": "4347:12:24",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 23366,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4411:6:19",
=======
                        "id": 24148,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4347:6:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 23375,
=======
                  "id": 24157,
>>>>>>> optimisation
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
<<<<<<< HEAD
                            "id": 23370,
                            "name": "buyOrderByToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22915,
                            "src": "4433:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                            }
                          },
                          "id": 23372,
                          "indexExpression": {
                            "id": 23371,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23313,
                            "src": "4449:5:19",
=======
                            "id": 24152,
                            "name": "buyOrderByToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23697,
                            "src": "4369:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                            }
                          },
                          "id": 24154,
                          "indexExpression": {
                            "id": 24153,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24095,
                            "src": "4385:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "4433:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                            "typeString": "struct OrderInfo storage ref[] storage ref"
                          }
                        },
                        "id": 23373,
=======
                          "src": "4369:22:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                            "typeString": "struct orderInfo storage ref[] storage ref"
                          }
                        },
                        "id": 24155,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "4433:29:19",
=======
                        "src": "4369:29:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 23369,
=======
                      "id": 24151,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                      "src": "4426:6:19",
=======
                      "src": "4362:6:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 23368,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4426:6:19",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 23374,
=======
                        "id": 24150,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4362:6:24",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 24156,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4426:37:19",
=======
                    "src": "4362:37:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4411:52:19"
                },
                {
                  "assignments": [
                    23377
=======
                  "src": "4347:52:24"
                },
                {
                  "assignments": [
                    24159
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 23377,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "4477:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23437,
                      "src": "4469:11:19",
=======
                      "id": 24159,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "4413:3:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24219,
                      "src": "4405:11:24",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 23376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4469:7:19",
=======
                        "id": 24158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4405:7:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 23383,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23379,
                        "name": "sellPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23319,
                        "src": "4498:9:19",
=======
                  "id": 24165,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24161,
                        "name": "sellPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24101,
                        "src": "4434:9:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23380,
                          "name": "bufferCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23342,
                          "src": "4509:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CurrencyInfos_$25035_memory_ptr",
                            "typeString": "struct CurrencyInfos memory"
                          }
                        },
                        "id": 23381,
=======
                          "id": 24162,
                          "name": "bufferCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24124,
                          "src": "4445:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_currencyInfos_$26887_memory_ptr",
                            "typeString": "struct currencyInfos memory"
                          }
                        },
                        "id": 24163,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feeX10",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25032,
                        "src": "4509:21:19",
=======
                        "referencedDeclaration": 26884,
                        "src": "4445:21:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
<<<<<<< HEAD
                      "id": 23378,
                      "name": "feeCalculation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23311,
                      "src": "4483:14:19",
=======
                      "id": 24160,
                      "name": "feeCalculation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24093,
                      "src": "4419:14:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint16) pure returns (uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 23382,
=======
                    "id": 24164,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4483:48:19",
=======
                    "src": "4419:48:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4469:62:19"
=======
                  "src": "4405:62:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
<<<<<<< HEAD
                            "id": 23389,
=======
                            "id": 24171,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "4591:4:19",
=======
                            "src": "4527:4:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "hexValue": "66616c7365",
<<<<<<< HEAD
                            "id": 23390,
=======
                            "id": 24172,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "4605:5:19",
=======
                            "src": "4541:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
<<<<<<< HEAD
                            "id": 23391,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23367,
                            "src": "4620:5:19",
=======
                            "id": 24173,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24149,
                            "src": "4556:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
<<<<<<< HEAD
                                  "id": 23394,
=======
                                  "id": 24176,
>>>>>>> optimisation
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
<<<<<<< HEAD
                                  "src": "4642:5:19",
=======
                                  "src": "4578:5:24",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
<<<<<<< HEAD
                                "id": 23395,
=======
                                "id": 24177,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "src": "4642:15:19",
=======
                                "src": "4578:15:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23393,
=======
                              "id": 24175,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4635:6:19",
=======
                              "src": "4571:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
<<<<<<< HEAD
                                "id": 23392,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "4635:6:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23396,
=======
                                "id": 24174,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "4571:6:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24178,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4635:23:19",
=======
                            "src": "4571:23:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
<<<<<<< HEAD
                                "id": 23399,
=======
                                "id": 24181,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "4676:1:19",
=======
                                "src": "4612:1:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23398,
=======
                              "id": 24180,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4668:7:19",
=======
                              "src": "4604:7:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
<<<<<<< HEAD
                                "id": 23397,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4668:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23400,
=======
                                "id": 24179,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4604:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24182,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4668:10:19",
=======
                            "src": "4604:10:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
<<<<<<< HEAD
                              "id": 23401,
=======
                              "id": 24183,
>>>>>>> optimisation
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
<<<<<<< HEAD
                              "src": "4688:3:19",
=======
                              "src": "4624:3:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 23402,
=======
                            "id": 24184,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "4688:10:19",
=======
                            "src": "4624:10:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 23403,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23377,
                            "src": "4708:3:19",
=======
                            "id": 24185,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24159,
                            "src": "4644:3:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 23404,
                            "name": "sellPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23319,
                            "src": "4721:9:19",
=======
                            "id": 24186,
                            "name": "sellPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24101,
                            "src": "4657:9:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 23405,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23317,
                            "src": "4740:6:19",
=======
                            "id": 24187,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24099,
                            "src": "4676:6:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
<<<<<<< HEAD
                                "id": 23407,
                                "name": "currencyWanted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23315,
                                "src": "4763:14:19",
=======
                                "id": 24189,
                                "name": "currencyWanted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24097,
                                "src": "4699:14:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23406,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21707,
                              "src": "4756:6:19",
=======
                              "id": 24188,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22161,
                              "src": "4692:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
<<<<<<< HEAD
                            "id": 23408,
=======
                            "id": 24190,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4756:22:19",
=======
                            "src": "4692:22:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23388,
                          "name": "OrderInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25028,
                          "src": "4572:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_OrderInfo_$25028_storage_ptr_$",
                            "typeString": "type(struct OrderInfo storage pointer)"
                          }
                        },
                        "id": 23409,
=======
                          "id": 24170,
                          "name": "orderInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26880,
                          "src": "4508:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_orderInfo_$26880_storage_ptr_$",
                            "typeString": "type(struct orderInfo storage pointer)"
                          }
                        },
                        "id": 24191,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4572:214:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
=======
                        "src": "4508:214:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
=======
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                        }
                      ],
                      "expression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 23384,
                          "name": "buyOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22915,
                          "src": "4537:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 23386,
                        "indexExpression": {
                          "id": 23385,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23313,
                          "src": "4553:5:19",
=======
                          "id": 24166,
                          "name": "buyOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23697,
                          "src": "4473:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 24168,
                        "indexExpression": {
                          "id": 24167,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24095,
                          "src": "4489:5:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "4537:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                          "typeString": "struct OrderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 23387,
=======
                        "src": "4473:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                          "typeString": "struct orderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 24169,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "4537:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_ptr_$_t_struct$_OrderInfo_$25028_storage_$returns$__$bound_to$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct OrderInfo storage ref[] storage pointer,struct OrderInfo storage ref)"
                      }
                    },
                    "id": 23410,
=======
                      "src": "4473:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_ptr_$_t_struct$_orderInfo_$26880_storage_$returns$__$bound_to$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct orderInfo storage ref[] storage pointer,struct orderInfo storage ref)"
                      }
                    },
                    "id": 24192,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4537:255:19",
=======
                    "src": "4473:255:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23411,
                  "nodeType": "ExpressionStatement",
                  "src": "4537:255:19"
=======
                  "id": 24193,
                  "nodeType": "ExpressionStatement",
                  "src": "4473:255:24"
>>>>>>> optimisation
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
<<<<<<< HEAD
                            "id": 23414,
=======
                            "id": 24196,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "4847:4:19",
=======
                            "src": "4783:4:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          {
                            "hexValue": "66616c7365",
<<<<<<< HEAD
                            "id": 23415,
=======
                            "id": 24197,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "4861:5:19",
=======
                            "src": "4797:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
<<<<<<< HEAD
                            "id": 23416,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23367,
                            "src": "4876:5:19",
=======
                            "id": 24198,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24149,
                            "src": "4812:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
<<<<<<< HEAD
                                  "id": 23419,
=======
                                  "id": 24201,
>>>>>>> optimisation
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
<<<<<<< HEAD
                                  "src": "4898:5:19",
=======
                                  "src": "4834:5:24",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
<<<<<<< HEAD
                                "id": 23420,
=======
                                "id": 24202,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "src": "4898:15:19",
=======
                                "src": "4834:15:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23418,
=======
                              "id": 24200,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4891:6:19",
=======
                              "src": "4827:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
<<<<<<< HEAD
                                "id": 23417,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "4891:6:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23421,
=======
                                "id": 24199,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "4827:6:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24203,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4891:23:19",
=======
                            "src": "4827:23:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
<<<<<<< HEAD
                                "id": 23424,
=======
                                "id": 24206,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "4932:1:19",
=======
                                "src": "4868:1:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23423,
=======
                              "id": 24205,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "4924:7:19",
=======
                              "src": "4860:7:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
<<<<<<< HEAD
                                "id": 23422,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4924:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23425,
=======
                                "id": 24204,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4860:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24207,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "4924:10:19",
=======
                            "src": "4860:10:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
<<<<<<< HEAD
                              "id": 23426,
=======
                              "id": 24208,
>>>>>>> optimisation
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
<<<<<<< HEAD
                              "src": "4944:3:19",
=======
                              "src": "4880:3:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 23427,
=======
                            "id": 24209,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "4944:10:19",
=======
                            "src": "4880:10:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 23428,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23377,
                            "src": "4964:3:19",
=======
                            "id": 24210,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24159,
                            "src": "4900:3:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 23429,
                            "name": "sellPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23319,
                            "src": "4977:9:19",
=======
                            "id": 24211,
                            "name": "sellPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24101,
                            "src": "4913:9:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 23430,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23317,
                            "src": "4996:6:19",
=======
                            "id": 24212,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24099,
                            "src": "4932:6:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
<<<<<<< HEAD
                                "id": 23432,
                                "name": "currencyWanted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23315,
                                "src": "5019:14:19",
=======
                                "id": 24214,
                                "name": "currencyWanted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24097,
                                "src": "4955:14:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23431,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21707,
                              "src": "5012:6:19",
=======
                              "id": 24213,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22161,
                              "src": "4948:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
<<<<<<< HEAD
                            "id": 23433,
=======
                            "id": 24215,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "5012:22:19",
=======
                            "src": "4948:22:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23413,
                          "name": "OrderInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25028,
                          "src": "4828:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_OrderInfo_$25028_storage_ptr_$",
                            "typeString": "type(struct OrderInfo storage pointer)"
                          }
                        },
                        "id": 23434,
=======
                          "id": 24195,
                          "name": "orderInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26880,
                          "src": "4764:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_orderInfo_$26880_storage_ptr_$",
                            "typeString": "type(struct orderInfo storage pointer)"
                          }
                        },
                        "id": 24216,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4828:214:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
=======
                        "src": "4764:214:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      ],
                      "id": 23412,
                      "name": "BuyOrderInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22893,
                      "src": "4803:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_OrderInfo_$25028_memory_ptr_$returns$__$",
                        "typeString": "function (struct OrderInfo memory)"
                      }
                    },
                    "id": 23435,
=======
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
                        }
                      ],
                      "id": 24194,
                      "name": "BuyOrderInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23675,
                      "src": "4739:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_orderInfo_$26880_memory_ptr_$returns$__$",
                        "typeString": "function (struct orderInfo memory)"
                      }
                    },
                    "id": 24217,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4803:245:19",
=======
                    "src": "4739:245:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23436,
                  "nodeType": "EmitStatement",
                  "src": "4798:250:19"
=======
                  "id": 24218,
                  "nodeType": "EmitStatement",
                  "src": "4734:250:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "de8645e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 23322,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23321,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21042,
                  "src": "4019:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "4019:12:19"
              }
            ],
            "name": "initBuyOrder",
            "nameLocation": "3903:12:19",
            "parameters": {
              "id": 23320,
=======
                "id": 24104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24103,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21496,
                  "src": "3975:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "3975:12:24"
              }
            ],
            "name": "initBuyOrder",
            "nameLocation": "3859:12:24",
            "parameters": {
              "id": 24102,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23313,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3929:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23438,
                  "src": "3921:13:19",
=======
                  "id": 24095,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3885:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24220,
                  "src": "3877:13:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23312,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3921:7:19",
=======
                    "id": 24094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3877:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23315,
                  "mutability": "mutable",
                  "name": "currencyWanted",
                  "nameLocation": "3948:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23438,
                  "src": "3940:22:19",
=======
                  "id": 24097,
                  "mutability": "mutable",
                  "name": "currencyWanted",
                  "nameLocation": "3904:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24220,
                  "src": "3896:22:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:19",
=======
                    "id": 24096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23317,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3976:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23438,
                  "src": "3968:14:19",
=======
                  "id": 24099,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3932:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24220,
                  "src": "3924:14:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3968:7:19",
=======
                    "id": 24098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3924:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23319,
                  "mutability": "mutable",
                  "name": "sellPrice",
                  "nameLocation": "3996:9:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23438,
                  "src": "3988:17:19",
=======
                  "id": 24101,
                  "mutability": "mutable",
                  "name": "sellPrice",
                  "nameLocation": "3952:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24220,
                  "src": "3944:17:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3988:7:19",
=======
                    "id": 24100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3944:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3915:94:19"
            },
            "returnParameters": {
              "id": 23323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4032:0:19"
            },
            "scope": 23788,
=======
              "src": "3871:94:24"
            },
            "returnParameters": {
              "id": 24105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3988:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 23545,
            "nodeType": "FunctionDefinition",
            "src": "5057:861:19",
            "body": {
              "id": 23544,
              "nodeType": "Block",
              "src": "5174:744:19",
=======
            "id": 24327,
            "nodeType": "FunctionDefinition",
            "src": "4993:861:24",
            "body": {
              "id": 24326,
              "nodeType": "Block",
              "src": "5110:744:24",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
<<<<<<< HEAD
                                "id": 23452,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23440,
                                "src": "5203:5:19",
=======
                                "id": 24234,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24222,
                                "src": "5139:5:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23451,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21707,
                              "src": "5196:6:19",
=======
                              "id": 24233,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22161,
                              "src": "5132:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
<<<<<<< HEAD
                            "id": 23453,
=======
                            "id": 24235,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "5196:13:19",
=======
                            "src": "5132:13:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23450,
                          "name": "isToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23121,
                          "src": "5188:7:19",
=======
                          "id": 24232,
                          "name": "isToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23903,
                          "src": "5124:7:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$22161_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 23454,
=======
                        "id": 24236,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "5188:22:19",
=======
                        "src": "5124:22:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20556e6c6973746564",
<<<<<<< HEAD
                        "id": 23455,
=======
                        "id": 24237,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5212:16:19",
=======
                        "src": "5148:16:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23e9f7a47a7ac3a5c10ba0a6d92e0f1bccefe5f23f0ecefea15b7ed3978f4849",
                          "typeString": "literal_string \"Token Unlisted\""
                        },
                        "value": "Token Unlisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23e9f7a47a7ac3a5c10ba0a6d92e0f1bccefe5f23f0ecefea15b7ed3978f4849",
                          "typeString": "literal_string \"Token Unlisted\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23449,
=======
                      "id": 24231,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "5180:7:19",
=======
                      "src": "5116:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23456,
=======
                    "id": 24238,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5180:49:19",
=======
                    "src": "5116:49:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23457,
                  "nodeType": "ExpressionStatement",
                  "src": "5180:49:19"
                },
                {
                  "assignments": [
                    23460
=======
                  "id": 24239,
                  "nodeType": "ExpressionStatement",
                  "src": "5116:49:24"
                },
                {
                  "assignments": [
                    24242
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 23460,
                      "mutability": "mutable",
                      "name": "orderToCancel",
                      "nameLocation": "5252:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23544,
                      "src": "5235:30:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                        "typeString": "struct OrderInfo"
                      },
                      "typeName": {
                        "id": 23459,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23458,
                          "name": "OrderInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25028,
                          "src": "5235:9:19"
                        },
                        "referencedDeclaration": 25028,
                        "src": "5235:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                          "typeString": "struct OrderInfo"
=======
                      "id": 24242,
                      "mutability": "mutable",
                      "name": "orderToCancel",
                      "nameLocation": "5188:13:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24326,
                      "src": "5171:30:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                        "typeString": "struct orderInfo"
                      },
                      "typeName": {
                        "id": 24241,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24240,
                          "name": "orderInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26880,
                          "src": "5171:9:24"
                        },
                        "referencedDeclaration": 26880,
                        "src": "5171:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                          "typeString": "struct orderInfo"
>>>>>>> optimisation
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 23473,
                  "initialValue": {
                    "condition": {
                      "id": 23461,
                      "name": "TrueForSellFalseForBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23442,
                      "src": "5268:22:19",
=======
                  "id": 24255,
                  "initialValue": {
                    "condition": {
                      "id": 24243,
                      "name": "TrueForSellFalseForBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24224,
                      "src": "5204:22:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "baseExpression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 23467,
                          "name": "buyOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22915,
                          "src": "5338:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 23469,
                        "indexExpression": {
                          "id": 23468,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23440,
                          "src": "5354:5:19",
=======
                          "id": 24249,
                          "name": "buyOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23697,
                          "src": "5274:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 24251,
                        "indexExpression": {
                          "id": 24250,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24222,
                          "src": "5290:5:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "5338:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                          "typeString": "struct OrderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 23471,
                      "indexExpression": {
                        "id": 23470,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23444,
                        "src": "5361:5:19",
=======
                        "src": "5274:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                          "typeString": "struct orderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 24253,
                      "indexExpression": {
                        "id": 24252,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24226,
                        "src": "5297:5:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "5338:29:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                        "typeString": "struct OrderInfo storage ref"
                      }
                    },
                    "id": 23472,
=======
                      "src": "5274:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                        "typeString": "struct orderInfo storage ref"
                      }
                    },
                    "id": 24254,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
<<<<<<< HEAD
                    "src": "5268:99:19",
                    "trueExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 23462,
                          "name": "sellOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22909,
                          "src": "5299:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 23464,
                        "indexExpression": {
                          "id": 23463,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23440,
                          "src": "5316:5:19",
=======
                    "src": "5204:99:24",
                    "trueExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 24244,
                          "name": "sellOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23691,
                          "src": "5235:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 24246,
                        "indexExpression": {
                          "id": 24245,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24222,
                          "src": "5252:5:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "5299:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                          "typeString": "struct OrderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 23466,
                      "indexExpression": {
                        "id": 23465,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23444,
                        "src": "5323:5:19",
=======
                        "src": "5235:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                          "typeString": "struct orderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 24248,
                      "indexExpression": {
                        "id": 24247,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24226,
                        "src": "5259:5:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "5299:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                        "typeString": "struct OrderInfo storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                      "typeString": "struct OrderInfo storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5235:132:19"
=======
                      "src": "5235:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                        "typeString": "struct orderInfo storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                      "typeString": "struct orderInfo storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5171:132:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 23485,
=======
                        "id": 24267,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 23479,
=======
                          "id": 24261,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 23475,
                              "name": "orderToCancel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23460,
                              "src": "5388:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 23476,
=======
                              "id": 24257,
                              "name": "orderToCancel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24242,
                              "src": "5324:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                "typeString": "struct orderInfo memory"
                              }
                            },
                            "id": 24258,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 25016,
                            "src": "5388:20:19",
=======
                            "referencedDeclaration": 26868,
                            "src": "5324:20:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 23477,
=======
                              "id": 24259,
>>>>>>> optimisation
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
<<<<<<< HEAD
                              "src": "5412:3:19",
=======
                              "src": "5348:3:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 23478,
=======
                            "id": 24260,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "5412:10:19",
=======
                            "src": "5348:10:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "5388:34:19",
=======
                          "src": "5324:34:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 23484,
=======
                          "id": 24266,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 23480,
                              "name": "orderToCancel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23460,
                              "src": "5426:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 23481,
=======
                              "id": 24262,
                              "name": "orderToCancel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24242,
                              "src": "5362:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                "typeString": "struct orderInfo memory"
                              }
                            },
                            "id": 24263,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 25018,
                            "src": "5426:19:19",
=======
                            "referencedDeclaration": 26870,
                            "src": "5362:19:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 23482,
=======
                              "id": 24264,
>>>>>>> optimisation
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
<<<<<<< HEAD
                              "src": "5449:3:19",
=======
                              "src": "5385:3:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 23483,
=======
                            "id": 24265,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "5449:10:19",
=======
                            "src": "5385:10:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "5426:33:19",
=======
                          "src": "5362:33:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "5388:71:19",
=======
                        "src": "5324:71:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e63656c20756e617574686f72697a6564",
<<<<<<< HEAD
                        "id": 23486,
=======
                        "id": 24268,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5467:21:19",
=======
                        "src": "5403:21:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51370fb442315445d5cda937007c5d139c6a960dac0224cb53685e25d1ef7ef9",
                          "typeString": "literal_string \"Cancel unauthorized\""
                        },
                        "value": "Cancel unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51370fb442315445d5cda937007c5d139c6a960dac0224cb53685e25d1ef7ef9",
                          "typeString": "literal_string \"Cancel unauthorized\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23474,
=======
                      "id": 24256,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "5373:7:19",
=======
                      "src": "5309:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23487,
=======
                    "id": 24269,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5373:121:19",
=======
                    "src": "5309:121:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23488,
                  "nodeType": "ExpressionStatement",
                  "src": "5373:121:19"
                },
                {
                  "expression": {
                    "id": 23493,
=======
                  "id": 24270,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:121:24"
                },
                {
                  "expression": {
                    "id": 24275,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23489,
                        "name": "orderToCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23460,
                        "src": "5500:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 23491,
=======
                        "id": 24271,
                        "name": "orderToCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24242,
                        "src": "5436:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
                        }
                      },
                      "id": 24273,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "open",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25008,
                      "src": "5500:18:19",
=======
                      "referencedDeclaration": 26860,
                      "src": "5436:18:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 23492,
=======
                      "id": 24274,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5521:5:19",
=======
                      "src": "5457:5:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "5500:26:19",
=======
                    "src": "5436:26:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23494,
                  "nodeType": "ExpressionStatement",
                  "src": "5500:26:19"
                },
                {
                  "condition": {
                    "id": 23495,
                    "name": "TrueForSellFalseForBuy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23442,
                    "src": "5536:22:19",
=======
                  "id": 24276,
                  "nodeType": "ExpressionStatement",
                  "src": "5436:26:24"
                },
                {
                  "condition": {
                    "id": 24277,
                    "name": "TrueForSellFalseForBuy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24224,
                    "src": "5472:22:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
<<<<<<< HEAD
                    "id": 23542,
                    "nodeType": "Block",
                    "src": "5737:177:19",
=======
                    "id": 24324,
                    "nodeType": "Block",
                    "src": "5673:177:24",
>>>>>>> optimisation
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 23524,
=======
                                "id": 24306,
>>>>>>> optimisation
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
<<<<<<< HEAD
                                "src": "5777:3:19",
=======
                                "src": "5713:3:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
<<<<<<< HEAD
                              "id": 23525,
=======
                              "id": 24307,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "5777:10:19",
=======
                              "src": "5713:10:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 23526,
                                "name": "orderToCancel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23460,
                                "src": "5789:13:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 23527,
=======
                                "id": 24308,
                                "name": "orderToCancel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24242,
                                "src": "5725:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                  "typeString": "struct orderInfo memory"
                                }
                              },
                              "id": 24309,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 25022,
                              "src": "5789:19:19",
=======
                              "referencedDeclaration": 26874,
                              "src": "5725:19:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
<<<<<<< HEAD
                                "id": 23519,
                                "name": "orderToCancel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23460,
                                "src": "5745:13:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 23522,
=======
                                "id": 24301,
                                "name": "orderToCancel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24242,
                                "src": "5681:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                  "typeString": "struct orderInfo memory"
                                }
                              },
                              "id": 24304,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 25027,
                              "src": "5745:22:19",
=======
                              "referencedDeclaration": 26879,
                              "src": "5681:22:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            },
<<<<<<< HEAD
                            "id": 23523,
=======
                            "id": 24305,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 21674,
                            "src": "5745:31:19",
=======
                            "referencedDeclaration": 22128,
                            "src": "5681:31:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 23528,
=======
                          "id": 24310,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "5745:64:19",
=======
                          "src": "5681:64:24",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "id": 23529,
                        "nodeType": "ExpressionStatement",
                        "src": "5745:64:19"
                      },
                      {
                        "expression": {
                          "id": 23536,
=======
                        "id": 24311,
                        "nodeType": "ExpressionStatement",
                        "src": "5681:64:24"
                      },
                      {
                        "expression": {
                          "id": 24318,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
<<<<<<< HEAD
                                "id": 23530,
                                "name": "buyOrderByToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22915,
                                "src": "5817:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 23533,
                              "indexExpression": {
                                "id": 23531,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23440,
                                "src": "5833:5:19",
=======
                                "id": 24312,
                                "name": "buyOrderByToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23697,
                                "src": "5753:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 24315,
                              "indexExpression": {
                                "id": 24313,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24222,
                                "src": "5769:5:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "5817:22:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                                "typeString": "struct OrderInfo storage ref[] storage ref"
                              }
                            },
                            "id": 23534,
                            "indexExpression": {
                              "id": 23532,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23444,
                              "src": "5840:5:19",
=======
                              "src": "5753:22:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                                "typeString": "struct orderInfo storage ref[] storage ref"
                              }
                            },
                            "id": 24316,
                            "indexExpression": {
                              "id": 24314,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24226,
                              "src": "5776:5:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "5817:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                              "typeString": "struct OrderInfo storage ref"
=======
                            "src": "5753:29:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                              "typeString": "struct orderInfo storage ref"
>>>>>>> optimisation
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
<<<<<<< HEAD
                            "id": 23535,
                            "name": "orderToCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23460,
                            "src": "5849:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                              "typeString": "struct OrderInfo memory"
                            }
                          },
                          "src": "5817:45:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                            "typeString": "struct OrderInfo storage ref"
                          }
                        },
                        "id": 23537,
                        "nodeType": "ExpressionStatement",
                        "src": "5817:45:19"
=======
                            "id": 24317,
                            "name": "orderToCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24242,
                            "src": "5785:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                              "typeString": "struct orderInfo memory"
                            }
                          },
                          "src": "5753:45:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                            "typeString": "struct orderInfo storage ref"
                          }
                        },
                        "id": 24319,
                        "nodeType": "ExpressionStatement",
                        "src": "5753:45:24"
>>>>>>> optimisation
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 23539,
                              "name": "orderToCancel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23460,
                              "src": "5893:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                "typeString": "struct OrderInfo memory"
=======
                              "id": 24321,
                              "name": "orderToCancel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24242,
                              "src": "5829:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            ],
                            "id": 23538,
                            "name": "BuyOrderCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22898,
                            "src": "5875:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_OrderInfo_$25028_memory_ptr_$returns$__$",
                              "typeString": "function (struct OrderInfo memory)"
                            }
                          },
                          "id": 23540,
=======
                                "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                "typeString": "struct orderInfo memory"
                              }
                            ],
                            "id": 24320,
                            "name": "BuyOrderCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23680,
                            "src": "5811:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_orderInfo_$26880_memory_ptr_$returns$__$",
                              "typeString": "function (struct orderInfo memory)"
                            }
                          },
                          "id": 24322,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "5875:32:19",
=======
                          "src": "5811:32:24",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 23541,
                        "nodeType": "EmitStatement",
                        "src": "5870:37:19"
                      }
                    ]
                  },
                  "id": 23543,
                  "nodeType": "IfStatement",
                  "src": "5532:382:19",
                  "trueBody": {
                    "id": 23518,
                    "nodeType": "Block",
                    "src": "5560:171:19",
=======
                        "id": 24323,
                        "nodeType": "EmitStatement",
                        "src": "5806:37:24"
                      }
                    ]
                  },
                  "id": 24325,
                  "nodeType": "IfStatement",
                  "src": "5468:382:24",
                  "trueBody": {
                    "id": 24300,
                    "nodeType": "Block",
                    "src": "5496:171:24",
>>>>>>> optimisation
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 23500,
=======
                                "id": 24282,
>>>>>>> optimisation
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
<<<<<<< HEAD
                                "src": "5591:3:19",
=======
                                "src": "5527:3:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
<<<<<<< HEAD
                              "id": 23501,
=======
                              "id": 24283,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "5591:10:19",
=======
                              "src": "5527:10:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 23502,
                                "name": "orderToCancel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23460,
                                "src": "5603:13:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 23503,
=======
                                "id": 24284,
                                "name": "orderToCancel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24242,
                                "src": "5539:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                  "typeString": "struct orderInfo memory"
                                }
                              },
                              "id": 24285,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 25024,
                              "src": "5603:20:19",
=======
                              "referencedDeclaration": 26876,
                              "src": "5539:20:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 23497,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23440,
                                  "src": "5575:5:19",
=======
                                  "id": 24279,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24222,
                                  "src": "5511:5:24",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 23496,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21707,
                                "src": "5568:6:19",
=======
                                "id": 24278,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22161,
                                "src": "5504:6:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
<<<<<<< HEAD
                              "id": 23498,
=======
                              "id": 24280,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
<<<<<<< HEAD
                              "src": "5568:13:19",
=======
                              "src": "5504:13:24",
>>>>>>> optimisation
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            },
<<<<<<< HEAD
                            "id": 23499,
=======
                            "id": 24281,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 21674,
                            "src": "5568:22:19",
=======
                            "referencedDeclaration": 22128,
                            "src": "5504:22:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
<<<<<<< HEAD
                          "id": 23504,
=======
                          "id": 24286,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "5568:56:19",
=======
                          "src": "5504:56:24",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "id": 23505,
                        "nodeType": "ExpressionStatement",
                        "src": "5568:56:19"
                      },
                      {
                        "expression": {
                          "id": 23512,
=======
                        "id": 24287,
                        "nodeType": "ExpressionStatement",
                        "src": "5504:56:24"
                      },
                      {
                        "expression": {
                          "id": 24294,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
<<<<<<< HEAD
                                "id": 23506,
                                "name": "sellOrderByToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22909,
                                "src": "5632:16:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 23509,
                              "indexExpression": {
                                "id": 23507,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23440,
                                "src": "5649:5:19",
=======
                                "id": 24288,
                                "name": "sellOrderByToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23691,
                                "src": "5568:16:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                                }
                              },
                              "id": 24291,
                              "indexExpression": {
                                "id": 24289,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24222,
                                "src": "5585:5:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "5632:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                                "typeString": "struct OrderInfo storage ref[] storage ref"
                              }
                            },
                            "id": 23510,
                            "indexExpression": {
                              "id": 23508,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23444,
                              "src": "5656:5:19",
=======
                              "src": "5568:23:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                                "typeString": "struct orderInfo storage ref[] storage ref"
                              }
                            },
                            "id": 24292,
                            "indexExpression": {
                              "id": 24290,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24226,
                              "src": "5592:5:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "5632:30:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                              "typeString": "struct OrderInfo storage ref"
=======
                            "src": "5568:30:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                              "typeString": "struct orderInfo storage ref"
>>>>>>> optimisation
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
<<<<<<< HEAD
                            "id": 23511,
                            "name": "orderToCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23460,
                            "src": "5665:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                              "typeString": "struct OrderInfo memory"
                            }
                          },
                          "src": "5632:46:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                            "typeString": "struct OrderInfo storage ref"
                          }
                        },
                        "id": 23513,
                        "nodeType": "ExpressionStatement",
                        "src": "5632:46:19"
=======
                            "id": 24293,
                            "name": "orderToCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24242,
                            "src": "5601:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                              "typeString": "struct orderInfo memory"
                            }
                          },
                          "src": "5568:46:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                            "typeString": "struct orderInfo storage ref"
                          }
                        },
                        "id": 24295,
                        "nodeType": "ExpressionStatement",
                        "src": "5568:46:24"
>>>>>>> optimisation
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 23515,
                              "name": "orderToCancel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23460,
                              "src": "5710:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                "typeString": "struct OrderInfo memory"
=======
                              "id": 24297,
                              "name": "orderToCancel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24242,
                              "src": "5646:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            ],
                            "id": 23514,
                            "name": "SellOrderCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22883,
                            "src": "5691:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_OrderInfo_$25028_memory_ptr_$returns$__$",
                              "typeString": "function (struct OrderInfo memory)"
                            }
                          },
                          "id": 23516,
=======
                                "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                "typeString": "struct orderInfo memory"
                              }
                            ],
                            "id": 24296,
                            "name": "SellOrderCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23665,
                            "src": "5627:18:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_struct$_orderInfo_$26880_memory_ptr_$returns$__$",
                              "typeString": "function (struct orderInfo memory)"
                            }
                          },
                          "id": 24298,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "5691:33:19",
=======
                          "src": "5627:33:24",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 23517,
                        "nodeType": "EmitStatement",
                        "src": "5686:38:19"
=======
                        "id": 24299,
                        "nodeType": "EmitStatement",
                        "src": "5622:38:24"
>>>>>>> optimisation
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "08b4e2a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 23447,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23446,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21042,
                  "src": "5161:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "5161:12:19"
              }
            ],
            "name": "cancelOrder",
            "nameLocation": "5066:11:19",
            "parameters": {
              "id": 23445,
=======
                "id": 24229,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24228,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21496,
                  "src": "5097:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5097:12:24"
              }
            ],
            "name": "cancelOrder",
            "nameLocation": "5002:11:24",
            "parameters": {
              "id": 24227,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23440,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5091:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23545,
                  "src": "5083:13:19",
=======
                  "id": 24222,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5027:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24327,
                  "src": "5019:13:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5083:7:19",
=======
                    "id": 24221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5019:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23442,
                  "mutability": "mutable",
                  "name": "TrueForSellFalseForBuy",
                  "nameLocation": "5107:22:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23545,
                  "src": "5102:27:19",
=======
                  "id": 24224,
                  "mutability": "mutable",
                  "name": "TrueForSellFalseForBuy",
                  "nameLocation": "5043:22:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24327,
                  "src": "5038:27:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23441,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5102:4:19",
=======
                    "id": 24223,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5038:4:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23444,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5142:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23545,
                  "src": "5135:12:19",
=======
                  "id": 24226,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5078:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24327,
                  "src": "5071:12:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23443,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5135:6:19",
=======
                    "id": 24225,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5071:6:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5077:74:19"
            },
            "returnParameters": {
              "id": 23448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5174:0:19"
            },
            "scope": 23788,
=======
              "src": "5013:74:24"
            },
            "returnParameters": {
              "id": 24230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5110:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 23661,
            "nodeType": "FunctionDefinition",
            "src": "5922:746:19",
            "body": {
              "id": 23660,
              "nodeType": "Block",
              "src": "5986:682:19",
=======
            "id": 24443,
            "nodeType": "FunctionDefinition",
            "src": "5858:738:24",
            "body": {
              "id": 24442,
              "nodeType": "Block",
              "src": "5922:674:24",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
<<<<<<< HEAD
                                "id": 23557,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23547,
                                "src": "6015:5:19",
=======
                                "id": 24339,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24329,
                                "src": "5951:5:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23556,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21707,
                              "src": "6008:6:19",
=======
                              "id": 24338,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22161,
                              "src": "5944:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
<<<<<<< HEAD
                            "id": 23558,
=======
                            "id": 24340,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "6008:13:19",
=======
                            "src": "5944:13:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23555,
                          "name": "isToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23121,
                          "src": "6000:7:19",
=======
                          "id": 24337,
                          "name": "isToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23903,
                          "src": "5936:7:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$22161_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 23559,
=======
                        "id": 24341,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "6000:22:19",
=======
                        "src": "5936:22:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20556e6c6973746564",
<<<<<<< HEAD
                        "id": 23560,
=======
                        "id": 24342,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6024:16:19",
=======
                        "src": "5960:16:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23e9f7a47a7ac3a5c10ba0a6d92e0f1bccefe5f23f0ecefea15b7ed3978f4849",
                          "typeString": "literal_string \"Token Unlisted\""
                        },
                        "value": "Token Unlisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23e9f7a47a7ac3a5c10ba0a6d92e0f1bccefe5f23f0ecefea15b7ed3978f4849",
                          "typeString": "literal_string \"Token Unlisted\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23554,
=======
                      "id": 24336,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "5992:7:19",
=======
                      "src": "5928:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23561,
=======
                    "id": 24343,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5992:49:19",
=======
                    "src": "5928:49:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23562,
                  "nodeType": "ExpressionStatement",
                  "src": "5992:49:19"
                },
                {
                  "assignments": [
                    23565
=======
                  "id": 24344,
                  "nodeType": "ExpressionStatement",
                  "src": "5928:49:24"
                },
                {
                  "assignments": [
                    24347
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 23565,
                      "mutability": "mutable",
                      "name": "sellOrder",
                      "nameLocation": "6064:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23660,
                      "src": "6047:26:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                        "typeString": "struct OrderInfo"
                      },
                      "typeName": {
                        "id": 23564,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23563,
                          "name": "OrderInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25028,
                          "src": "6047:9:19"
                        },
                        "referencedDeclaration": 25028,
                        "src": "6047:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                          "typeString": "struct OrderInfo"
=======
                      "id": 24347,
                      "mutability": "mutable",
                      "name": "sellOrder",
                      "nameLocation": "6000:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24442,
                      "src": "5983:26:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                        "typeString": "struct orderInfo"
                      },
                      "typeName": {
                        "id": 24346,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24345,
                          "name": "orderInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26880,
                          "src": "5983:9:24"
                        },
                        "referencedDeclaration": 26880,
                        "src": "5983:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                          "typeString": "struct orderInfo"
>>>>>>> optimisation
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 23571,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 23566,
                        "name": "sellOrderByToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22909,
                        "src": "6076:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                        }
                      },
                      "id": 23568,
                      "indexExpression": {
                        "id": 23567,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23547,
                        "src": "6093:5:19",
=======
                  "id": 24353,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24348,
                        "name": "sellOrderByToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23691,
                        "src": "6012:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                        }
                      },
                      "id": 24350,
                      "indexExpression": {
                        "id": 24349,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24329,
                        "src": "6029:5:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6076:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                        "typeString": "struct OrderInfo storage ref[] storage ref"
                      }
                    },
                    "id": 23570,
                    "indexExpression": {
                      "id": 23569,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23549,
                      "src": "6100:5:19",
=======
                      "src": "6012:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                        "typeString": "struct orderInfo storage ref[] storage ref"
                      }
                    },
                    "id": 24352,
                    "indexExpression": {
                      "id": 24351,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24331,
                      "src": "6036:5:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "6076:30:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                      "typeString": "struct OrderInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6047:59:19"
=======
                    "src": "6012:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                      "typeString": "struct orderInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5983:59:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23573,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23565,
                          "src": "6120:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 23574,
=======
                          "id": 24355,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24347,
                          "src": "6056:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                            "typeString": "struct orderInfo memory"
                          }
                        },
                        "id": 24356,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "open",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25008,
                        "src": "6120:14:19",
=======
                        "referencedDeclaration": 26860,
                        "src": "6056:14:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f72646572436c6f736564",
<<<<<<< HEAD
                        "id": 23575,
=======
                        "id": 24357,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6136:13:19",
=======
                        "src": "6072:13:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd96e77c6eab92283e3fc303198bb0a523c0c7d93b4de1d8bf636eab7517c4ae",
                          "typeString": "literal_string \"OrderClosed\""
                        },
                        "value": "OrderClosed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd96e77c6eab92283e3fc303198bb0a523c0c7d93b4de1d8bf636eab7517c4ae",
                          "typeString": "literal_string \"OrderClosed\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23572,
=======
                      "id": 24354,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "6112:7:19",
=======
                      "src": "6048:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23576,
=======
                    "id": 24358,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6112:38:19",
=======
                    "src": "6048:38:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23577,
                  "nodeType": "ExpressionStatement",
                  "src": "6112:38:19"
                },
                {
                  "expression": {
                    "id": 23583,
=======
                  "id": 24359,
                  "nodeType": "ExpressionStatement",
                  "src": "6048:38:24"
                },
                {
                  "expression": {
                    "id": 24365,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23578,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23565,
                        "src": "6156:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 23580,
=======
                        "id": 24360,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24347,
                        "src": "6092:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
                        }
                      },
                      "id": 24362,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25018,
                      "src": "6156:15:19",
=======
                      "referencedDeclaration": 26870,
                      "src": "6092:15:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23581,
=======
                        "id": 24363,
>>>>>>> optimisation
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
<<<<<<< HEAD
                        "src": "6174:3:19",
=======
                        "src": "6110:3:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 23582,
=======
                      "id": 24364,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "6174:10:19",
=======
                      "src": "6110:10:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "6156:28:19",
=======
                    "src": "6092:28:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 23584,
                  "nodeType": "ExpressionStatement",
                  "src": "6156:28:19"
                },
                {
                  "expression": {
                    "id": 23589,
=======
                  "id": 24366,
                  "nodeType": "ExpressionStatement",
                  "src": "6092:28:24"
                },
                {
                  "expression": {
                    "id": 24371,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23585,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23565,
                        "src": "6190:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 23587,
=======
                        "id": 24367,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24347,
                        "src": "6126:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
                        }
                      },
                      "id": 24369,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "propositionAccepted",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25010,
                      "src": "6190:29:19",
=======
                      "referencedDeclaration": 26862,
                      "src": "6126:29:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
<<<<<<< HEAD
                      "id": 23588,
=======
                      "id": 24370,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "6222:4:19",
=======
                      "src": "6158:4:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "6190:36:19",
=======
                    "src": "6126:36:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23590,
                  "nodeType": "ExpressionStatement",
                  "src": "6190:36:19"
                },
                {
                  "expression": {
                    "id": 23595,
=======
                  "id": 24372,
                  "nodeType": "ExpressionStatement",
                  "src": "6126:36:24"
                },
                {
                  "expression": {
                    "id": 24377,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23591,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23565,
                        "src": "6232:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 23593,
=======
                        "id": 24373,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24347,
                        "src": "6168:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
                        }
                      },
                      "id": 24375,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "open",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25008,
                      "src": "6232:14:19",
=======
                      "referencedDeclaration": 26860,
                      "src": "6168:14:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 23594,
=======
                      "id": 24376,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "6249:5:19",
=======
                      "src": "6185:5:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "6232:22:19",
=======
                    "src": "6168:22:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23596,
                  "nodeType": "ExpressionStatement",
                  "src": "6232:22:19"
=======
                  "id": 24378,
                  "nodeType": "ExpressionStatement",
                  "src": "6168:22:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23602,
=======
                          "id": 24384,
>>>>>>> optimisation
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
<<<<<<< HEAD
                          "src": "6292:3:19",
=======
                          "src": "6228:3:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 23603,
=======
                        "id": 24385,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "6292:10:19",
=======
                        "src": "6228:10:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 23606,
=======
                            "id": 24388,
>>>>>>> optimisation
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
<<<<<<< HEAD
                            "src": "6312:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$23788",
=======
                            "src": "6248:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$24570",
>>>>>>> optimisation
                              "typeString": "contract OTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 23605,
=======
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 24387,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "6304:7:19",
=======
                          "src": "6240:7:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 23604,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6304:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23607,
=======
                            "id": 24386,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6240:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24389,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "6304:13:19",
=======
                        "src": "6240:13:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23608,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23565,
                          "src": "6319:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 23609,
=======
                          "id": 24390,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24347,
                          "src": "6255:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                            "typeString": "struct orderInfo memory"
                          }
                        },
                        "id": 24391,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25022,
                        "src": "6319:15:19",
=======
                        "referencedDeclaration": 26874,
                        "src": "6255:15:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
<<<<<<< HEAD
                          "id": 23597,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23565,
                          "src": "6260:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 23600,
=======
                          "id": 24379,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24347,
                          "src": "6196:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                            "typeString": "struct orderInfo memory"
                          }
                        },
                        "id": 24382,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25027,
                        "src": "6260:18:19",
=======
                        "referencedDeclaration": 26879,
                        "src": "6196:18:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      },
<<<<<<< HEAD
                      "id": 23601,
=======
                      "id": 24383,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 21706,
                      "src": "6260:31:19",
=======
                      "referencedDeclaration": 22160,
                      "src": "6196:31:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 23610,
=======
                    "id": 24392,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6260:75:19",
=======
                    "src": "6196:75:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23611,
                  "nodeType": "ExpressionStatement",
                  "src": "6260:75:19"
=======
                  "id": 24393,
                  "nodeType": "ExpressionStatement",
                  "src": "6196:75:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23617,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23565,
                          "src": "6376:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 23618,
=======
                          "id": 24399,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24347,
                          "src": "6312:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                            "typeString": "struct orderInfo memory"
                          }
                        },
                        "id": 24400,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25016,
                        "src": "6376:16:19",
=======
                        "referencedDeclaration": 26868,
                        "src": "6312:16:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 23623,
=======
                        "id": 24405,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 23619,
                            "name": "sellOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23565,
                            "src": "6400:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                              "typeString": "struct OrderInfo memory"
                            }
                          },
                          "id": 23620,
=======
                            "id": 24401,
                            "name": "sellOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24347,
                            "src": "6336:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                              "typeString": "struct orderInfo memory"
                            }
                          },
                          "id": 24402,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 25022,
                          "src": "6400:15:19",
=======
                          "referencedDeclaration": 26874,
                          "src": "6336:15:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 23621,
                            "name": "sellOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23565,
                            "src": "6418:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                              "typeString": "struct OrderInfo memory"
                            }
                          },
                          "id": 23622,
=======
                            "id": 24403,
                            "name": "sellOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24347,
                            "src": "6354:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                              "typeString": "struct orderInfo memory"
                            }
                          },
                          "id": 24404,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fee",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 25020,
                          "src": "6418:13:19",
=======
                          "referencedDeclaration": 26872,
                          "src": "6354:13:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "6400:31:19",
=======
                        "src": "6336:31:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
<<<<<<< HEAD
                          "id": 23612,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23565,
                          "src": "6341:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 23615,
=======
                          "id": 24394,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24347,
                          "src": "6277:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                            "typeString": "struct orderInfo memory"
                          }
                        },
                        "id": 24397,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25027,
                        "src": "6341:18:19",
=======
                        "referencedDeclaration": 26879,
                        "src": "6277:18:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      },
<<<<<<< HEAD
                      "id": 23616,
=======
                      "id": 24398,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 21674,
                      "src": "6341:27:19",
=======
                      "referencedDeclaration": 22128,
                      "src": "6277:27:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 23624,
=======
                    "id": 24406,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6341:96:19",
=======
                    "src": "6277:96:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23625,
                  "nodeType": "ExpressionStatement",
                  "src": "6341:96:19"
                },
                {
                  "expression": {
                    "id": 23636,
=======
                  "id": 24407,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:96:24"
                },
                {
                  "expression": {
                    "id": 24418,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 23626,
                          "name": "currencyInfosByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22920,
                          "src": "6443:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                            "typeString": "mapping(address => struct CurrencyInfos storage ref)"
                          }
                        },
                        "id": 23632,
=======
                          "id": 24408,
                          "name": "currencyByLink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23702,
                          "src": "6379:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                            "typeString": "mapping(address => struct currencyInfos storage ref)"
                          }
                        },
                        "id": 24414,
>>>>>>> optimisation
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 23629,
                                "name": "sellOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23565,
                                "src": "6474:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 23630,
=======
                                "id": 24411,
                                "name": "sellOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24347,
                                "src": "6402:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                                  "typeString": "struct orderInfo memory"
                                }
                              },
                              "id": 24412,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 25027,
                              "src": "6474:18:19",
=======
                              "referencedDeclaration": 26879,
                              "src": "6402:18:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            ],
<<<<<<< HEAD
                            "id": 23628,
=======
                            "id": 24410,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "6466:7:19",
=======
                            "src": "6394:7:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 23627,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6466:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23631,
=======
                              "id": 24409,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6394:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24413,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "6466:27:19",
=======
                          "src": "6394:27:24",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "6443:51:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                          "typeString": "struct CurrencyInfos storage ref"
                        }
                      },
                      "id": 23633,
=======
                        "src": "6379:43:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                          "typeString": "struct currencyInfos storage ref"
                        }
                      },
                      "id": 24415,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feePot",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25034,
                      "src": "6443:58:19",
=======
                      "referencedDeclaration": 26886,
                      "src": "6379:50:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23634,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23565,
                        "src": "6505:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 23635,
=======
                        "id": 24416,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24347,
                        "src": "6433:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
                        }
                      },
                      "id": 24417,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25020,
                      "src": "6505:13:19",
=======
                      "referencedDeclaration": 26872,
                      "src": "6433:13:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "6443:75:19",
=======
                    "src": "6379:67:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 23637,
                  "nodeType": "ExpressionStatement",
                  "src": "6443:75:19"
                },
                {
                  "expression": {
                    "id": 23644,
=======
                  "id": 24419,
                  "nodeType": "ExpressionStatement",
                  "src": "6379:67:24"
                },
                {
                  "expression": {
                    "id": 24426,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 23638,
                          "name": "sellOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22909,
                          "src": "6524:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 23641,
                        "indexExpression": {
                          "id": 23639,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23547,
                          "src": "6541:5:19",
=======
                          "id": 24420,
                          "name": "sellOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23691,
                          "src": "6452:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 24423,
                        "indexExpression": {
                          "id": 24421,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24329,
                          "src": "6469:5:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "6524:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                          "typeString": "struct OrderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 23642,
                      "indexExpression": {
                        "id": 23640,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23549,
                        "src": "6548:5:19",
=======
                        "src": "6452:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                          "typeString": "struct orderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 24424,
                      "indexExpression": {
                        "id": 24422,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24331,
                        "src": "6476:5:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6524:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                        "typeString": "struct OrderInfo storage ref"
=======
                      "src": "6452:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                        "typeString": "struct orderInfo storage ref"
>>>>>>> optimisation
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 23643,
                      "name": "sellOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23565,
                      "src": "6557:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                        "typeString": "struct OrderInfo memory"
                      }
                    },
                    "src": "6524:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                      "typeString": "struct OrderInfo storage ref"
                    }
                  },
                  "id": 23645,
                  "nodeType": "ExpressionStatement",
                  "src": "6524:42:19"
=======
                      "id": 24425,
                      "name": "sellOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24347,
                      "src": "6485:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                        "typeString": "struct orderInfo memory"
                      }
                    },
                    "src": "6452:42:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                      "typeString": "struct orderInfo storage ref"
                    }
                  },
                  "id": 24427,
                  "nodeType": "ExpressionStatement",
                  "src": "6452:42:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23650,
=======
                          "id": 24432,
>>>>>>> optimisation
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
<<<<<<< HEAD
                          "src": "6595:3:19",
=======
                          "src": "6523:3:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 23651,
=======
                        "id": 24433,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "6595:10:19",
=======
                        "src": "6523:10:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23652,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23565,
                          "src": "6607:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 23653,
=======
                          "id": 24434,
                          "name": "sellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24347,
                          "src": "6535:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                            "typeString": "struct orderInfo memory"
                          }
                        },
                        "id": 24435,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25024,
                        "src": "6607:16:19",
=======
                        "referencedDeclaration": 26876,
                        "src": "6535:16:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 23647,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23547,
                            "src": "6579:5:19",
=======
                            "id": 24429,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24329,
                            "src": "6507:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23646,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21707,
                          "src": "6572:6:19",
=======
                          "id": 24428,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22161,
                          "src": "6500:6:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
<<<<<<< HEAD
                        "id": 23648,
=======
                        "id": 24430,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "6572:13:19",
=======
                        "src": "6500:13:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      },
<<<<<<< HEAD
                      "id": 23649,
=======
                      "id": 24431,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 21674,
                      "src": "6572:22:19",
=======
                      "referencedDeclaration": 22128,
                      "src": "6500:22:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 23654,
=======
                    "id": 24436,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6572:52:19",
=======
                    "src": "6500:52:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23655,
                  "nodeType": "ExpressionStatement",
                  "src": "6572:52:19"
=======
                  "id": 24437,
                  "nodeType": "ExpressionStatement",
                  "src": "6500:52:24"
>>>>>>> optimisation
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 23657,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23565,
                        "src": "6653:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
=======
                        "id": 24439,
                        "name": "sellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24347,
                        "src": "6581:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
>>>>>>> optimisation
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      ],
                      "id": 23656,
                      "name": "SellOrderAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22888,
                      "src": "6635:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_OrderInfo_$25028_memory_ptr_$returns$__$",
                        "typeString": "function (struct OrderInfo memory)"
                      }
                    },
                    "id": 23658,
=======
                          "typeIdentifier": "t_struct$_orderInfo_$26880_memory_ptr",
                          "typeString": "struct orderInfo memory"
                        }
                      ],
                      "id": 24438,
                      "name": "SellOrderAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23670,
                      "src": "6563:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_orderInfo_$26880_memory_ptr_$returns$__$",
                        "typeString": "function (struct orderInfo memory)"
                      }
                    },
                    "id": 24440,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6635:28:19",
=======
                    "src": "6563:28:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23659,
                  "nodeType": "EmitStatement",
                  "src": "6630:33:19"
=======
                  "id": 24441,
                  "nodeType": "EmitStatement",
                  "src": "6558:33:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "9a83aa8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 23552,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23551,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21042,
                  "src": "5973:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "5973:12:19"
              }
            ],
            "name": "buy",
            "nameLocation": "5931:3:19",
            "parameters": {
              "id": 23550,
=======
                "id": 24334,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24333,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21496,
                  "src": "5909:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5909:12:24"
              }
            ],
            "name": "buy",
            "nameLocation": "5867:3:24",
            "parameters": {
              "id": 24332,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23547,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5943:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23661,
                  "src": "5935:13:19",
=======
                  "id": 24329,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5879:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24443,
                  "src": "5871:13:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5935:7:19",
=======
                    "id": 24328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5871:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23549,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5957:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23661,
                  "src": "5950:12:19",
=======
                  "id": 24331,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5893:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24443,
                  "src": "5886:12:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23548,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:6:19",
=======
                    "id": 24330,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5886:6:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5934:29:19"
            },
            "returnParameters": {
              "id": 23553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5986:0:19"
            },
            "scope": 23788,
=======
              "src": "5870:29:24"
            },
            "returnParameters": {
              "id": 24335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5922:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 23787,
            "nodeType": "FunctionDefinition",
            "src": "6672:872:19",
            "body": {
              "id": 23786,
              "nodeType": "Block",
              "src": "6814:730:19",
=======
            "id": 24569,
            "nodeType": "FunctionDefinition",
            "src": "6600:866:24",
            "body": {
              "id": 24568,
              "nodeType": "Block",
              "src": "6742:724:24",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
<<<<<<< HEAD
                                "id": 23681,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23663,
                                "src": "6843:5:19",
=======
                                "id": 24463,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24445,
                                "src": "6771:5:24",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
<<<<<<< HEAD
                              "id": 23680,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21707,
                              "src": "6836:6:19",
=======
                              "id": 24462,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22161,
                              "src": "6764:6:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
<<<<<<< HEAD
                            "id": 23682,
=======
                            "id": 24464,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "6836:13:19",
=======
                            "src": "6764:13:24",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$22161",
                              "typeString": "contract IERC20"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23679,
                          "name": "isToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23121,
                          "src": "6828:7:19",
=======
                          "id": 24461,
                          "name": "isToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23903,
                          "src": "6756:7:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$22161_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 23683,
=======
                        "id": 24465,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "6828:22:19",
=======
                        "src": "6756:22:24",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20556e6c6973746564",
<<<<<<< HEAD
                        "id": 23684,
=======
                        "id": 24466,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6852:16:19",
=======
                        "src": "6780:16:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23e9f7a47a7ac3a5c10ba0a6d92e0f1bccefe5f23f0ecefea15b7ed3978f4849",
                          "typeString": "literal_string \"Token Unlisted\""
                        },
                        "value": "Token Unlisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23e9f7a47a7ac3a5c10ba0a6d92e0f1bccefe5f23f0ecefea15b7ed3978f4849",
                          "typeString": "literal_string \"Token Unlisted\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23678,
=======
                      "id": 24460,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "6820:7:19",
=======
                      "src": "6748:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23685,
=======
                    "id": 24467,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6820:49:19",
=======
                    "src": "6748:49:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23686,
                  "nodeType": "ExpressionStatement",
                  "src": "6820:49:19"
                },
                {
                  "assignments": [
                    23689
=======
                  "id": 24468,
                  "nodeType": "ExpressionStatement",
                  "src": "6748:49:24"
                },
                {
                  "assignments": [
                    24471
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 23689,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "6893:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 23786,
                      "src": "6875:26:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                        "typeString": "struct OrderInfo"
                      },
                      "typeName": {
                        "id": 23688,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23687,
                          "name": "OrderInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25028,
                          "src": "6875:9:19"
                        },
                        "referencedDeclaration": 25028,
                        "src": "6875:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                          "typeString": "struct OrderInfo"
=======
                      "id": 24471,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "6821:8:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24568,
                      "src": "6803:26:24",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                        "typeString": "struct orderInfo"
                      },
                      "typeName": {
                        "id": 24470,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24469,
                          "name": "orderInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26880,
                          "src": "6803:9:24"
                        },
                        "referencedDeclaration": 26880,
                        "src": "6803:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                          "typeString": "struct orderInfo"
>>>>>>> optimisation
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 23695,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 23690,
                        "name": "buyOrderByToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22915,
                        "src": "6904:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                        }
                      },
                      "id": 23692,
                      "indexExpression": {
                        "id": 23691,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23663,
                        "src": "6920:5:19",
=======
                  "id": 24477,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24472,
                        "name": "buyOrderByToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23697,
                        "src": "6832:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                        }
                      },
                      "id": 24474,
                      "indexExpression": {
                        "id": 24473,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24445,
                        "src": "6848:5:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "6904:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                        "typeString": "struct OrderInfo storage ref[] storage ref"
                      }
                    },
                    "id": 23694,
                    "indexExpression": {
                      "id": 23693,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23665,
                      "src": "6927:5:19",
=======
                      "src": "6832:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                        "typeString": "struct orderInfo storage ref[] storage ref"
                      }
                    },
                    "id": 24476,
                    "indexExpression": {
                      "id": 24475,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24447,
                      "src": "6855:5:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "6904:29:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                      "typeString": "struct OrderInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6875:58:19"
=======
                    "src": "6832:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                      "typeString": "struct orderInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6803:58:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23697,
                          "name": "buyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23689,
                          "src": "6947:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                            "typeString": "struct OrderInfo storage pointer"
                          }
                        },
                        "id": 23698,
=======
                          "id": 24479,
                          "name": "buyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24471,
                          "src": "6875:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                            "typeString": "struct orderInfo storage pointer"
                          }
                        },
                        "id": 24480,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "open",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25008,
                        "src": "6947:13:19",
=======
                        "referencedDeclaration": 26860,
                        "src": "6875:13:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f72646572436c6f736564",
<<<<<<< HEAD
                        "id": 23699,
=======
                        "id": 24481,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "6962:13:19",
=======
                        "src": "6890:13:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd96e77c6eab92283e3fc303198bb0a523c0c7d93b4de1d8bf636eab7517c4ae",
                          "typeString": "literal_string \"OrderClosed\""
                        },
                        "value": "OrderClosed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd96e77c6eab92283e3fc303198bb0a523c0c7d93b4de1d8bf636eab7517c4ae",
                          "typeString": "literal_string \"OrderClosed\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23696,
=======
                      "id": 24478,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "6939:7:19",
=======
                      "src": "6867:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23700,
=======
                    "id": 24482,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6939:37:19",
=======
                    "src": "6867:37:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23701,
                  "nodeType": "ExpressionStatement",
                  "src": "6939:37:19"
=======
                  "id": 24483,
                  "nodeType": "ExpressionStatement",
                  "src": "6867:37:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 23709,
=======
                        "id": 24491,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 23703,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23689,
                            "src": "6990:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                              "typeString": "struct OrderInfo storage pointer"
                            }
                          },
                          "id": 23704,
=======
                            "id": 24485,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24471,
                            "src": "6918:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                              "typeString": "struct orderInfo storage pointer"
                            }
                          },
                          "id": 24486,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 25018,
                          "src": "6990:14:19",
=======
                          "referencedDeclaration": 26870,
                          "src": "6918:14:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 23707,
=======
                              "id": 24489,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "7016:1:19",
=======
                              "src": "6944:1:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 23706,
=======
                            "id": 24488,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "7008:7:19",
=======
                            "src": "6936:7:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 23705,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7008:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23708,
=======
                              "id": 24487,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6936:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24490,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "7008:10:19",
=======
                          "src": "6936:10:24",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "6990:28:19",
=======
                        "src": "6918:28:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e672061646472657373",
<<<<<<< HEAD
                        "id": 23710,
=======
                        "id": 24492,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "7020:15:19",
=======
                        "src": "6948:15:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01d62530369eeec9522047f7f3dc09a91dece4524b9a932f8c95addf3e8ce9e3",
                          "typeString": "literal_string \"Wrong address\""
                        },
                        "value": "Wrong address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01d62530369eeec9522047f7f3dc09a91dece4524b9a932f8c95addf3e8ce9e3",
                          "typeString": "literal_string \"Wrong address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 23702,
=======
                      "id": 24484,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "6982:7:19",
=======
                      "src": "6910:7:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 23711,
=======
                    "id": 24493,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "6982:54:19",
=======
                    "src": "6910:54:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23712,
                  "nodeType": "ExpressionStatement",
                  "src": "6982:54:19"
                },
                {
                  "expression": {
                    "id": 23718,
=======
                  "id": 24494,
                  "nodeType": "ExpressionStatement",
                  "src": "6910:54:24"
                },
                {
                  "expression": {
                    "id": 24500,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23713,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23689,
                        "src": "7042:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                          "typeString": "struct OrderInfo storage pointer"
                        }
                      },
                      "id": 23715,
=======
                        "id": 24495,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24471,
                        "src": "6970:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                          "typeString": "struct orderInfo storage pointer"
                        }
                      },
                      "id": 24497,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25016,
                      "src": "7042:15:19",
=======
                      "referencedDeclaration": 26868,
                      "src": "6970:15:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23716,
=======
                        "id": 24498,
>>>>>>> optimisation
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
<<<<<<< HEAD
                        "src": "7060:3:19",
=======
                        "src": "6988:3:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 23717,
=======
                      "id": 24499,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "7060:10:19",
=======
                      "src": "6988:10:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "7042:28:19",
=======
                    "src": "6970:28:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 23719,
                  "nodeType": "ExpressionStatement",
                  "src": "7042:28:19"
                },
                {
                  "expression": {
                    "id": 23724,
=======
                  "id": 24501,
                  "nodeType": "ExpressionStatement",
                  "src": "6970:28:24"
                },
                {
                  "expression": {
                    "id": 24506,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23720,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23689,
                        "src": "7076:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                          "typeString": "struct OrderInfo storage pointer"
                        }
                      },
                      "id": 23722,
=======
                        "id": 24502,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24471,
                        "src": "7004:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                          "typeString": "struct orderInfo storage pointer"
                        }
                      },
                      "id": 24504,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "propositionAccepted",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25010,
                      "src": "7076:28:19",
=======
                      "referencedDeclaration": 26862,
                      "src": "7004:28:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
<<<<<<< HEAD
                      "id": 23723,
=======
                      "id": 24505,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "7107:4:19",
=======
                      "src": "7035:4:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "7076:35:19",
=======
                    "src": "7004:35:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23725,
                  "nodeType": "ExpressionStatement",
                  "src": "7076:35:19"
                },
                {
                  "expression": {
                    "id": 23730,
=======
                  "id": 24507,
                  "nodeType": "ExpressionStatement",
                  "src": "7004:35:24"
                },
                {
                  "expression": {
                    "id": 24512,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23726,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23689,
                        "src": "7117:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                          "typeString": "struct OrderInfo storage pointer"
                        }
                      },
                      "id": 23728,
=======
                        "id": 24508,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24471,
                        "src": "7045:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                          "typeString": "struct orderInfo storage pointer"
                        }
                      },
                      "id": 24510,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "open",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25008,
                      "src": "7117:13:19",
=======
                      "referencedDeclaration": 26860,
                      "src": "7045:13:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 23729,
=======
                      "id": 24511,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "7133:5:19",
=======
                      "src": "7061:5:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "7117:21:19",
=======
                    "src": "7045:21:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23731,
                  "nodeType": "ExpressionStatement",
                  "src": "7117:21:19"
=======
                  "id": 24513,
                  "nodeType": "ExpressionStatement",
                  "src": "7045:21:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23736,
=======
                          "id": 24518,
>>>>>>> optimisation
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
<<<<<<< HEAD
                          "src": "7198:3:19",
=======
                          "src": "7128:3:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 23737,
=======
                        "id": 24519,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "7198:10:19",
=======
                        "src": "7128:10:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23738,
                          "name": "buyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23689,
                          "src": "7216:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                            "typeString": "struct OrderInfo storage pointer"
                          }
                        },
                        "id": 23739,
=======
                          "id": 24520,
                          "name": "buyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24471,
                          "src": "7146:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                            "typeString": "struct orderInfo storage pointer"
                          }
                        },
                        "id": 24521,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25018,
                        "src": "7216:14:19",
=======
                        "referencedDeclaration": 26870,
                        "src": "7146:14:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23740,
                          "name": "buyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23689,
                          "src": "7238:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                            "typeString": "struct OrderInfo storage pointer"
                          }
                        },
                        "id": 23741,
=======
                          "id": 24522,
                          "name": "buyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24471,
                          "src": "7168:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                            "typeString": "struct orderInfo storage pointer"
                          }
                        },
                        "id": 24523,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25024,
                        "src": "7238:15:19",
=======
                        "referencedDeclaration": 26876,
                        "src": "7168:15:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 23742,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23667,
                        "src": "7261:8:19",
=======
                        "id": 24524,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24449,
                        "src": "7191:8:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 23743,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23669,
                        "src": "7277:1:19",
=======
                        "id": 24525,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24451,
                        "src": "7207:1:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 23744,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23671,
                        "src": "7286:1:19",
=======
                        "id": 24526,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24453,
                        "src": "7216:1:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 23745,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23673,
                        "src": "7295:1:19",
=======
                        "id": 24527,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24455,
                        "src": "7225:1:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 23733,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23663,
                            "src": "7159:5:19",
=======
                            "id": 24515,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24445,
                            "src": "7087:5:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 23732,
                          "name": "IPropertyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24182,
                          "src": "7144:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPropertyToken_$24182_$",
                            "typeString": "type(contract IPropertyToken)"
                          }
                        },
                        "id": 23734,
=======
                          "id": 24514,
                          "name": "IPropertyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25869,
                          "src": "7072:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPropertyToken_$25869_$",
                            "typeString": "type(contract IPropertyToken)"
                          }
                        },
                        "id": 24516,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "7144:21:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPropertyToken_$24182",
                          "typeString": "contract IPropertyToken"
                        }
                      },
                      "id": 23735,
=======
                        "src": "7072:21:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPropertyToken_$25869",
                          "typeString": "contract IPropertyToken"
                        }
                      },
                      "id": 24517,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFromWithPermission",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 24181,
                      "src": "7144:46:19",
=======
                      "referencedDeclaration": 25858,
                      "src": "7072:48:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 23746,
=======
                    "id": 24528,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7144:158:19",
=======
                    "src": "7072:160:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23747,
                  "nodeType": "ExpressionStatement",
                  "src": "7144:158:19"
=======
                  "id": 24529,
                  "nodeType": "ExpressionStatement",
                  "src": "7072:160:24"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 23753,
=======
                          "id": 24535,
>>>>>>> optimisation
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
<<<<<<< HEAD
                          "src": "7335:3:19",
=======
                          "src": "7265:3:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 23754,
=======
                        "id": 24536,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "7335:10:19",
=======
                        "src": "7265:10:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 23759,
=======
                        "id": 24541,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 23755,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23689,
                            "src": "7347:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                              "typeString": "struct OrderInfo storage pointer"
                            }
                          },
                          "id": 23756,
=======
                            "id": 24537,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24471,
                            "src": "7277:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                              "typeString": "struct orderInfo storage pointer"
                            }
                          },
                          "id": 24538,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 25022,
                          "src": "7347:14:19",
=======
                          "referencedDeclaration": 26874,
                          "src": "7277:14:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 23757,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23689,
                            "src": "7364:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                              "typeString": "struct OrderInfo storage pointer"
                            }
                          },
                          "id": 23758,
=======
                            "id": 24539,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24471,
                            "src": "7294:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                              "typeString": "struct orderInfo storage pointer"
                            }
                          },
                          "id": 24540,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fee",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 25020,
                          "src": "7364:12:19",
=======
                          "referencedDeclaration": 26872,
                          "src": "7294:12:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "7347:29:19",
=======
                        "src": "7277:29:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
<<<<<<< HEAD
                          "id": 23748,
                          "name": "buyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23689,
                          "src": "7308:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                            "typeString": "struct OrderInfo storage pointer"
                          }
                        },
                        "id": 23751,
=======
                          "id": 24530,
                          "name": "buyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24471,
                          "src": "7238:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                            "typeString": "struct orderInfo storage pointer"
                          }
                        },
                        "id": 24533,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 25027,
                        "src": "7308:17:19",
=======
                        "referencedDeclaration": 26879,
                        "src": "7238:17:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$22161",
                          "typeString": "contract IERC20"
                        }
                      },
<<<<<<< HEAD
                      "id": 23752,
=======
                      "id": 24534,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 21674,
                      "src": "7308:26:19",
=======
                      "referencedDeclaration": 22128,
                      "src": "7238:26:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 23760,
=======
                    "id": 24542,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7308:69:19",
=======
                    "src": "7238:69:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 23761,
                  "nodeType": "ExpressionStatement",
                  "src": "7308:69:19"
                },
                {
                  "expression": {
                    "id": 23772,
=======
                  "id": 24543,
                  "nodeType": "ExpressionStatement",
                  "src": "7238:69:24"
                },
                {
                  "expression": {
                    "id": 24554,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 23762,
                          "name": "currencyInfosByAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22920,
                          "src": "7383:22:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyInfos_$25035_storage_$",
                            "typeString": "mapping(address => struct CurrencyInfos storage ref)"
                          }
                        },
                        "id": 23768,
=======
                          "id": 24544,
                          "name": "currencyByLink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23702,
                          "src": "7313:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_currencyInfos_$26887_storage_$",
                            "typeString": "mapping(address => struct currencyInfos storage ref)"
                          }
                        },
                        "id": 24550,
>>>>>>> optimisation
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
<<<<<<< HEAD
                                "id": 23765,
                                "name": "buyOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23689,
                                "src": "7414:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                                  "typeString": "struct OrderInfo storage pointer"
                                }
                              },
                              "id": 23766,
=======
                                "id": 24547,
                                "name": "buyOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24471,
                                "src": "7336:8:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                                  "typeString": "struct orderInfo storage pointer"
                                }
                              },
                              "id": 24548,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 25027,
                              "src": "7414:17:19",
=======
                              "referencedDeclaration": 26879,
                              "src": "7336:17:24",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$22161",
                                "typeString": "contract IERC20"
                              }
                            ],
<<<<<<< HEAD
                            "id": 23764,
=======
                            "id": 24546,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "7406:7:19",
=======
                            "src": "7328:7:24",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 23763,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7406:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23767,
=======
                              "id": 24545,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7328:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24549,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "7406:26:19",
=======
                          "src": "7328:26:24",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "7383:50:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CurrencyInfos_$25035_storage",
                          "typeString": "struct CurrencyInfos storage ref"
                        }
                      },
                      "id": 23769,
=======
                        "src": "7313:42:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_currencyInfos_$26887_storage",
                          "typeString": "struct currencyInfos storage ref"
                        }
                      },
                      "id": 24551,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feePot",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25034,
                      "src": "7383:57:19",
=======
                      "referencedDeclaration": 26886,
                      "src": "7313:49:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 23770,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23689,
                        "src": "7444:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                          "typeString": "struct OrderInfo storage pointer"
                        }
                      },
                      "id": 23771,
=======
                        "id": 24552,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24471,
                        "src": "7366:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                          "typeString": "struct orderInfo storage pointer"
                        }
                      },
                      "id": 24553,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 25020,
                      "src": "7444:12:19",
=======
                      "referencedDeclaration": 26872,
                      "src": "7366:12:24",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "7383:73:19",
=======
                    "src": "7313:65:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 23773,
                  "nodeType": "ExpressionStatement",
                  "src": "7383:73:19"
                },
                {
                  "expression": {
                    "id": 23780,
=======
                  "id": 24555,
                  "nodeType": "ExpressionStatement",
                  "src": "7313:65:24"
                },
                {
                  "expression": {
                    "id": 24562,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 23774,
                          "name": "buyOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22915,
                          "src": "7462:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct OrderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 23777,
                        "indexExpression": {
                          "id": 23775,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23663,
                          "src": "7478:5:19",
=======
                          "id": 24556,
                          "name": "buyOrderByToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23697,
                          "src": "7384:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct orderInfo storage ref[] storage ref)"
                          }
                        },
                        "id": 24559,
                        "indexExpression": {
                          "id": 24557,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24445,
                          "src": "7400:5:24",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "7462:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderInfo_$25028_storage_$dyn_storage",
                          "typeString": "struct OrderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 23778,
                      "indexExpression": {
                        "id": 23776,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23665,
                        "src": "7485:5:19",
=======
                        "src": "7384:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_orderInfo_$26880_storage_$dyn_storage",
                          "typeString": "struct orderInfo storage ref[] storage ref"
                        }
                      },
                      "id": 24560,
                      "indexExpression": {
                        "id": 24558,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24447,
                        "src": "7407:5:24",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "7462:29:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                        "typeString": "struct OrderInfo storage ref"
=======
                      "src": "7384:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                        "typeString": "struct orderInfo storage ref"
>>>>>>> optimisation
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 23779,
                      "name": "buyOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23689,
                      "src": "7494:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                        "typeString": "struct OrderInfo storage pointer"
                      }
                    },
                    "src": "7462:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderInfo_$25028_storage",
                      "typeString": "struct OrderInfo storage ref"
                    }
                  },
                  "id": 23781,
                  "nodeType": "ExpressionStatement",
                  "src": "7462:40:19"
=======
                      "id": 24561,
                      "name": "buyOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24471,
                      "src": "7416:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                        "typeString": "struct orderInfo storage pointer"
                      }
                    },
                    "src": "7384:40:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_orderInfo_$26880_storage",
                      "typeString": "struct orderInfo storage ref"
                    }
                  },
                  "id": 24563,
                  "nodeType": "ExpressionStatement",
                  "src": "7384:40:24"
>>>>>>> optimisation
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 23783,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23689,
                        "src": "7530:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                          "typeString": "struct OrderInfo storage pointer"
=======
                        "id": 24565,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24471,
                        "src": "7452:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                          "typeString": "struct orderInfo storage pointer"
>>>>>>> optimisation
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_OrderInfo_$25028_storage_ptr",
                          "typeString": "struct OrderInfo storage pointer"
                        }
                      ],
                      "id": 23782,
                      "name": "BuyOrderAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22903,
                      "src": "7513:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_OrderInfo_$25028_memory_ptr_$returns$__$",
                        "typeString": "function (struct OrderInfo memory)"
                      }
                    },
                    "id": 23784,
=======
                          "typeIdentifier": "t_struct$_orderInfo_$26880_storage_ptr",
                          "typeString": "struct orderInfo storage pointer"
                        }
                      ],
                      "id": 24564,
                      "name": "BuyOrderAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23685,
                      "src": "7435:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_orderInfo_$26880_memory_ptr_$returns$__$",
                        "typeString": "function (struct orderInfo memory)"
                      }
                    },
                    "id": 24566,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "7513:26:19",
=======
                    "src": "7435:26:24",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 23785,
                  "nodeType": "EmitStatement",
                  "src": "7508:31:19"
=======
                  "id": 24567,
                  "nodeType": "EmitStatement",
                  "src": "7430:31:24"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "d28c3a9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 23676,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23675,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21042,
                  "src": "6801:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "6801:12:19"
              }
            ],
            "name": "sell",
            "nameLocation": "6681:4:19",
            "parameters": {
              "id": 23674,
=======
                "id": 24458,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24457,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21496,
                  "src": "6729:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "6729:12:24"
              }
            ],
            "name": "sell",
            "nameLocation": "6609:4:24",
            "parameters": {
              "id": 24456,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23663,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6699:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23787,
                  "src": "6691:13:19",
=======
                  "id": 24445,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6627:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24569,
                  "src": "6619:13:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6691:7:19",
=======
                    "id": 24444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6619:7:24",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23665,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "6717:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23787,
                  "src": "6710:12:19",
=======
                  "id": 24447,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "6645:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24569,
                  "src": "6638:12:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23664,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6710:6:19",
=======
                    "id": 24446,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:6:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23667,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "6736:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23787,
                  "src": "6728:16:19",
=======
                  "id": 24449,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "6664:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24569,
                  "src": "6656:16:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6728:7:19",
=======
                    "id": 24448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6656:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23669,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "6756:1:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23787,
                  "src": "6750:7:19",
=======
                  "id": 24451,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "6684:1:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24569,
                  "src": "6678:7:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23668,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6750:5:19",
=======
                    "id": 24450,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6678:5:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23671,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "6771:1:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23787,
                  "src": "6763:9:19",
=======
                  "id": 24453,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "6699:1:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24569,
                  "src": "6691:9:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23670,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6763:7:19",
=======
                    "id": 24452,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6691:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 23673,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "6786:1:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 23787,
                  "src": "6778:9:19",
=======
                  "id": 24455,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "6714:1:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24569,
                  "src": "6706:9:24",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 23672,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6778:7:19",
=======
                    "id": 24454,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6706:7:24",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "6685:106:19"
            },
            "returnParameters": {
              "id": 23677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6814:0:19"
            },
            "scope": 23788,
=======
              "src": "6613:106:24"
            },
            "returnParameters": {
              "id": 24459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6742:0:24"
            },
            "scope": 24570,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23652,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21396,
              "src": "325:7:24"
            },
            "id": 23653,
            "nodeType": "InheritanceSpecifier",
            "src": "325:7:24"
          },
          {
            "baseName": {
              "id": 23654,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21497,
              "src": "334:15:24"
            },
            "id": 23655,
            "nodeType": "InheritanceSpecifier",
            "src": "334:15:24"
          }
        ],
        "canonicalName": "OTC",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
<<<<<<< HEAD
          23788,
          21043,
          21003,
          21962
        ],
        "name": "OTC",
        "nameLocation": "318:3:19",
        "scope": 23789,
=======
          24570,
          21497,
          21396,
          22416
        ],
        "name": "OTC",
        "nameLocation": "318:3:24",
        "scope": 24571,
>>>>>>> optimisation
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 24
}