{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "bound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstPrice",
          "type": "uint256"
        }
      ],
      "name": "testBuy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "fee",
          "type": "uint16"
        }
      ],
      "name": "testOTCbuyOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "fee",
          "type": "uint16"
        }
      ],
      "name": "testOTCsellOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRentHouse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
<<<<<<< HEAD
    "object": "0x60806040526000805460ff19166001179055670de0b6b3a764000060088190556000196009557f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9600a5562000058906203616e62000428565b600b55600a600b546200006c919062000456565b600c556040516001625e79b760e01b0319815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af1158015620000c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000eb919062000479565b600d80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260026004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af115801562000161573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000187919062000479565b600e80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260036004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af1158015620001fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000223919062000479565b600f80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b03198152600480820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa18649906024016020604051808303816000875af115801562000298573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002be919062000479565b601080546001600160a01b0319166001600160a01b0392909216919091179055604051620002ec906200040c565b604051809103906000f08015801562000309573d6000803e3d6000fd5b50601180546001600160a01b0319166001600160a01b03928316908117909155600c546010546040519293919291169062000344906200041a565b6001600160a01b0393841681526020810192909252909116604082015260a0606082018190526018908201527f31207275652041666672652c203735303138205061726973000000000000000060c082015260e06080820181905260079082015266062826e6a6062760cb1b61010082015261012001604051809103906000f080158015620003d7573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03929092169190911790553480156200040557600080fd5b50620004ab565b610c448062007c1e83390190565b611c3c806200886283390190565b60008160001904831182151516156200045157634e487b7160e01b600052601160045260246000fd5b500290565b6000826200047457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156200048c57600080fd5b81516001600160a01b0381168114620004a457600080fd5b9392505050565b61776380620004bb6000396000f3fe60806040523480156200001157600080fd5b5060043610620001af5760003560e01c80636f59707511620000f0578063c88a5e6d11620000a3578063e77b6747116200007a578063e77b674714620003a5578063e9a79a7b14620003bc578063edd2545f14620003d3578063fa7626d414620003ea57600080fd5b8063c88a5e6d1462000360578063d06d82291462000377578063d82555f1146200038e57600080fd5b80636f59707514620002d257806397754ae914620002e95780639a8325a01462000300578063af9bbe5f1462000317578063b9c071b4146200032e578063ba414fa6146200034557600080fd5b80633a1143da116200016657806355dda6bb116200013d57806355dda6bb14620001be5780635a6c1eed146200027e5780636bce989b14620002a45780636e0b95d014620002bb57600080fd5b80633a1143da14620001be5780633a76846314620002505780633bf82db1146200026757600080fd5b80630a9254e414620001b4578063108554f214620001c0578063233240ee14620001d757806329a9e30014620001ee57806329ce9dde14620002055780632d6c17a31462000239575b600080fd5b620001be620003f8565b005b620001be620001d1366004620044c8565b6200045f565b620001be620001e8366004620044f5565b62000538565b620001be620001ff3660046200451a565b62000614565b6200021c620002163660046200462d565b620006c6565b6040516001600160a01b0390911681526020015b60405180910390f35b620001be6200024a366004620046ad565b620007f6565b6200021c600080516020620076ee83398151915281565b620001be62000278366004620046c7565b62000836565b620002956200028f36600462004708565b62000918565b60405190815260200162000230565b620001be620002b5366004620046c7565b62000a51565b620001be620002cc366004620046ad565b62000a65565b620001be620002e3366004620044f5565b62000d4f565b620001be620002fa36600462004744565b62000df9565b6200021c620003113660046200479a565b6200103a565b620001be62000328366004620046c7565b6200113c565b620001be6200033f366004620046ad565b620011ea565b6200034f6200120b565b604051901515815260200162000230565b620001be62000371366004620044c8565b6200133c565b620001be620003883660046200451a565b62001372565b620001be6200039f366004620046c7565b62001424565b620001be620003b6366004620047ec565b6200151b565b620001be620003cd366004620044c8565b62002164565b620001be620003e4366004620047ec565b6200220a565b6000546200034f9060ff1681565b6040516372eb5f8160e11b81526362b97afa6004820152600080516020620076ee8339815191529063e5d6bf0290602401600060405180830381600087803b1580156200044457600080fd5b505af115801562000459573d6000803e3d6000fd5b50505050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062000495908590859060040162004828565b600060405180830381600087803b158015620004b057600080fd5b505af1158015620004c5573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020620076ee83398151915292506306447d5691506024015b600060405180830381600087803b1580156200051b57600080fd5b505af115801562000530573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062000572908490600160801b9060040162004828565b600060405180830381600087803b1580156200058d57600080fd5b505af1158015620005a2573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020620076ee833981519152925063ca669fa791506024015b600060405180830381600087803b158015620005f857600080fd5b505af11580156200060d573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d906200064e908590600160801b9060040162004828565b600060405180830381600087803b1580156200066957600080fd5b505af11580156200067e573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020620076ee83398151915292506347e50cce915060440162000500565b604051638d1cc92560e01b81526000908190600080516020620076ee83398151915290638d1cc92590620006ff90879060040162004870565b6000604051808303816000875af11580156200071f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620007499190810190620048db565b836040516020016200075d92919062004929565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216620007ef5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020620076ee83398151915263e5d6bf0262000817834262004972565b6040518263ffffffff1660e01b8152600401620005dd91815260200190565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d906200086c908690859060040162004828565b600060405180830381600087803b1580156200088757600080fd5b505af11580156200089c573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020620076ee83398151915292506345b5607891506044015b600060405180830381600087803b158015620008fa57600080fd5b505af11580156200090f573d6000803e3d6000fd5b50505050505050565b600081831115620009925760405162461bcd60e51b815260206004820152603a60248201527f5465737420626f756e642875696e743235362c75696e743235362c75696e743260448201527f3536293a204d6178206973206c657373207468616e206d696e2e0000000000006064820152608401620007e6565b6000620009a0848462004972565b905080600003620009b457839150620009f4565b6000198103620009c757849150620009f4565b620009d2816200498c565b90506000620009e28287620049be565b9050620009f08186620049d5565b9250505b60408051818152600c818301526b109bdd5b990814995cdd5b1d60a21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b62000a60838383600062000df9565b505050565b60125460408051630cb2dac360e21b81529051600080516020620076ee83398151915292634c63e562926001600160a01b03909116916332cb6b0c916004808201926020929091908290030181865afa15801562000ac7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aed9190620049f0565b6040516001600160e01b031960e084901b1681529084106004820152602401600060405180830381600087803b15801562000b2757600080fd5b505af115801562000b3c573d6000803e3d6000fd5b5050600d546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee83398151915292506306447d569150602401600060405180830381600087803b15801562000b9557600080fd5b505af115801562000baa573d6000803e3d6000fd5b505060115460405163140e25ad60e31b8152600481018590526001600160a01b03909116925063a0712d689150602401600060405180830381600087803b15801562000bf557600080fd5b505af115801562000c0a573d6000803e3d6000fd5b505060115460125460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062000c479290911690859060040162004828565b6020604051808303816000875af115801562000c67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c8d919062004a0a565b50601254600d546001600160a01b039182169163cce7ec13911662000cb4600a8562004a2a565b6040518363ffffffff1660e01b815260040162000cd392919062004828565b600060405180830381600087803b15801562000cee57600080fd5b505af115801562000d03573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620076ee83398151915293506390c5013b9250600480830192600092919082900301818387803b158015620005f857600080fd5b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062000d89908490600160801b9060040162004828565b600060405180830381600087803b15801562000da457600080fd5b505af115801562000db9573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020620076ee83398151915292506306447d569150602401620005dd565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000e4f9162004a41565b6000604051808303816000865af19150503d806000811462000e8e576040519150601f19603f3d011682016040523d82523d6000602084013e62000e93565b606091505b5091505060008180602001905181019062000eaf9190620049f0565b905062000f218462000f1a8762000ef16370a0823160e01b62000ed460018d62002f6e565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062002f93565b8215620005305760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162000f6c919062004a41565b6000604051808303816000865af19150503d806000811462000fab576040519150601f19603f3d011682016040523d82523d6000602084013e62000fb0565b606091505b5091505060008180602001905181019062000fcc9190620049f0565b90508286101562000ff75762000fe3868462004972565b62000fef908262004972565b905062001012565b62001003838762004972565b6200100f9082620049d5565b90505b620010308162000f1a6318160ddd60e01b62000ed460018d62002f6e565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020620076ee83398151915290638d1cc925906200107390869060040162004870565b6000604051808303816000875af115801562001093573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010bd9190810190620048db565b90508051602082016000f091506001600160a01b038216620011365760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401620007e6565b50919050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062001172908690859060040162004828565b600060405180830381600087803b1580156200118d57600080fd5b505af1158015620011a2573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020620076ee83398151915292506347e50cce9150604401620008df565b600080516020620076ee83398151915263e5d6bf02620008178342620049d5565b60008054610100900460ff16156200122c5750600054610100900460ff1690565b6000600080516020620076ee8339815191523b156200133757604051600090600080516020620076ee833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620012999083906519985a5b195960d21b9060200162004828565b60408051601f1981840301815290829052620012b9929160200162004a5f565b60408051601f1981840301815290829052620012d59162004a41565b6000604051808303816000865af19150503d806000811462001314576040519150601f19603f3d011682016040523d82523d6000602084013e62001319565b606091505b509150508080602001905181019062001333919062004a0a565b9150505b919050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062000500908590859060040162004828565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d90620013ac908590600160801b9060040162004828565b600060405180830381600087803b158015620013c757600080fd5b505af1158015620013dc573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020620076ee83398151915292506345b56078915060440162000500565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051620014f0906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000a608162000f1a8462000ef16370a0823160e01b62000ed460018a62002f6e565b604051632631f2b160e11b81526101f461ffff8316106004820152600080516020620076ee83398151915290634c63e56290602401600060405180830381600087803b1580156200156b57600080fd5b505af115801562001580573d6000803e3d6000fd5b505060125460408051630cb2dac360e21b81529051600080516020620076ee8339815191529450634c63e56293506103e8926001600160a01b0316916332cb6b0c9160048083019260209291908290030181865afa158015620015e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200160d9190620049f0565b62001619919062004a2a565b6200162690601e62004a92565b62001633600a8762004a2a565b6040516001600160e01b031960e085901b16815291116004820152602401600060405180830381600087803b1580156200166c57600080fd5b505af115801562001681573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e885116004820152600080516020620076ee8339815191529250634c63e5629150602401600060405180830381600087803b158015620016d157600080fd5b505af1158015620016e6573d6000803e3d6000fd5b5050600954600080516020620076ee8339815191529250634c63e562915062001713906103e89062004a2a565b6040516001600160e01b031960e084901b1681529085106004820152602401600060405180830381600087803b1580156200174d57600080fd5b505af115801562001762573d6000803e3d6000fd5b5050601154600f54604051600094506001600160a01b03928316935091169084906200178e906200446d565b6001600160a01b03938416815292909116602083015261ffff166040820152606001604051809103906000f080158015620017cd573d6000803e3d6000fd5b5090506000620017df600a8662004a2a565b60125460405163d48bfca760e01b81526001600160a01b03918216600482015291925083169063d48bfca790602401600060405180830381600087803b1580156200182957600080fd5b505af11580156200183e573d6000803e3d6000fd5b50506012546040516319f3736160e01b81526001600160a01b03918216600482015290851692506319f373619150602401602060405180830381865afa1580156200188d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018b3919062004a0a565b620018c257620018c262004ab4565b600d546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee833981519152906306447d5690602401600060405180830381600087803b1580156200191757600080fd5b505af11580156200192c573d6000803e3d6000fd5b505060115460095460405163095ea7b360e01b81526001600160a01b03909216935063095ea7b39250620019669186919060040162004828565b6020604051808303816000875af115801562001986573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019ac919062004a0a565b5060115460405163140e25ad60e31b8152600481018690526001600160a01b039091169063a0712d6890602401600060405180830381600087803b158015620019f457600080fd5b505af115801562001a09573d6000803e3d6000fd5b5050601154600d546040516370a0823160e01b81526001600160a01b039182166004820152889450911691506370a0823190602401602060405180830381865afa15801562001a5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a829190620049f0565b1462001aa25760405162461bcd60e51b8152600401620007e69062004aca565b601254601154604051636f4322f360e11b81526001600160a01b039283166004820152908216602482015260448101839052606481018690529083169063de8645e690608401600060405180830381600087803b15801562001b0357600080fd5b505af115801562001b18573d6000803e3d6000fd5b5050601154600d546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562001b69573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b8f9190620049f0565b1562001bd35760405162461bcd60e51b8152602060048201526012602482015271213abc9027b93232b910333a1032b93937b960711b6044820152606401620007e6565b6011546040516370a0823160e01b81526001600160a01b038481166004830152869216906370a0823190602401602060405180830381865afa15801562001c1e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c449190620049f0565b1462001c645760405162461bcd60e51b8152600401620007e69062004af0565b604080516390c5013b60e01b81529051600080516020620076ee833981519152916390c5013b91600480830192600092919082900301818387803b15801562001cac57600080fd5b505af115801562001cc1573d6000803e3d6000fd5b5050600e546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee83398151915292506306447d569150602401600060405180830381600087803b15801562001d1a57600080fd5b505af115801562001d2f573d6000803e3d6000fd5b505060115460405163140e25ad60e31b8152600481018990526001600160a01b03909116925063a0712d689150602401600060405180830381600087803b15801562001d7a57600080fd5b505af115801562001d8f573d6000803e3d6000fd5b505060115460125460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062001dcc9290911690899060040162004828565b6020604051808303816000875af115801562001dec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e12919062004a0a565b50601254600e5460405163cce7ec1360e01b81526001600160a01b039283169263cce7ec139262001e4b92911690859060040162004828565b600060405180830381600087803b15801562001e6657600080fd5b505af115801562001e7b573d6000803e3d6000fd5b5050601254600e546040516370a0823160e01b81526001600160a01b039182166004820152859450911691506370a0823190602401602060405180830381865afa15801562001ece573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ef49190620049f0565b1462001f145760405162461bcd60e51b8152600401620007e69062004aca565b601254600e546009546000928392839262001f43926001600160a01b0390811692169088908890600262002fa3565b60125460095460405163d28c3a9b60e01b81526001600160a01b03928316600482015260006024820152604481019190915260ff851660648201526084810184905260a48101839052939650919450925086169063d28c3a9b9060c401600060405180830381600087803b15801562001fbb57600080fd5b505af115801562001fd0573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620076ee83398151915293506390c5013b9250600480830192600092919082900301818387803b1580156200201c57600080fd5b505af115801562002031573d6000803e3d6000fd5b5050601154604051631ac3ddeb60e01b81526001600160a01b0391821660048201529088169250631ac3ddeb9150602401600060405180830381600087803b1580156200207d57600080fd5b505af115801562002092573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa158015620020e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021099190620049f0565b6103e86200211c61ffff89168a62004a92565b62002128919062004a2a565b14620010305760405162461bcd60e51b815260206004820152600a60248201526946656550726f626c656d60b01b6044820152606401620007e6565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d906200219a908590859060040162004828565b600060405180830381600087803b158015620021b557600080fd5b505af1158015620021ca573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020620076ee833981519152925063ca669fa7915060240162000500565b604051632631f2b160e11b81526101f461ffff8316106004820152600080516020620076ee83398151915290634c63e56290602401600060405180830381600087803b1580156200225a57600080fd5b505af11580156200226f573d6000803e3d6000fd5b505060125460408051630cb2dac360e21b81529051600080516020620076ee8339815191529450634c63e56293506103e8926001600160a01b0316916332cb6b0c9160048083019260209291908290030181865afa158015620022d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022fc9190620049f0565b62002308919062004a2a565b6200231590601e62004a92565b62002322600a8762004a2a565b6040516001600160e01b031960e085901b16815291116004820152602401600060405180830381600087803b1580156200235b57600080fd5b505af115801562002370573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e885116004820152600080516020620076ee8339815191529250634c63e5629150602401600060405180830381600087803b158015620023c057600080fd5b505af1158015620023d5573d6000803e3d6000fd5b5050600954600080516020620076ee8339815191529250634c63e562915062002402906103e89062004a2a565b6040516001600160e01b031960e084901b1681529085106004820152602401600060405180830381600087803b1580156200243c57600080fd5b505af115801562002451573d6000803e3d6000fd5b5050601154600f54604051600094506001600160a01b03928316935091169084906200247d906200446d565b6001600160a01b03938416815292909116602083015261ffff166040820152606001604051809103906000f080158015620024bc573d6000803e3d6000fd5b5090506000620024ce600a8662004a2a565b60125460405163d48bfca760e01b81526001600160a01b03918216600482015291925083169063d48bfca790602401600060405180830381600087803b1580156200251857600080fd5b505af11580156200252d573d6000803e3d6000fd5b50506012546040516319f3736160e01b81526001600160a01b03918216600482015290851692506319f373619150602401602060405180830381865afa1580156200257c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025a2919062004a0a565b620025b157620025b162004ab4565b600d546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee833981519152906306447d5690602401600060405180830381600087803b1580156200260657600080fd5b505af11580156200261b573d6000803e3d6000fd5b505060115460125460095460405163095ea7b360e01b81526001600160a01b03938416955063095ea7b3945062002659939092169160040162004828565b6020604051808303816000875af115801562002679573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200269f919062004a0a565b5060115460405163140e25ad60e31b8152600481018790526001600160a01b039091169063a0712d6890602401600060405180830381600087803b158015620026e757600080fd5b505af1158015620026fc573d6000803e3d6000fd5b5050601254600d5460405163cce7ec1360e01b81526001600160a01b03928316945063cce7ec139350620027399290911690859060040162004828565b600060405180830381600087803b1580156200275457600080fd5b505af115801562002769573d6000803e3d6000fd5b5050601254600d546040516370a0823160e01b81526001600160a01b039182166004820152859450911691506370a0823190602401602060405180830381865afa158015620027bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027e29190620049f0565b14620028025760405162461bcd60e51b8152600401620007e69062004aca565b601254600d546009546000928392839262002831926001600160a01b0390811692169088908890600162002fa3565b601154604051630371237f60e61b81526001600160a01b0391821660048201529396509194509250600091829182919089169063dc48dfc090602401606060405180830381865afa1580156200288b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028b1919062004b1d565b92509250925082620029125760405162461bcd60e51b815260206004820152602360248201527f496e69742070726f626c656d2063757272656e637920646f65736e27742065786044820152621a5cdd60ea1b6064820152608401620007e6565b8861ffff168261ffff16146200295e5760405162461bcd60e51b815260206004820152601060248201526f496e6974206665652070726f626c656d60801b6044820152606401620007e6565b601254601154600954604051636bdf6b3960e01b81526001600160a01b0393841660048201529183166024830152604482018a9052606482018d9052608482015260ff881660a482015260c4810187905260e4810186905290891690636bdf6b399061010401600060405180830381600087803b158015620029df57600080fd5b505af1158015620029f4573d6000803e3d6000fd5b5050601254600d546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562002a45573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a6b9190620049f0565b1562002a8b5760405162461bcd60e51b8152600401620007e69062004af0565b6012546040516370a0823160e01b81526001600160a01b038a81166004830152899216906370a0823190602401602060405180830381865afa15801562002ad6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002afc9190620049f0565b1462002b1c5760405162461bcd60e51b8152600401620007e69062004af0565b604080516390c5013b60e01b81529051600080516020620076ee833981519152916390c5013b91600480830192600092919082900301818387803b15801562002b6457600080fd5b505af115801562002b79573d6000803e3d6000fd5b5050600e546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee83398151915292506306447d569150602401600060405180830381600087803b15801562002bd257600080fd5b505af115801562002be7573d6000803e3d6000fd5b505060115460405163140e25ad60e31b8152600481018e90526001600160a01b03909116925063a0712d689150602401600060405180830381600087803b15801562002c3257600080fd5b505af115801562002c47573d6000803e3d6000fd5b505060115460095460405163095ea7b360e01b81526001600160a01b03909216935063095ea7b3925062002c81918c919060040162004828565b6020604051808303816000875af115801562002ca1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002cc7919062004a0a565b50601254604051639a83aa8b60e01b81526001600160a01b0391821660048201526000602482015290891690639a83aa8b90604401600060405180830381600087803b15801562002d1757600080fd5b505af115801562002d2c573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620076ee83398151915293506390c5013b9250600480830192600092919082900301818387803b15801562002d7857600080fd5b505af115801562002d8d573d6000803e3d6000fd5b5050601154604051631ac3ddeb60e01b81526001600160a01b039182166004820152908b169250631ac3ddeb9150602401600060405180830381600087803b15801562002dd957600080fd5b505af115801562002dee573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b03918216600482015262002e709450911691506370a0823190602401602060405180830381865afa15801562002e44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e6a9190620049f0565b6200326a565b62002e936103e862002e8761ffff8c168d62004a92565b62002e6a919062004a2a565b601154600f546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562002ee0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f069190620049f0565b6103e862002f1961ffff8c168d62004a92565b62002f25919062004a2a565b1462002f615760405162461bcd60e51b815260206004820152600a60248201526946656550726f626c656d60b01b6044820152606401620007e6565b5050505050505050505050565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62002f9f8282620032b5565b5050565b600080600080600a548989898d6001600160a01b0316637ecebe008e6040518263ffffffff1660e01b815260040162002feb91906001600160a01b0391909116815260200190565b602060405180830381865afa15801562003009573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200302f9190620049f0565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8b6001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620030e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200310b9190810190620048db565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201526001600160a01b038c1660a082015260c0016040516020818303038152906040528051906020012090506000620031d7828460405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6040516338d07aa960e21b81526004810189905260248101829052909150600080516020620076ee8339815191529063e341eaa4906044016060604051808303816000875af11580156200322f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003255919062004b65565b95509550955050505096509650969350505050565b620032b2816040516024016200328291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790526200361e565b50565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200332857602002820191906000526020600020905b81548152602001906001019080831162003313575b505050505090506000836200333d836200363f565b6040516020016200335092919062004a5f565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620033a491869188910162004ba4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620033df57620033dd87620036ec565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200342091879189910162004ba4565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162003467919062004a41565b600060405180830381855afa9150503d8060008114620034a4576040519150601f19603f3d011682016040523d82523d6000602084013e620034a9565b606091505b509150620034c6905081620034c088602062004a92565b620043e3565b604051630667f9d760e41b815290925060009150600080516020620076ee8339815191529063667f9d709062003503908b90879060040162004828565b6020604051808303816000875af115801562003523573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035499190620049f0565b90508082146200356d5760405162461bcd60e51b8152600401620007e69062004be0565b6040516370ca10bb60e01b8152600080516020620076ee833981519152906370ca10bb90620035a5908b9087908e9060040162004c7b565b600060405180830381600087803b158015620035c057600080fd5b505af1158015620035d5573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200360a60028b0160006200447b565b896004016000905550505050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606060008251602062003653919062004a92565b67ffffffffffffffff8111156200366e576200366e62004552565b6040519080825280601f01601f19166020018201604052801562003699576020820181803683370190505b50905060005b8351811015620007ef576000848281518110620036c057620036c062004c9c565b602002602001015190508082602002602001840152508080620036e3906200498c565b9150506200369f565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200375e57602002820191906000526020600020905b81548152602001906001019080831162003749575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620037aa9250859187910162004ba4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562003849576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200381991859187910162004ba4565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362003857836200363f565b6040516020016200386a92919062004a5f565b60405160208183030381529060405290506000805160206200770e83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620038c957600080fd5b505af1158015620038de573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620038ff919062004a41565b600060405180830381855afa9150503d80600081146200393c576040519150601f19603f3d011682016040523d82523d6000602084013e62003941565b606091505b50915062003958905081620034c087602062004a92565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020620076ee833981519152906365bc9481906024016000604051808303816000875af1158015620039b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620039df919081019062004d3b565b509050805160010362003ca85760006000805160206200770e83398151915260001c6001600160a01b031663667f9d70898460008151811062003a265762003a2662004c9c565b60200260200101516040518363ffffffff1660e01b815260040162003a4d92919062004828565b6020604051808303816000875af115801562003a6d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a939190620049f0565b90508062003af7577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062003ad35762003ad362004c9c565b602002602001015160001c60405162003aee92919062004828565b60405180910390a15b80831462003b195760405162461bcd60e51b8152600401620007e69062004be0565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162003b5192919062004ba4565b604051602081830303815290604052805190602001208560008151811062003b7d5762003b7d62004c9c565b602002602001015160001c60405162003b9a949392919062004d9c565b60405180910390a18160008151811062003bb85762003bb862004c9c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262003c03918a918c910162004ba4565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162003c6d918a918c910162004ba4565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062004266565b600181511115620041f55760005b8151811015620041ee5760006000805160206200770e83398151915260001c6001600160a01b031663667f9d708a85858151811062003cf95762003cf962004c9c565b60200260200101516040518363ffffffff1660e01b815260040162003d2092919062004828565b6020604051808303816000875af115801562003d40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d669190620049f0565b90508062003dc9577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062003da55762003da562004c9c565b602002602001015160001c60405162003dc092919062004828565b60405180910390a15b6000805160206200770e83398151915260001c6001600160a01b03166370ca10bb8a85858151811062003e005762003e0062004c9c565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162003e2e9392919062004c7b565b600060405180830381600087803b15801562003e4957600080fd5b505af115801562003e5e573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162003e80919062004a41565b600060405180830381855afa9150503d806000811462003ebd576040519150601f19603f3d011682016040523d82523d6000602084013e62003ec2565b606091505b50909250905062003eda81620034c08b602062004a92565b955081801562003eee575061133760f01b86145b1562004141577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162003f2c92919062004ba4565b6040516020818303038152906040528051906020012088888151811062003f575762003f5762004c9c565b602002602001015160001c60405162003f74949392919062004d9c565b60405180910390a184848151811062003f915762003f9162004c9c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262003fdc918d918f910162004ba4565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200406992919062004ba4565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200770e83398151915260001c6001600160a01b03166370ca10bb8c878781518110620040db57620040db62004c9c565b6020026020010151866040518463ffffffff1660e01b8152600401620041049392919062004c7b565b600060405180830381600087803b1580156200411f57600080fd5b505af115801562004134573d6000803e3d6000fd5b50505050505050620041ee565b6000805160206200770e83398151915260001c6001600160a01b03166370ca10bb8c87878151811062004178576200417862004c9c565b6020026020010151866040518463ffffffff1660e01b8152600401620041a19392919062004c7b565b600060405180830381600087803b158015620041bc57600080fd5b505af1158015620041d1573d6000803e3d6000fd5b505050505050508080620041e5906200498c565b91505062003cb6565b5062004266565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401620007e6565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620042aa9188918a910162004ba4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620043395760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401620007e6565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200436a60028a0160006200447b565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620043b09188918a910162004ba4565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111620043fa578451620043fd565b60205b905060005b8181101562004463576200441881600862004a92565b86620044258388620049d5565b8151811062004438576200443862004c9c565b01602001516001600160f81b031916901c9290921791806200445a816200498c565b91505062004402565b5090949350505050565b6129218062004dcd83390190565b5080546000825590600052602060002090810190620032b291905b80821115620044ac576000815560010162004496565b5090565b80356001600160a01b03811681146200133757600080fd5b60008060408385031215620044dc57600080fd5b620044e783620044b0565b946020939093013593505050565b6000602082840312156200450857600080fd5b6200451382620044b0565b9392505050565b600080604083850312156200452e57600080fd5b6200453983620044b0565b91506200454960208401620044b0565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562004594576200459462004552565b604052919050565b600067ffffffffffffffff821115620045b957620045b962004552565b50601f01601f191660200190565b6000620045de620045d8846200459c565b62004568565b9050828152838383011115620045f357600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200461c57600080fd5b6200451383833560208501620045c7565b600080604083850312156200464157600080fd5b823567ffffffffffffffff808211156200465a57600080fd5b62004668868387016200460a565b935060208501359150808211156200467f57600080fd5b508301601f810185136200469257600080fd5b620046a385823560208401620045c7565b9150509250929050565b600060208284031215620046c057600080fd5b5035919050565b600080600060608486031215620046dd57600080fd5b620046e884620044b0565b9250620046f860208501620044b0565b9150604084013590509250925092565b6000806000606084860312156200471e57600080fd5b505081359360208301359350604090920135919050565b8015158114620032b257600080fd5b600080600080608085870312156200475b57600080fd5b6200476685620044b0565b93506200477660208601620044b0565b92506040850135915060608501356200478f8162004735565b939692955090935050565b600060208284031215620047ad57600080fd5b813567ffffffffffffffff811115620047c557600080fd5b620047d3848285016200460a565b949350505050565b61ffff81168114620032b257600080fd5b6000806000606084860312156200480257600080fd5b833592506020840135915060408401356200481d81620047db565b809150509250925092565b6001600160a01b03929092168252602082015260400190565b60005b838110156200485e57818101518382015260200162004844565b83811115620004595750506000910152565b60208152600082518060208401526200489181604085016020870162004841565b601f01601f19169190910160400192915050565b6000620048b6620045d8846200459c565b9050828152838383011115620048cb57600080fd5b6200451383602083018462004841565b600060208284031215620048ee57600080fd5b815167ffffffffffffffff8111156200490657600080fd5b8201601f810184136200491857600080fd5b620047d384825160208401620048a5565b600083516200493d81846020880162004841565b8351908301906200495381836020880162004841565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156200498757620049876200495c565b500390565b600060018201620049a157620049a16200495c565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082620049d057620049d0620049a8565b500690565b60008219821115620049eb57620049eb6200495c565b500190565b60006020828403121562004a0357600080fd5b5051919050565b60006020828403121562004a1d57600080fd5b8151620045138162004735565b60008262004a3c5762004a3c620049a8565b500490565b6000825162004a5581846020870162004841565b9190910192915050565b6001600160e01b031983168152815160009062004a8481600485016020870162004841565b919091016004019392505050565b600081600019048311821515161562004aaf5762004aaf6200495c565b500290565b634e487b7160e01b600052600160045260246000fd5b6020808252600c908201526b213abc90333a1032b93937b960a11b604082015260600190565b60208082526013908201527229b2b6361027b93232b910333a1032b93937b960691b604082015260600190565b60008060006060848603121562004b3357600080fd5b835162004b408162004735565b602085015190935062004b5381620047db565b80925050604084015190509250925092565b60008060006060848603121562004b7b57600080fd5b835160ff8116811462004b8d57600080fd5b602085015160409095015190969495509392505050565b825160009082906020808701845b8381101562004bd05781518552938201939082019060010162004bb2565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600082601f83011262004cc457600080fd5b8151602067ffffffffffffffff82111562004ce35762004ce362004552565b8160051b62004cf482820162004568565b928352848101820192828101908785111562004d0f57600080fd5b83870192505b8483101562004d305782518252918301919083019062004d15565b979650505050505050565b6000806040838503121562004d4f57600080fd5b825167ffffffffffffffff8082111562004d6857600080fd5b62004d768683870162004cb2565b9350602085015191508082111562004d8d57600080fd5b50620046a38582860162004cb2565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b506040516200292138038062002921833981016040819052620000349162000186565b6200003f3362000119565b600180556103e861ffff821611156200005757600080fd5b6006805460018181019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b039586166001600160a01b0319918216811790925560078054959096169416939093179093556040805160608101825284815261ffff928316602082810191825260008385018181529681526004909152929092209051815492519093166101000262ffff00199315159390931662ffffff19909216919091179190911781559051910155620001da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018157600080fd5b919050565b6000806000606084860312156200019c57600080fd5b620001a78462000169565b9250620001b76020850162000169565b9150604084015161ffff81168114620001cf57600080fd5b809150509250925092565b61273780620001ea6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639a83aa8b116100ad578063d59a83bb11610071578063d59a83bb146102b5578063dc48dfc0146102c8578063de8645e61461031e578063f110fb5614610331578063f2fde38b1461034457600080fd5b80639a83aa8b146102565780639ead722214610269578063d28c3a9b1461027c578063d38d0b451461028f578063d48bfca7146102a257600080fd5b80634303d9d9116100f45780634303d9d9146101895780636bdf6b3914610203578063715018a6146102165780638705fcd41461021e5780638da5cb5b1461023157600080fd5b806308b4e2a61461012657806319f373611461013b5780631ac3ddeb1461016357806330f738be14610176575b600080fd5b6101396101343660046121ae565b610357565b005b61014e6101493660046121f5565b610904565b60405190151581526020015b60405180910390f35b6101396101713660046121f5565b6109c3565b610139610184366004612224565b610adc565b61019c61019736600461225b565b610b5b565b604080519a15158b5298151560208b01526001600160401b03978816988a01989098529490951660608801526001600160a01b03928316608088015290821660a087015260c086015260e0850192909252610100840152166101208201526101400161015a565b610139610211366004612298565b610be8565b61013961108b565b61013961022c3660046121f5565b61109f565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161015a565b610139610264366004612310565b6110c9565b61023e610277366004612345565b611579565b61013961028a36600461235e565b6115a3565b61013961029d3660046123bf565b6119c0565b6101396102b03660046121f5565b611aa0565b61019c6102c336600461225b565b611b46565b6102fe6102d63660046121f5565b6004602052600090815260409020805460019091015460ff821691610100900461ffff169083565b60408051931515845261ffff90921660208401529082015260600161015a565b61013961032c3660046123fd565b611b62565b61023e61033f366004612345565b612006565b6101396103523660046121f5565b612016565b6002600154036103825760405162461bcd60e51b815260040161037990612443565b60405180910390fd5b600260015561039083610904565b6103ac5760405162461bcd60e51b81526004016103799061247a565b6000826103f9576001600160a01b038416600090815260036020526040902080546001600160401b0384169081106103e6576103e66124a2565b906000526020600020906007020161043b565b6001600160a01b038416600090815260026020526040902080546001600160401b03841690811061042c5761042c6124a2565b90600052602060002090600702015b6040805161014081018252825460ff80821615158352610100808304909116151560208401526001600160401b03620100008304811694840194909452600160501b909104909216606082015260018301546001600160a01b03908116608083018190526002850154821660a0840152600385015460c0840152600485015460e08401526005850154938301939093526006909301549092166101208301529091503314806104f6575060a08101516001600160a01b031633145b6105385760405162461bcd60e51b815260206004820152601360248201527210d85b98d95b081d5b985d5d1a1bdc9a5e9959606a1b6044820152606401610379565b60008152821561071d5761010081015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b0385169063a9059cbb906044016020604051808303816000875af1158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906124b8565b506001600160a01b038416600090815260026020526040902080548291906001600160401b0385169081106105f1576105f16124a2565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517f9b3589e58cfaae811e95372b148d4048358e808d0c0af452b23f9d4620f8a23e906107109083906124d5565b60405180910390a16108fa565b61012081015160e082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906124b8565b506001600160a01b038416600090815260036020526040902080548291906001600160401b0385169081106107d2576107d26124a2565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517fb95b9053e8e235c5fb04aa72707d183a8eba7f5f7847a660f916fdf159927cc8906108f19083906124d5565b60405180910390a15b5050600180555050565b600080600580548060200260200160405190810160405280929190818152602001828054801561095d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161093f575b505083519394506000925050505b818110156109b857846001600160a01b031683828151811061098f5761098f6124a2565b60200260200101516001600160a01b0316036109b057506001949350505050565b60010161096b565b506000949350505050565b6109cb61208f565b6001600160a01b038181166000818152600460208181526040928390208351606081018552815460ff811615158252610100900461ffff169281019290925260010154818401819052600754935163a9059cbb60e01b81529390951691830191909152602482019390935263a9059cbb906044016020604051808303816000875af1158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906124b8565b50600060408083018281526001600160a01b03909416825260046020908152912082518154929093015161ffff166101000262ffff00199315159390931662ffffff19909216919091179190911781559051600190910155565b610ae461208f565b6101f48261ffff1610610b285760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40a8dede40d0d2ced60a31b6044820152606401610379565b6001600160a01b03166000908152600460205260409020805461ffff9092166101000262ffff0019909216919091179055565b60026020528160005260406000208181548110610b7757600080fd5b6000918252602090912060079091020180546001820154600283015460038401546004850154600586015460069096015460ff808716995061010087041697506001600160401b03620100008704811697600160501b90970416956001600160a01b0395861695948516949091168a565b600260015403610c0a5760405162461bcd60e51b815260040161037990612443565b60026001556103e88511610c545760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b610c5d88610904565b610ca05760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0387166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252610d325760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6001600160a01b0389166000818152600260205260409081902054905162aa3a7160e11b815290919063015474e290610d7b90339030908d908c908c908c908c906004016125a3565b600060405180830381600087803b158015610d9557600080fd5b505af1158015610da9573d6000803e3d6000fd5b505050506000610dbd8884602001516120e9565b9050600260008c6001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507f3b24c5db8e1f8aaec17cd20d4e148ad8ee3909fd0c9a1f6a86b1e900a49ef6b7604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b031681525060405161107291906124d5565b60405180910390a1505060018055505050505050505050565b61109361208f565b61109d600061211f565b565b6110a761208f565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036110eb5760405162461bcd60e51b815260040161037990612443565b60026001556110f982610904565b6111155760405162461bcd60e51b81526004016103799061247a565b6001600160a01b038216600090815260026020526040812080546001600160401b038416908110611148576111486124a2565b600091825260209182902060408051610140810182526007909302909101805460ff80821615158086526101008084049092161515968601969096526001600160401b03620100008304811694860194909452600160501b909104909216606084015260018101546001600160a01b0390811660808501526002820154811660a0850152600382015460c0850152600482015460e0850152600582015492840192909252600601541661012082015291506112335760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b3360a08201819052600160208301526000825261012082015160e08301516040516323b872dd60e01b8152600481019390935230602484015260448301526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c791906124b8565b508061012001516001600160a01b031663a9059cbb82608001518360c001518460e001516112f591906125fa565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136491906124b8565b5060c08101516101208201516001600160a01b03166000908152600460205260408120600101805490919061139a908490612611565b90915550506001600160a01b038316600090815260026020526040902080548291906001600160401b0385169081106113d5576113d56124a2565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e086015160048085019190915585870151600585015561012090960151600690930180549091169282169290921790915591840151905163a9059cbb60e01b81523393810193909352602483015284169063a9059cbb906044016020604051808303816000875af1158015611514573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153891906124b8565b507fb6432e18a59c31eafbe7fea705a495b38ea4992c69bdc678262b38ddc31c2d218160405161156891906124d5565b60405180910390a150506001805550565b6005818154811061158957600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600154036115c55760405162461bcd60e51b815260040161037990612443565b60026001556115d386610904565b6115ef5760405162461bcd60e51b81526004016103799061247a565b6001600160a01b038616600090815260036020526040812080546001600160401b038816908110611622576116226124a2565b60009182526020909120600790910201805490915060ff166116745760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b60028101546001600160a01b03166116be5760405162461bcd60e51b815260206004820152600d60248201526c57726f6e67206164647265737360981b6044820152606401610379565b6001810180546001600160a01b03191633908117909155815461ffff19166101001782556002820154600583015460405162aa3a7160e11b81526001600160a01b038b81169463015474e2946117239491939216918b908b908b908b906004016125a3565b600060405180830381600087803b15801561173d57600080fd5b505af1158015611751573d6000803e3d6000fd5b5050506006820154600383015460048401546001600160a01b03909216925063a9059cbb913391611781916125fa565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156117cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f091906124b8565b50600381015460068201546001600160a01b031660009081526004602052604081206001018054909190611825908490612611565b90915550506001600160a01b038716600090815260036020526040902080548291906001600160401b038916908110611860576118606124a2565b600091825260209091208254600790920201805460ff928316151560ff19821681178355845461010090819004909416151590930261ff001990931661ffff19909116179190911780825582546001600160401b036201000091829004811690910269ffffffffffffffff0000198316811784558454600160501b9081900490921690910267ffffffffffffffff60501b1990911662010000600160901b03199092169190911717815560018083015490820180546001600160a01b03199081166001600160a01b03938416179091556002808501549084018054831691841691909117905560038085015490840155600480850154908401556005808501549084015560069384015493909201805490921692169190911790556040517f127e23dc5aa74346dfbee84f2e6e25abf5f06e34ad3beea66e7363e53ff51359906119ab908390612629565b60405180910390a15050600180555050505050565b6119c861208f565b6001600160a01b03831660009081526004602052604090205460ff16611a3457600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0385161790555b60408051606081018252600180825261ffff94851660208084019182528385019586526001600160a01b0397909716600090815260049097529290952090518154925162ffffff1990931690151562ffff00191617610100929094169190910292909217825551910155565b611aa861208f565b611ab181610904565b15611af45760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610379565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b60036020528160005260406000208181548110610b7757600080fd5b600260015403611b845760405162461bcd60e51b815260040161037990612443565b60026001556103e88111611bce5760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b611bd784610904565b611c1a5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0383166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252611cac5760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015611cff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2391906124b8565b506001600160a01b038516600090815260036020908152604082205490830151909190611d519085906120e9565b905060036000886001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507fa23adb6634e58bf746cbb87e2f83ff7c3ba3201ab3f5f6cd04188a2acda98450604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b03168152506040516119ab91906124d5565b6006818154811061158957600080fd5b61201e61208f565b6001600160a01b0381166120835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610379565b61208c8161211f565b50565b6000546001600160a01b0316331461109d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b6000808261ffff16116120fd576000612118565b6103e861210e61ffff8416856126c0565b61211891906126df565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461208c57600080fd5b801515811461208c57600080fd5b80356001600160401b03811681146121a957600080fd5b919050565b6000806000606084860312156121c357600080fd5b83356121ce8161216f565b925060208401356121de81612184565b91506121ec60408501612192565b90509250925092565b60006020828403121561220757600080fd5b81356121188161216f565b803561ffff811681146121a957600080fd5b6000806040838503121561223757600080fd5b61224083612212565b915060208301356122508161216f565b809150509250929050565b6000806040838503121561226e57600080fd5b82356122798161216f565b946020939093013593505050565b803560ff811681146121a957600080fd5b600080600080600080600080610100898b0312156122b557600080fd5b88356122c08161216f565b975060208901356122d08161216f565b96506040890135955060608901359450608089013593506122f360a08a01612287565b925060c0890135915060e089013590509295985092959890939650565b6000806040838503121561232357600080fd5b823561232e8161216f565b915061233c60208401612192565b90509250929050565b60006020828403121561235757600080fd5b5035919050565b60008060008060008060c0878903121561237757600080fd5b86356123828161216f565b955061239060208801612192565b9450604087013593506123a560608801612287565b92506080870135915060a087013590509295509295509295565b6000806000606084860312156123d457600080fd5b83356123df8161216f565b92506123ed60208501612212565b9150604084013590509250925092565b6000806000806080858703121561241357600080fd5b843561241e8161216f565b9350602085013561242e8161216f565b93969395505050506040820135916060013590565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d151bdad95b88155b9b1a5cdd195960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124ca57600080fd5b815161211881612184565b815115158152610140810160208301516124f3602084018215159052565b50604083015161250e60408401826001600160401b03169052565b50606083015161252960608401826001600160401b03169052565b50608083015161254460808401826001600160a01b03169052565b5060a083015161255f60a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e08301526101008084015181840152506101208084015161259b828501826001600160a01b03169052565b505092915050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b634e487b7160e01b600052601160045260246000fd5b60008282101561260c5761260c6125e4565b500390565b60008219821115612624576126246125e4565b500190565b815460ff81161515825261014082019061264d6020840160ff8360081c1615159052565b6001600160401b03601082901c8116604085015260509190911c16606083015260018301546001600160a01b0390811660808401526002840154811660a0840152600384015460c0840152600484015460e084015260058401546101008401526006909301549092166101209091015290565b60008160001904831182151516156126da576126da6125e4565b500290565b6000826126fc57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f64830d4a899d892d4d1cad4c24c30c29fe0bf798ddd8a23bf148eac724db7c164736f6c634300080e00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122090a46b9aacef5776e06ffebdc76bc2ceca9701c4ed643a7ba42a6e7c5ef11dc864736f6c634300080e003360806040523480156200001157600080fd5b50604080518082018252600781526619985ad95554d160ca1b602080830191825283518085019094526004845263199554d160e21b9084015281519192916200005d9160039162000180565b5080516200007390600490602084019062000180565b505050620000923369043c33c19375648000006200009860201b60201c565b62000289565b6001600160a01b038216620000f35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000107919062000226565b90915550506001600160a01b038216600090815260208190526040812080548392906200013690849062000226565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200018e906200024d565b90600052602060002090601f016020900481019282620001b25760008555620001fd565b82601f10620001cd57805160ff1916838001178555620001fd565b82800160010185558215620001fd579182015b82811115620001fd578251825591602001919060010190620001e0565b506200020b9291506200020f565b5090565b5b808211156200020b576000815560010162000210565b600082198211156200024857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200026257607f821691505b6020821081036200028357634e487b7160e01b600052602260045260246000fd5b50919050565b6109ab80620002996000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b411461016a578063a0712d6814610172578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce91906107d0565b60405180910390f35b6100ea6100e5366004610841565b610252565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a36600461086b565b61026a565b604051601281526020016100ce565b6100ea61013c366004610841565b61028e565b6100fe61014f3660046108a7565b6001600160a01b031660009081526020819052604090205490565b6100c16102b0565b6101856101803660046108c9565b6102bf565b005b6100ea610195366004610841565b6102cc565b6100ea6101a8366004610841565b61034c565b6100fe6101bb3660046108e2565b61035a565b6060600380546101cf90610915565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610915565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b600033610260818585610385565b5060019392505050565b6000336102788582856104a9565b610283858585610523565b506001949350505050565b6000336102608185856102a1838361035a565b6102ab919061094f565b610385565b6060600480546101cf90610915565b6102c933826106f1565b50565b600033816102da828661035a565b90508381101561033f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102838286868403610385565b600033610260818585610523565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103e75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610336565b6001600160a01b0382166104485760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610336565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104b5848461035a565b9050600019811461051d57818110156105105760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610336565b61051d8484848403610385565b50505050565b6001600160a01b0383166105875760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610336565b6001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610336565b6001600160a01b038316600090815260208190526040902054818110156106615760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610336565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061069890849061094f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106e491815260200190565b60405180910390a361051d565b6001600160a01b0382166107475760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610336565b8060026000828254610759919061094f565b90915550506001600160a01b0382166000908152602081905260408120805483929061078690849061094f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156107fd578581018301518582016040015282016107e1565b8181111561080f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461083c57600080fd5b919050565b6000806040838503121561085457600080fd5b61085d83610825565b946020939093013593505050565b60008060006060848603121561088057600080fd5b61088984610825565b925061089760208501610825565b9150604084013590509250925092565b6000602082840312156108b957600080fd5b6108c282610825565b9392505050565b6000602082840312156108db57600080fd5b5035919050565b600080604083850312156108f557600080fd5b6108fe83610825565b915061090c60208401610825565b90509250929050565b600181811c9082168061092957607f821691505b60208210810361094957634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561097057634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122006e6033c851cdba2c17a237f5c39ca3f184c7af18b8d26b9ac85247920647ec764736f6c634300080e00336101c06040523480156200001257600080fd5b5060405162001c3c38038062001c3c833981016040819052620000359162000344565b8180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006b929190620001b8565b50805162000081906004906020840190620001b8565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919096012090529290925261012052506200012090503362000166565b6001600160a01b038086166101a05283166101805261014084905260646200014a85601e620003e3565b62000156919062000411565b6101605250620004709350505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001c69062000434565b90600052602060002090601f016020900481019282620001ea576000855562000235565b82601f106200020557805160ff191683800117855562000235565b8280016001018555821562000235579182015b828111156200023557825182559160200191906001019062000218565b506200024392915062000247565b5090565b5b8082111562000243576000815560010162000248565b6001600160a01b03811681146200027457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029f57600080fd5b81516001600160401b0380821115620002bc57620002bc62000277565b604051601f8301601f19908116603f01168101908282118183101715620002e757620002e762000277565b816040528381526020925086838588010111156200030457600080fd5b600091505b8382101562000328578582018301518183018401529082019062000309565b838211156200033a5760008385830101525b9695505050505050565b600080600080600060a086880312156200035d57600080fd5b85516200036a816200025e565b60208701516040880151919650945062000384816200025e565b60608701519093506001600160401b0380821115620003a257600080fd5b620003b089838a016200028d565b93506080880151915080821115620003c757600080fd5b50620003d6888289016200028d565b9150509295509295909350565b60008160001904831182151516156200040c57634e487b7160e01b600052601160045260246000fd5b500290565b6000826200042f57634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200044957607f821691505b6020821081036200046a57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a05161172d6200050f600039600081816104c90152818161058501526106db01526000818161027d015261055301526000818161017701526106fd015260008181610233015261078401526000610f1d01526000610f6c01526000610f4701526000610ea001526000610eca01526000610ef4015261172d6000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80634783c35b116100c3578063a457c2d71161007c578063a457c2d714610314578063a9059cbb14610327578063cce7ec131461033a578063d505accf1461034d578063dd62ed3e14610360578063f2fde38b1461037357600080fd5b80634783c35b1461027857806370a08231146102b7578063715018a6146102e05780637ecebe00146102e85780638da5cb5b146102fb57806395d89b411461030c57600080fd5b8063264d779711610115578063264d7797146101ff578063313ce5671461021f57806332cb6b0c1461022e5780633644e51514610255578063395093511461025d5780633ccfd60b1461027057600080fd5b8063015474e21461015d578063027542841461017257806306fdde03146101ac578063095ea7b3146101c157806318160ddd146101e457806323b872dd146101ec575b600080fd5b61017061016b3660046114a2565b610386565b005b6101997f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101b46103aa565b6040516101a39190611515565b6101d46101cf36600461156a565b61043c565b60405190151581526020016101a3565b600254610199565b6101d46101fa366004611594565b610454565b61019961020d3660046115d0565b60086020526000908152604090205481565b604051601281526020016101a3565b6101997f000000000000000000000000000000000000000000000000000000000000000081565b610199610478565b6101d461026b36600461156a565b610487565b6101706104a9565b61029f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101a3565b6101996102c53660046115d0565b6001600160a01b031660009081526020819052604090205490565b6101706105f8565b6101996102f63660046115d0565b61060c565b6007546001600160a01b031661029f565b6101b461062c565b6101d461032236600461156a565b61063b565b6101d461033536600461156a565b6106bb565b61017061034836600461156a565b6106c9565b61017061035b3660046114a2565b61091f565b61019961036e3660046115f2565b610a83565b6101706103813660046115d0565b610aae565b6103958733878787878761091f565b6103a0878787610454565b5050505050505050565b6060600380546103b990611625565b80601f01602080910402602001604051908101604052809291908181526020018280546103e590611625565b80156104325780601f1061040757610100808354040283529160200191610432565b820191906000526020600020905b81548152906001019060200180831161041557829003601f168201915b5050505050905090565b60003361044a818585610b27565b5060019392505050565b600033610462858285610c4b565b61046d858585610cc5565b506001949350505050565b6000610482610e93565b905090565b60003361044a81858561049a8383610a83565b6104a4919061166f565b610b27565b6104b1610fba565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053c9190611687565b60405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f491906116a0565b5050565b610600610fba565b61060a6000611014565b565b6001600160a01b0381166000908152600560205260408120545b92915050565b6060600480546103b990611625565b600033816106498286610a83565b9050838110156106ae5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61046d8286868403610b27565b60003361044a818585610cc5565b336000908152600860205260409020547f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009061072890849061166f565b11156107825760405162461bcd60e51b815260206004820152602360248201527f54686973204164647265737320626f7567687420746f6f206d75636820746f6b604482015262656e7360e81b60648201526084016106a5565b7f00000000000000000000000000000000000000000000000000000000000000006107ac60025490565b6107b6908461166f565b11156108045760405162461bcd60e51b815260206004820152601760248201527f4d6178696d756d20737570706c7920657863656564656400000000000000000060448201526064016106a5565b806001600160a01b03166323b872dd336108266007546001600160a01b031690565b61083186600a6116c2565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610885573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a991906116a0565b506108b48383611066565b33600090815260086020526040812080548492906108d390849061166f565b9091555050604080516001600160a01b0385168152602081018490527f840df612bc9052dfa7ac2e14fc52368ca7749154d9132b7601f59d329f787fd6910160405180910390a1505050565b8342111561096f5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106a5565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861099e8c611145565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006109f98261116d565b90506000610a09828787876111bb565b9050896001600160a01b0316816001600160a01b031614610a6c5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106a5565b610a778a8a8a610b27565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610ab6610fba565b6001600160a01b038116610b1b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a5565b610b2481611014565b50565b6001600160a01b038316610b895760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106a5565b6001600160a01b038216610bea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106a5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c578484610a83565b90506000198114610cbf5781811015610cb25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106a5565b610cbf8484848403610b27565b50505050565b6001600160a01b038316610d295760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106a5565b6001600160a01b038216610d8b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106a5565b6001600160a01b03831660009081526020819052604090205481811015610e035760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106a5565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e3a90849061166f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e8691815260200190565b60405180910390a3610cbf565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610eec57507f000000000000000000000000000000000000000000000000000000000000000046145b15610f1657507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6007546001600160a01b0316331461060a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a5565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166110bc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106a5565b80600260008282546110ce919061166f565b90915550506001600160a01b038216600090815260208190526040812080548392906110fb90849061166f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b600061062661117a610e93565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006111cc878787876111e3565b915091506111d9816112d0565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561121a57506000905060036112c7565b8460ff16601b1415801561123257508460ff16601c14155b1561124357506000905060046112c7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611297573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112c0576000600192509250506112c7565b9150600090505b94509492505050565b60008160048111156112e4576112e46116e1565b036112ec5750565b6001816004811115611300576113006116e1565b0361134d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106a5565b6002816004811115611361576113616116e1565b036113ae5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106a5565b60038160048111156113c2576113c26116e1565b0361141a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106a5565b600481600481111561142e5761142e6116e1565b03610b245760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106a5565b80356001600160a01b038116811461149d57600080fd5b919050565b600080600080600080600060e0888a0312156114bd57600080fd5b6114c688611486565b96506114d460208901611486565b95506040880135945060608801359350608088013560ff811681146114f857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208083528351808285015260005b8181101561154257858101830151858201604001528201611526565b81811115611554576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561157d57600080fd5b61158683611486565b946020939093013593505050565b6000806000606084860312156115a957600080fd5b6115b284611486565b92506115c060208501611486565b9150604084013590509250925092565b6000602082840312156115e257600080fd5b6115eb82611486565b9392505050565b6000806040838503121561160557600080fd5b61160e83611486565b915061161c60208401611486565b90509250929050565b600181811c9082168061163957607f821691505b60208210810361116757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561168257611682611659565b500190565b60006020828403121561169957600080fd5b5051919050565b6000602082840312156116b257600080fd5b815180151581146115eb57600080fd5b60008160001904831182151516156116dc576116dc611659565b500290565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220bfe6d2f404d76c14c48a1e786ef15c0cffa6388a9b0832b03accbcfc62b639f564736f6c634300080e0033",
    "sourceMap": "223:5332:24:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;280:6:24;257:29;;;;-1:-1:-1;;290:84:24;;409:107;378:138;;541:21;;:6;:21;:::i;:::-;520:42;;602:2;589:10;;:15;;;;:::i;:::-;566:38;;647:10;;-1:-1:-1;;;;;;647:10:24;;655:1;647:10;;;660:25:25;217:64:1;;647:7:24;;633:18:25;;647:10:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;631:26;;;-1:-1:-1;;;;;;631:26:24;-1:-1:-1;;;;;631:26:24;;;;;;;;;;677:10;;-1:-1:-1;;;;;;677:10:24;;685:1;677:10;;;660:25:25;217:64:1;;677:7:24;;633:18:25;;677:10:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;661:26;;;-1:-1:-1;;;;;;661:26:24;-1:-1:-1;;;;;661:26:24;;;;;;;;;;708:10;;-1:-1:-1;;;;;;708:10:24;;716:1;708:10;;;660:25:25;217:64:1;;708:7:24;;633:18:25;;708:10:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;691:27;;;-1:-1:-1;;;;;;691:27:24;-1:-1:-1;;;;;691:27:24;;;;;;;;;;741:10;;-1:-1:-1;;;;;;741:10:24;;749:1;741:10;;;660:25:25;217:64:1;;741:7:24;;633:18:25;;741:10:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;722:29;;;-1:-1:-1;;;;;;722:29:24;-1:-1:-1;;;;;722:29:24;;;;;;;;;;773:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;755:32:24;;;-1:-1:-1;;;;;;755:32:24;-1:-1:-1;;;;;755:32:24;;;;;;;;;857:12;;877:8;;818:124;;755:32;;857:12;;877:8;;;818:124;;;:::i;:::-;-1:-1:-1;;;;;2004:15:25;;;1986:34;;2051:2;2036:18;;2029:34;;;;2099:15;;;2094:2;2079:18;;2072:43;1966:3;2146:2;2131:18;;2124:31;;;2192:2;2171:19;;;2164:31;2232:26;2226:3;2211:19;;2204:55;2296:3;2290;2275:19;;2268:32;;;2337:1;2316:19;;;2309:30;-1:-1:-1;;;2370:3:25;2355:19;;2348:38;2418:3;2403:19;818:124:24;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;791:151:24;;;-1:-1:-1;;;;;;791:151:24;-1:-1:-1;;;;;791:151:24;;;;;;;;;;223:5332;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;14:265:25:-;54:7;120:1;116;112:6;108:14;105:1;102:21;97:1;90:9;83:17;79:45;76:168;;;166:10;161:3;157:20;154:1;147:31;201:4;198:1;191:15;229:4;226:1;219:15;76:168;-1:-1:-1;264:9:25;;14:265::o;284:217::-;324:1;350;340:132;;394:10;389:3;385:20;382:1;375:31;429:4;426:1;419:15;457:4;454:1;447:15;340:132;-1:-1:-1;486:9:25;;284:217::o;696:290::-;766:6;819:2;807:9;798:7;794:23;790:32;787:52;;;835:1;832;825:12;787:52;861:16;;-1:-1:-1;;;;;906:31:25;;896:42;;886:70;;952:1;949;942:12;886:70;975:5;696:290;-1:-1:-1;;;696:290:25:o;1561:867::-;223:5332:24;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001af5760003560e01c80636f59707511620000f0578063c88a5e6d11620000a3578063e77b6747116200007a578063e77b674714620003a5578063e9a79a7b14620003bc578063edd2545f14620003d3578063fa7626d414620003ea57600080fd5b8063c88a5e6d1462000360578063d06d82291462000377578063d82555f1146200038e57600080fd5b80636f59707514620002d257806397754ae914620002e95780639a8325a01462000300578063af9bbe5f1462000317578063b9c071b4146200032e578063ba414fa6146200034557600080fd5b80633a1143da116200016657806355dda6bb116200013d57806355dda6bb14620001be5780635a6c1eed146200027e5780636bce989b14620002a45780636e0b95d014620002bb57600080fd5b80633a1143da14620001be5780633a76846314620002505780633bf82db1146200026757600080fd5b80630a9254e414620001b4578063108554f214620001c0578063233240ee14620001d757806329a9e30014620001ee57806329ce9dde14620002055780632d6c17a31462000239575b600080fd5b620001be620003f8565b005b620001be620001d1366004620044c8565b6200045f565b620001be620001e8366004620044f5565b62000538565b620001be620001ff3660046200451a565b62000614565b6200021c620002163660046200462d565b620006c6565b6040516001600160a01b0390911681526020015b60405180910390f35b620001be6200024a366004620046ad565b620007f6565b6200021c600080516020620076ee83398151915281565b620001be62000278366004620046c7565b62000836565b620002956200028f36600462004708565b62000918565b60405190815260200162000230565b620001be620002b5366004620046c7565b62000a51565b620001be620002cc366004620046ad565b62000a65565b620001be620002e3366004620044f5565b62000d4f565b620001be620002fa36600462004744565b62000df9565b6200021c620003113660046200479a565b6200103a565b620001be62000328366004620046c7565b6200113c565b620001be6200033f366004620046ad565b620011ea565b6200034f6200120b565b604051901515815260200162000230565b620001be62000371366004620044c8565b6200133c565b620001be620003883660046200451a565b62001372565b620001be6200039f366004620046c7565b62001424565b620001be620003b6366004620047ec565b6200151b565b620001be620003cd366004620044c8565b62002164565b620001be620003e4366004620047ec565b6200220a565b6000546200034f9060ff1681565b6040516372eb5f8160e11b81526362b97afa6004820152600080516020620076ee8339815191529063e5d6bf0290602401600060405180830381600087803b1580156200044457600080fd5b505af115801562000459573d6000803e3d6000fd5b50505050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062000495908590859060040162004828565b600060405180830381600087803b158015620004b057600080fd5b505af1158015620004c5573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020620076ee83398151915292506306447d5691506024015b600060405180830381600087803b1580156200051b57600080fd5b505af115801562000530573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062000572908490600160801b9060040162004828565b600060405180830381600087803b1580156200058d57600080fd5b505af1158015620005a2573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020620076ee833981519152925063ca669fa791506024015b600060405180830381600087803b158015620005f857600080fd5b505af11580156200060d573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d906200064e908590600160801b9060040162004828565b600060405180830381600087803b1580156200066957600080fd5b505af11580156200067e573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020620076ee83398151915292506347e50cce915060440162000500565b604051638d1cc92560e01b81526000908190600080516020620076ee83398151915290638d1cc92590620006ff90879060040162004870565b6000604051808303816000875af11580156200071f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620007499190810190620048db565b836040516020016200075d92919062004929565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216620007ef5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020620076ee83398151915263e5d6bf0262000817834262004972565b6040518263ffffffff1660e01b8152600401620005dd91815260200190565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d906200086c908690859060040162004828565b600060405180830381600087803b1580156200088757600080fd5b505af11580156200089c573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020620076ee83398151915292506345b5607891506044015b600060405180830381600087803b158015620008fa57600080fd5b505af11580156200090f573d6000803e3d6000fd5b50505050505050565b600081831115620009925760405162461bcd60e51b815260206004820152603a60248201527f5465737420626f756e642875696e743235362c75696e743235362c75696e743260448201527f3536293a204d6178206973206c657373207468616e206d696e2e0000000000006064820152608401620007e6565b6000620009a0848462004972565b905080600003620009b457839150620009f4565b6000198103620009c757849150620009f4565b620009d2816200498c565b90506000620009e28287620049be565b9050620009f08186620049d5565b9250505b60408051818152600c818301526b109bdd5b990814995cdd5b1d60a21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b62000a60838383600062000df9565b505050565b60125460408051630cb2dac360e21b81529051600080516020620076ee83398151915292634c63e562926001600160a01b03909116916332cb6b0c916004808201926020929091908290030181865afa15801562000ac7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aed9190620049f0565b6040516001600160e01b031960e084901b1681529084106004820152602401600060405180830381600087803b15801562000b2757600080fd5b505af115801562000b3c573d6000803e3d6000fd5b5050600d546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee83398151915292506306447d569150602401600060405180830381600087803b15801562000b9557600080fd5b505af115801562000baa573d6000803e3d6000fd5b505060115460405163140e25ad60e31b8152600481018590526001600160a01b03909116925063a0712d689150602401600060405180830381600087803b15801562000bf557600080fd5b505af115801562000c0a573d6000803e3d6000fd5b505060115460125460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062000c479290911690859060040162004828565b6020604051808303816000875af115801562000c67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c8d919062004a0a565b50601254600d546001600160a01b039182169163cce7ec13911662000cb4600a8562004a2a565b6040518363ffffffff1660e01b815260040162000cd392919062004828565b600060405180830381600087803b15801562000cee57600080fd5b505af115801562000d03573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620076ee83398151915293506390c5013b9250600480830192600092919082900301818387803b158015620005f857600080fd5b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062000d89908490600160801b9060040162004828565b600060405180830381600087803b15801562000da457600080fd5b505af115801562000db9573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020620076ee83398151915292506306447d569150602401620005dd565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000e4f9162004a41565b6000604051808303816000865af19150503d806000811462000e8e576040519150601f19603f3d011682016040523d82523d6000602084013e62000e93565b606091505b5091505060008180602001905181019062000eaf9190620049f0565b905062000f218462000f1a8762000ef16370a0823160e01b62000ed460018d62002f6e565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062002f93565b8215620005305760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162000f6c919062004a41565b6000604051808303816000865af19150503d806000811462000fab576040519150601f19603f3d011682016040523d82523d6000602084013e62000fb0565b606091505b5091505060008180602001905181019062000fcc9190620049f0565b90508286101562000ff75762000fe3868462004972565b62000fef908262004972565b905062001012565b62001003838762004972565b6200100f9082620049d5565b90505b620010308162000f1a6318160ddd60e01b62000ed460018d62002f6e565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020620076ee83398151915290638d1cc925906200107390869060040162004870565b6000604051808303816000875af115801562001093573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010bd9190810190620048db565b90508051602082016000f091506001600160a01b038216620011365760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401620007e6565b50919050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062001172908690859060040162004828565b600060405180830381600087803b1580156200118d57600080fd5b505af1158015620011a2573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020620076ee83398151915292506347e50cce9150604401620008df565b600080516020620076ee83398151915263e5d6bf02620008178342620049d5565b60008054610100900460ff16156200122c5750600054610100900460ff1690565b6000600080516020620076ee8339815191523b156200133757604051600090600080516020620076ee833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620012999083906519985a5b195960d21b9060200162004828565b60408051601f1981840301815290829052620012b9929160200162004a5f565b60408051601f1981840301815290829052620012d59162004a41565b6000604051808303816000865af19150503d806000811462001314576040519150601f19603f3d011682016040523d82523d6000602084013e62001319565b606091505b509150508080602001905181019062001333919062004a0a565b9150505b919050565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d9062000500908590859060040162004828565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d90620013ac908590600160801b9060040162004828565b600060405180830381600087803b158015620013c757600080fd5b505af1158015620013dc573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020620076ee83398151915292506345b56078915060440162000500565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051620014f0906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000a608162000f1a8462000ef16370a0823160e01b62000ed460018a62002f6e565b604051632631f2b160e11b81526101f461ffff8316106004820152600080516020620076ee83398151915290634c63e56290602401600060405180830381600087803b1580156200156b57600080fd5b505af115801562001580573d6000803e3d6000fd5b505060125460408051630cb2dac360e21b81529051600080516020620076ee8339815191529450634c63e56293506103e8926001600160a01b0316916332cb6b0c9160048083019260209291908290030181865afa158015620015e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200160d9190620049f0565b62001619919062004a2a565b6200162690601e62004a92565b62001633600a8762004a2a565b6040516001600160e01b031960e085901b16815291116004820152602401600060405180830381600087803b1580156200166c57600080fd5b505af115801562001681573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e885116004820152600080516020620076ee8339815191529250634c63e5629150602401600060405180830381600087803b158015620016d157600080fd5b505af1158015620016e6573d6000803e3d6000fd5b5050600954600080516020620076ee8339815191529250634c63e562915062001713906103e89062004a2a565b6040516001600160e01b031960e084901b1681529085106004820152602401600060405180830381600087803b1580156200174d57600080fd5b505af115801562001762573d6000803e3d6000fd5b5050601154600f54604051600094506001600160a01b03928316935091169084906200178e906200446d565b6001600160a01b03938416815292909116602083015261ffff166040820152606001604051809103906000f080158015620017cd573d6000803e3d6000fd5b5090506000620017df600a8662004a2a565b60125460405163d48bfca760e01b81526001600160a01b03918216600482015291925083169063d48bfca790602401600060405180830381600087803b1580156200182957600080fd5b505af11580156200183e573d6000803e3d6000fd5b50506012546040516319f3736160e01b81526001600160a01b03918216600482015290851692506319f373619150602401602060405180830381865afa1580156200188d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018b3919062004a0a565b620018c257620018c262004ab4565b600d546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee833981519152906306447d5690602401600060405180830381600087803b1580156200191757600080fd5b505af11580156200192c573d6000803e3d6000fd5b505060115460095460405163095ea7b360e01b81526001600160a01b03909216935063095ea7b39250620019669186919060040162004828565b6020604051808303816000875af115801562001986573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019ac919062004a0a565b5060115460405163140e25ad60e31b8152600481018690526001600160a01b039091169063a0712d6890602401600060405180830381600087803b158015620019f457600080fd5b505af115801562001a09573d6000803e3d6000fd5b5050601154600d546040516370a0823160e01b81526001600160a01b039182166004820152889450911691506370a0823190602401602060405180830381865afa15801562001a5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a829190620049f0565b1462001aa25760405162461bcd60e51b8152600401620007e69062004aca565b601254601154604051636f4322f360e11b81526001600160a01b039283166004820152908216602482015260448101839052606481018690529083169063de8645e690608401600060405180830381600087803b15801562001b0357600080fd5b505af115801562001b18573d6000803e3d6000fd5b5050601154600d546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562001b69573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b8f9190620049f0565b1562001bd35760405162461bcd60e51b8152602060048201526012602482015271213abc9027b93232b910333a1032b93937b960711b6044820152606401620007e6565b6011546040516370a0823160e01b81526001600160a01b038481166004830152869216906370a0823190602401602060405180830381865afa15801562001c1e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c449190620049f0565b1462001c645760405162461bcd60e51b8152600401620007e69062004af0565b604080516390c5013b60e01b81529051600080516020620076ee833981519152916390c5013b91600480830192600092919082900301818387803b15801562001cac57600080fd5b505af115801562001cc1573d6000803e3d6000fd5b5050600e546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee83398151915292506306447d569150602401600060405180830381600087803b15801562001d1a57600080fd5b505af115801562001d2f573d6000803e3d6000fd5b505060115460405163140e25ad60e31b8152600481018990526001600160a01b03909116925063a0712d689150602401600060405180830381600087803b15801562001d7a57600080fd5b505af115801562001d8f573d6000803e3d6000fd5b505060115460125460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062001dcc9290911690899060040162004828565b6020604051808303816000875af115801562001dec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e12919062004a0a565b50601254600e5460405163cce7ec1360e01b81526001600160a01b039283169263cce7ec139262001e4b92911690859060040162004828565b600060405180830381600087803b15801562001e6657600080fd5b505af115801562001e7b573d6000803e3d6000fd5b5050601254600e546040516370a0823160e01b81526001600160a01b039182166004820152859450911691506370a0823190602401602060405180830381865afa15801562001ece573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ef49190620049f0565b1462001f145760405162461bcd60e51b8152600401620007e69062004aca565b601254600e546009546000928392839262001f43926001600160a01b0390811692169088908890600262002fa3565b60125460095460405163d28c3a9b60e01b81526001600160a01b03928316600482015260006024820152604481019190915260ff851660648201526084810184905260a48101839052939650919450925086169063d28c3a9b9060c401600060405180830381600087803b15801562001fbb57600080fd5b505af115801562001fd0573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620076ee83398151915293506390c5013b9250600480830192600092919082900301818387803b1580156200201c57600080fd5b505af115801562002031573d6000803e3d6000fd5b5050601154604051631ac3ddeb60e01b81526001600160a01b0391821660048201529088169250631ac3ddeb9150602401600060405180830381600087803b1580156200207d57600080fd5b505af115801562002092573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa158015620020e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021099190620049f0565b6103e86200211c61ffff89168a62004a92565b62002128919062004a2a565b14620010305760405162461bcd60e51b815260206004820152600a60248201526946656550726f626c656d60b01b6044820152606401620007e6565b60405163c88a5e6d60e01b8152600080516020620076ee8339815191529063c88a5e6d906200219a908590859060040162004828565b600060405180830381600087803b158015620021b557600080fd5b505af1158015620021ca573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020620076ee833981519152925063ca669fa7915060240162000500565b604051632631f2b160e11b81526101f461ffff8316106004820152600080516020620076ee83398151915290634c63e56290602401600060405180830381600087803b1580156200225a57600080fd5b505af11580156200226f573d6000803e3d6000fd5b505060125460408051630cb2dac360e21b81529051600080516020620076ee8339815191529450634c63e56293506103e8926001600160a01b0316916332cb6b0c9160048083019260209291908290030181865afa158015620022d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022fc9190620049f0565b62002308919062004a2a565b6200231590601e62004a92565b62002322600a8762004a2a565b6040516001600160e01b031960e085901b16815291116004820152602401600060405180830381600087803b1580156200235b57600080fd5b505af115801562002370573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e885116004820152600080516020620076ee8339815191529250634c63e5629150602401600060405180830381600087803b158015620023c057600080fd5b505af1158015620023d5573d6000803e3d6000fd5b5050600954600080516020620076ee8339815191529250634c63e562915062002402906103e89062004a2a565b6040516001600160e01b031960e084901b1681529085106004820152602401600060405180830381600087803b1580156200243c57600080fd5b505af115801562002451573d6000803e3d6000fd5b5050601154600f54604051600094506001600160a01b03928316935091169084906200247d906200446d565b6001600160a01b03938416815292909116602083015261ffff166040820152606001604051809103906000f080158015620024bc573d6000803e3d6000fd5b5090506000620024ce600a8662004a2a565b60125460405163d48bfca760e01b81526001600160a01b03918216600482015291925083169063d48bfca790602401600060405180830381600087803b1580156200251857600080fd5b505af11580156200252d573d6000803e3d6000fd5b50506012546040516319f3736160e01b81526001600160a01b03918216600482015290851692506319f373619150602401602060405180830381865afa1580156200257c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025a2919062004a0a565b620025b157620025b162004ab4565b600d546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee833981519152906306447d5690602401600060405180830381600087803b1580156200260657600080fd5b505af11580156200261b573d6000803e3d6000fd5b505060115460125460095460405163095ea7b360e01b81526001600160a01b03938416955063095ea7b3945062002659939092169160040162004828565b6020604051808303816000875af115801562002679573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200269f919062004a0a565b5060115460405163140e25ad60e31b8152600481018790526001600160a01b039091169063a0712d6890602401600060405180830381600087803b158015620026e757600080fd5b505af1158015620026fc573d6000803e3d6000fd5b5050601254600d5460405163cce7ec1360e01b81526001600160a01b03928316945063cce7ec139350620027399290911690859060040162004828565b600060405180830381600087803b1580156200275457600080fd5b505af115801562002769573d6000803e3d6000fd5b5050601254600d546040516370a0823160e01b81526001600160a01b039182166004820152859450911691506370a0823190602401602060405180830381865afa158015620027bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027e29190620049f0565b14620028025760405162461bcd60e51b8152600401620007e69062004aca565b601254600d546009546000928392839262002831926001600160a01b0390811692169088908890600162002fa3565b601154604051630371237f60e61b81526001600160a01b0391821660048201529396509194509250600091829182919089169063dc48dfc090602401606060405180830381865afa1580156200288b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028b1919062004b1d565b92509250925082620029125760405162461bcd60e51b815260206004820152602360248201527f496e69742070726f626c656d2063757272656e637920646f65736e27742065786044820152621a5cdd60ea1b6064820152608401620007e6565b8861ffff168261ffff16146200295e5760405162461bcd60e51b815260206004820152601060248201526f496e6974206665652070726f626c656d60801b6044820152606401620007e6565b601254601154600954604051636bdf6b3960e01b81526001600160a01b0393841660048201529183166024830152604482018a9052606482018d9052608482015260ff881660a482015260c4810187905260e4810186905290891690636bdf6b399061010401600060405180830381600087803b158015620029df57600080fd5b505af1158015620029f4573d6000803e3d6000fd5b5050601254600d546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562002a45573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a6b9190620049f0565b1562002a8b5760405162461bcd60e51b8152600401620007e69062004af0565b6012546040516370a0823160e01b81526001600160a01b038a81166004830152899216906370a0823190602401602060405180830381865afa15801562002ad6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002afc9190620049f0565b1462002b1c5760405162461bcd60e51b8152600401620007e69062004af0565b604080516390c5013b60e01b81529051600080516020620076ee833981519152916390c5013b91600480830192600092919082900301818387803b15801562002b6457600080fd5b505af115801562002b79573d6000803e3d6000fd5b5050600e546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620076ee83398151915292506306447d569150602401600060405180830381600087803b15801562002bd257600080fd5b505af115801562002be7573d6000803e3d6000fd5b505060115460405163140e25ad60e31b8152600481018e90526001600160a01b03909116925063a0712d689150602401600060405180830381600087803b15801562002c3257600080fd5b505af115801562002c47573d6000803e3d6000fd5b505060115460095460405163095ea7b360e01b81526001600160a01b03909216935063095ea7b3925062002c81918c919060040162004828565b6020604051808303816000875af115801562002ca1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002cc7919062004a0a565b50601254604051639a83aa8b60e01b81526001600160a01b0391821660048201526000602482015290891690639a83aa8b90604401600060405180830381600087803b15801562002d1757600080fd5b505af115801562002d2c573d6000803e3d6000fd5b5050604080516390c5013b60e01b81529051600080516020620076ee83398151915293506390c5013b9250600480830192600092919082900301818387803b15801562002d7857600080fd5b505af115801562002d8d573d6000803e3d6000fd5b5050601154604051631ac3ddeb60e01b81526001600160a01b039182166004820152908b169250631ac3ddeb9150602401600060405180830381600087803b15801562002dd957600080fd5b505af115801562002dee573d6000803e3d6000fd5b5050601154600f546040516370a0823160e01b81526001600160a01b03918216600482015262002e709450911691506370a0823190602401602060405180830381865afa15801562002e44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e6a9190620049f0565b6200326a565b62002e936103e862002e8761ffff8c168d62004a92565b62002e6a919062004a2a565b601154600f546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562002ee0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f069190620049f0565b6103e862002f1961ffff8c168d62004a92565b62002f25919062004a2a565b1462002f615760405162461bcd60e51b815260206004820152600a60248201526946656550726f626c656d60b01b6044820152606401620007e6565b5050505050505050505050565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62002f9f8282620032b5565b5050565b600080600080600a548989898d6001600160a01b0316637ecebe008e6040518263ffffffff1660e01b815260040162002feb91906001600160a01b0391909116815260200190565b602060405180830381865afa15801562003009573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200302f9190620049f0565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8b6001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620030e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200310b9190810190620048db565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201526001600160a01b038c1660a082015260c0016040516020818303038152906040528051906020012090506000620031d7828460405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6040516338d07aa960e21b81526004810189905260248101829052909150600080516020620076ee8339815191529063e341eaa4906044016060604051808303816000875af11580156200322f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003255919062004b65565b95509550955050505096509650969350505050565b620032b2816040516024016200328291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790526200361e565b50565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200332857602002820191906000526020600020905b81548152602001906001019080831162003313575b505050505090506000836200333d836200363f565b6040516020016200335092919062004a5f565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620033a491869188910162004ba4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620033df57620033dd87620036ec565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200342091879189910162004ba4565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162003467919062004a41565b600060405180830381855afa9150503d8060008114620034a4576040519150601f19603f3d011682016040523d82523d6000602084013e620034a9565b606091505b509150620034c6905081620034c088602062004a92565b620043e3565b604051630667f9d760e41b815290925060009150600080516020620076ee8339815191529063667f9d709062003503908b90879060040162004828565b6020604051808303816000875af115801562003523573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035499190620049f0565b90508082146200356d5760405162461bcd60e51b8152600401620007e69062004be0565b6040516370ca10bb60e01b8152600080516020620076ee833981519152906370ca10bb90620035a5908b9087908e9060040162004c7b565b600060405180830381600087803b158015620035c057600080fd5b505af1158015620035d5573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200360a60028b0160006200447b565b896004016000905550505050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606060008251602062003653919062004a92565b67ffffffffffffffff8111156200366e576200366e62004552565b6040519080825280601f01601f19166020018201604052801562003699576020820181803683370190505b50905060005b8351811015620007ef576000848281518110620036c057620036c062004c9c565b602002602001015190508082602002602001840152508080620036e3906200498c565b9150506200369f565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200375e57602002820191906000526020600020905b81548152602001906001019080831162003749575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620037aa9250859187910162004ba4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562003849576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200381991859187910162004ba4565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362003857836200363f565b6040516020016200386a92919062004a5f565b60405160208183030381529060405290506000805160206200770e83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620038c957600080fd5b505af1158015620038de573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620038ff919062004a41565b600060405180830381855afa9150503d80600081146200393c576040519150601f19603f3d011682016040523d82523d6000602084013e62003941565b606091505b50915062003958905081620034c087602062004a92565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020620076ee833981519152906365bc9481906024016000604051808303816000875af1158015620039b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620039df919081019062004d3b565b509050805160010362003ca85760006000805160206200770e83398151915260001c6001600160a01b031663667f9d70898460008151811062003a265762003a2662004c9c565b60200260200101516040518363ffffffff1660e01b815260040162003a4d92919062004828565b6020604051808303816000875af115801562003a6d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a939190620049f0565b90508062003af7577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062003ad35762003ad362004c9c565b602002602001015160001c60405162003aee92919062004828565b60405180910390a15b80831462003b195760405162461bcd60e51b8152600401620007e69062004be0565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162003b5192919062004ba4565b604051602081830303815290604052805190602001208560008151811062003b7d5762003b7d62004c9c565b602002602001015160001c60405162003b9a949392919062004d9c565b60405180910390a18160008151811062003bb85762003bb862004c9c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262003c03918a918c910162004ba4565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162003c6d918a918c910162004ba4565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062004266565b600181511115620041f55760005b8151811015620041ee5760006000805160206200770e83398151915260001c6001600160a01b031663667f9d708a85858151811062003cf95762003cf962004c9c565b60200260200101516040518363ffffffff1660e01b815260040162003d2092919062004828565b6020604051808303816000875af115801562003d40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d669190620049f0565b90508062003dc9577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062003da55762003da562004c9c565b602002602001015160001c60405162003dc092919062004828565b60405180910390a15b6000805160206200770e83398151915260001c6001600160a01b03166370ca10bb8a85858151811062003e005762003e0062004c9c565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162003e2e9392919062004c7b565b600060405180830381600087803b15801562003e4957600080fd5b505af115801562003e5e573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162003e80919062004a41565b600060405180830381855afa9150503d806000811462003ebd576040519150601f19603f3d011682016040523d82523d6000602084013e62003ec2565b606091505b50909250905062003eda81620034c08b602062004a92565b955081801562003eee575061133760f01b86145b1562004141577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162003f2c92919062004ba4565b6040516020818303038152906040528051906020012088888151811062003f575762003f5762004c9c565b602002602001015160001c60405162003f74949392919062004d9c565b60405180910390a184848151811062003f915762003f9162004c9c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262003fdc918d918f910162004ba4565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200406992919062004ba4565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200770e83398151915260001c6001600160a01b03166370ca10bb8c878781518110620040db57620040db62004c9c565b6020026020010151866040518463ffffffff1660e01b8152600401620041049392919062004c7b565b600060405180830381600087803b1580156200411f57600080fd5b505af115801562004134573d6000803e3d6000fd5b50505050505050620041ee565b6000805160206200770e83398151915260001c6001600160a01b03166370ca10bb8c87878151811062004178576200417862004c9c565b6020026020010151866040518463ffffffff1660e01b8152600401620041a19392919062004c7b565b600060405180830381600087803b158015620041bc57600080fd5b505af1158015620041d1573d6000803e3d6000fd5b505050505050508080620041e5906200498c565b91505062003cb6565b5062004266565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401620007e6565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620042aa9188918a910162004ba4565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620043395760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401620007e6565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200436a60028a0160006200447b565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620043b09188918a910162004ba4565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111620043fa578451620043fd565b60205b905060005b8181101562004463576200441881600862004a92565b86620044258388620049d5565b8151811062004438576200443862004c9c565b01602001516001600160f81b031916901c9290921791806200445a816200498c565b91505062004402565b5090949350505050565b6129218062004dcd83390190565b5080546000825590600052602060002090810190620032b291905b80821115620044ac576000815560010162004496565b5090565b80356001600160a01b03811681146200133757600080fd5b60008060408385031215620044dc57600080fd5b620044e783620044b0565b946020939093013593505050565b6000602082840312156200450857600080fd5b6200451382620044b0565b9392505050565b600080604083850312156200452e57600080fd5b6200453983620044b0565b91506200454960208401620044b0565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562004594576200459462004552565b604052919050565b600067ffffffffffffffff821115620045b957620045b962004552565b50601f01601f191660200190565b6000620045de620045d8846200459c565b62004568565b9050828152838383011115620045f357600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200461c57600080fd5b6200451383833560208501620045c7565b600080604083850312156200464157600080fd5b823567ffffffffffffffff808211156200465a57600080fd5b62004668868387016200460a565b935060208501359150808211156200467f57600080fd5b508301601f810185136200469257600080fd5b620046a385823560208401620045c7565b9150509250929050565b600060208284031215620046c057600080fd5b5035919050565b600080600060608486031215620046dd57600080fd5b620046e884620044b0565b9250620046f860208501620044b0565b9150604084013590509250925092565b6000806000606084860312156200471e57600080fd5b505081359360208301359350604090920135919050565b8015158114620032b257600080fd5b600080600080608085870312156200475b57600080fd5b6200476685620044b0565b93506200477660208601620044b0565b92506040850135915060608501356200478f8162004735565b939692955090935050565b600060208284031215620047ad57600080fd5b813567ffffffffffffffff811115620047c557600080fd5b620047d3848285016200460a565b949350505050565b61ffff81168114620032b257600080fd5b6000806000606084860312156200480257600080fd5b833592506020840135915060408401356200481d81620047db565b809150509250925092565b6001600160a01b03929092168252602082015260400190565b60005b838110156200485e57818101518382015260200162004844565b83811115620004595750506000910152565b60208152600082518060208401526200489181604085016020870162004841565b601f01601f19169190910160400192915050565b6000620048b6620045d8846200459c565b9050828152838383011115620048cb57600080fd5b6200451383602083018462004841565b600060208284031215620048ee57600080fd5b815167ffffffffffffffff8111156200490657600080fd5b8201601f810184136200491857600080fd5b620047d384825160208401620048a5565b600083516200493d81846020880162004841565b8351908301906200495381836020880162004841565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156200498757620049876200495c565b500390565b600060018201620049a157620049a16200495c565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082620049d057620049d0620049a8565b500690565b60008219821115620049eb57620049eb6200495c565b500190565b60006020828403121562004a0357600080fd5b5051919050565b60006020828403121562004a1d57600080fd5b8151620045138162004735565b60008262004a3c5762004a3c620049a8565b500490565b6000825162004a5581846020870162004841565b9190910192915050565b6001600160e01b031983168152815160009062004a8481600485016020870162004841565b919091016004019392505050565b600081600019048311821515161562004aaf5762004aaf6200495c565b500290565b634e487b7160e01b600052600160045260246000fd5b6020808252600c908201526b213abc90333a1032b93937b960a11b604082015260600190565b60208082526013908201527229b2b6361027b93232b910333a1032b93937b960691b604082015260600190565b60008060006060848603121562004b3357600080fd5b835162004b408162004735565b602085015190935062004b5381620047db565b80925050604084015190509250925092565b60008060006060848603121562004b7b57600080fd5b835160ff8116811462004b8d57600080fd5b602085015160409095015190969495509392505050565b825160009082906020808701845b8381101562004bd05781518552938201939082019060010162004bb2565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600082601f83011262004cc457600080fd5b8151602067ffffffffffffffff82111562004ce35762004ce362004552565b8160051b62004cf482820162004568565b928352848101820192828101908785111562004d0f57600080fd5b83870192505b8483101562004d305782518252918301919083019062004d15565b979650505050505050565b6000806040838503121562004d4f57600080fd5b825167ffffffffffffffff8082111562004d6857600080fd5b62004d768683870162004cb2565b9350602085015191508082111562004d8d57600080fd5b50620046a38582860162004cb2565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b506040516200292138038062002921833981016040819052620000349162000186565b6200003f3362000119565b600180556103e861ffff821611156200005757600080fd5b6006805460018181019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b039586166001600160a01b0319918216811790925560078054959096169416939093179093556040805160608101825284815261ffff928316602082810191825260008385018181529681526004909152929092209051815492519093166101000262ffff00199315159390931662ffffff19909216919091179190911781559051910155620001da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018157600080fd5b919050565b6000806000606084860312156200019c57600080fd5b620001a78462000169565b9250620001b76020850162000169565b9150604084015161ffff81168114620001cf57600080fd5b809150509250925092565b61273780620001ea6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639a83aa8b116100ad578063d59a83bb11610071578063d59a83bb146102b5578063dc48dfc0146102c8578063de8645e61461031e578063f110fb5614610331578063f2fde38b1461034457600080fd5b80639a83aa8b146102565780639ead722214610269578063d28c3a9b1461027c578063d38d0b451461028f578063d48bfca7146102a257600080fd5b80634303d9d9116100f45780634303d9d9146101895780636bdf6b3914610203578063715018a6146102165780638705fcd41461021e5780638da5cb5b1461023157600080fd5b806308b4e2a61461012657806319f373611461013b5780631ac3ddeb1461016357806330f738be14610176575b600080fd5b6101396101343660046121ae565b610357565b005b61014e6101493660046121f5565b610904565b60405190151581526020015b60405180910390f35b6101396101713660046121f5565b6109c3565b610139610184366004612224565b610adc565b61019c61019736600461225b565b610b5b565b604080519a15158b5298151560208b01526001600160401b03978816988a01989098529490951660608801526001600160a01b03928316608088015290821660a087015260c086015260e0850192909252610100840152166101208201526101400161015a565b610139610211366004612298565b610be8565b61013961108b565b61013961022c3660046121f5565b61109f565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161015a565b610139610264366004612310565b6110c9565b61023e610277366004612345565b611579565b61013961028a36600461235e565b6115a3565b61013961029d3660046123bf565b6119c0565b6101396102b03660046121f5565b611aa0565b61019c6102c336600461225b565b611b46565b6102fe6102d63660046121f5565b6004602052600090815260409020805460019091015460ff821691610100900461ffff169083565b60408051931515845261ffff90921660208401529082015260600161015a565b61013961032c3660046123fd565b611b62565b61023e61033f366004612345565b612006565b6101396103523660046121f5565b612016565b6002600154036103825760405162461bcd60e51b815260040161037990612443565b60405180910390fd5b600260015561039083610904565b6103ac5760405162461bcd60e51b81526004016103799061247a565b6000826103f9576001600160a01b038416600090815260036020526040902080546001600160401b0384169081106103e6576103e66124a2565b906000526020600020906007020161043b565b6001600160a01b038416600090815260026020526040902080546001600160401b03841690811061042c5761042c6124a2565b90600052602060002090600702015b6040805161014081018252825460ff80821615158352610100808304909116151560208401526001600160401b03620100008304811694840194909452600160501b909104909216606082015260018301546001600160a01b03908116608083018190526002850154821660a0840152600385015460c0840152600485015460e08401526005850154938301939093526006909301549092166101208301529091503314806104f6575060a08101516001600160a01b031633145b6105385760405162461bcd60e51b815260206004820152601360248201527210d85b98d95b081d5b985d5d1a1bdc9a5e9959606a1b6044820152606401610379565b60008152821561071d5761010081015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b0385169063a9059cbb906044016020604051808303816000875af1158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906124b8565b506001600160a01b038416600090815260026020526040902080548291906001600160401b0385169081106105f1576105f16124a2565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517f9b3589e58cfaae811e95372b148d4048358e808d0c0af452b23f9d4620f8a23e906107109083906124d5565b60405180910390a16108fa565b61012081015160e082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906124b8565b506001600160a01b038416600090815260036020526040902080548291906001600160401b0385169081106107d2576107d26124a2565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517fb95b9053e8e235c5fb04aa72707d183a8eba7f5f7847a660f916fdf159927cc8906108f19083906124d5565b60405180910390a15b5050600180555050565b600080600580548060200260200160405190810160405280929190818152602001828054801561095d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161093f575b505083519394506000925050505b818110156109b857846001600160a01b031683828151811061098f5761098f6124a2565b60200260200101516001600160a01b0316036109b057506001949350505050565b60010161096b565b506000949350505050565b6109cb61208f565b6001600160a01b038181166000818152600460208181526040928390208351606081018552815460ff811615158252610100900461ffff169281019290925260010154818401819052600754935163a9059cbb60e01b81529390951691830191909152602482019390935263a9059cbb906044016020604051808303816000875af1158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906124b8565b50600060408083018281526001600160a01b03909416825260046020908152912082518154929093015161ffff166101000262ffff00199315159390931662ffffff19909216919091179190911781559051600190910155565b610ae461208f565b6101f48261ffff1610610b285760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40a8dede40d0d2ced60a31b6044820152606401610379565b6001600160a01b03166000908152600460205260409020805461ffff9092166101000262ffff0019909216919091179055565b60026020528160005260406000208181548110610b7757600080fd5b6000918252602090912060079091020180546001820154600283015460038401546004850154600586015460069096015460ff808716995061010087041697506001600160401b03620100008704811697600160501b90970416956001600160a01b0395861695948516949091168a565b600260015403610c0a5760405162461bcd60e51b815260040161037990612443565b60026001556103e88511610c545760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b610c5d88610904565b610ca05760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0387166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252610d325760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6001600160a01b0389166000818152600260205260409081902054905162aa3a7160e11b815290919063015474e290610d7b90339030908d908c908c908c908c906004016125a3565b600060405180830381600087803b158015610d9557600080fd5b505af1158015610da9573d6000803e3d6000fd5b505050506000610dbd8884602001516120e9565b9050600260008c6001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507f3b24c5db8e1f8aaec17cd20d4e148ad8ee3909fd0c9a1f6a86b1e900a49ef6b7604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b031681525060405161107291906124d5565b60405180910390a1505060018055505050505050505050565b61109361208f565b61109d600061211f565b565b6110a761208f565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036110eb5760405162461bcd60e51b815260040161037990612443565b60026001556110f982610904565b6111155760405162461bcd60e51b81526004016103799061247a565b6001600160a01b038216600090815260026020526040812080546001600160401b038416908110611148576111486124a2565b600091825260209182902060408051610140810182526007909302909101805460ff80821615158086526101008084049092161515968601969096526001600160401b03620100008304811694860194909452600160501b909104909216606084015260018101546001600160a01b0390811660808501526002820154811660a0850152600382015460c0850152600482015460e0850152600582015492840192909252600601541661012082015291506112335760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b3360a08201819052600160208301526000825261012082015160e08301516040516323b872dd60e01b8152600481019390935230602484015260448301526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156112a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c791906124b8565b508061012001516001600160a01b031663a9059cbb82608001518360c001518460e001516112f591906125fa565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136491906124b8565b5060c08101516101208201516001600160a01b03166000908152600460205260408120600101805490919061139a908490612611565b90915550506001600160a01b038316600090815260026020526040902080548291906001600160401b0385169081106113d5576113d56124a2565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e086015160048085019190915585870151600585015561012090960151600690930180549091169282169290921790915591840151905163a9059cbb60e01b81523393810193909352602483015284169063a9059cbb906044016020604051808303816000875af1158015611514573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153891906124b8565b507fb6432e18a59c31eafbe7fea705a495b38ea4992c69bdc678262b38ddc31c2d218160405161156891906124d5565b60405180910390a150506001805550565b6005818154811061158957600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600154036115c55760405162461bcd60e51b815260040161037990612443565b60026001556115d386610904565b6115ef5760405162461bcd60e51b81526004016103799061247a565b6001600160a01b038616600090815260036020526040812080546001600160401b038816908110611622576116226124a2565b60009182526020909120600790910201805490915060ff166116745760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b60028101546001600160a01b03166116be5760405162461bcd60e51b815260206004820152600d60248201526c57726f6e67206164647265737360981b6044820152606401610379565b6001810180546001600160a01b03191633908117909155815461ffff19166101001782556002820154600583015460405162aa3a7160e11b81526001600160a01b038b81169463015474e2946117239491939216918b908b908b908b906004016125a3565b600060405180830381600087803b15801561173d57600080fd5b505af1158015611751573d6000803e3d6000fd5b5050506006820154600383015460048401546001600160a01b03909216925063a9059cbb913391611781916125fa565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156117cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f091906124b8565b50600381015460068201546001600160a01b031660009081526004602052604081206001018054909190611825908490612611565b90915550506001600160a01b038716600090815260036020526040902080548291906001600160401b038916908110611860576118606124a2565b600091825260209091208254600790920201805460ff928316151560ff19821681178355845461010090819004909416151590930261ff001990931661ffff19909116179190911780825582546001600160401b036201000091829004811690910269ffffffffffffffff0000198316811784558454600160501b9081900490921690910267ffffffffffffffff60501b1990911662010000600160901b03199092169190911717815560018083015490820180546001600160a01b03199081166001600160a01b03938416179091556002808501549084018054831691841691909117905560038085015490840155600480850154908401556005808501549084015560069384015493909201805490921692169190911790556040517f127e23dc5aa74346dfbee84f2e6e25abf5f06e34ad3beea66e7363e53ff51359906119ab908390612629565b60405180910390a15050600180555050505050565b6119c861208f565b6001600160a01b03831660009081526004602052604090205460ff16611a3457600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0385161790555b60408051606081018252600180825261ffff94851660208084019182528385019586526001600160a01b0397909716600090815260049097529290952090518154925162ffffff1990931690151562ffff00191617610100929094169190910292909217825551910155565b611aa861208f565b611ab181610904565b15611af45760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610379565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b60036020528160005260406000208181548110610b7757600080fd5b600260015403611b845760405162461bcd60e51b815260040161037990612443565b60026001556103e88111611bce5760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b611bd784610904565b611c1a5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0383166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252611cac5760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015611cff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2391906124b8565b506001600160a01b038516600090815260036020908152604082205490830151909190611d519085906120e9565b905060036000886001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507fa23adb6634e58bf746cbb87e2f83ff7c3ba3201ab3f5f6cd04188a2acda98450604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b03168152506040516119ab91906124d5565b6006818154811061158957600080fd5b61201e61208f565b6001600160a01b0381166120835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610379565b61208c8161211f565b50565b6000546001600160a01b0316331461109d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b6000808261ffff16116120fd576000612118565b6103e861210e61ffff8416856126c0565b61211891906126df565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461208c57600080fd5b801515811461208c57600080fd5b80356001600160401b03811681146121a957600080fd5b919050565b6000806000606084860312156121c357600080fd5b83356121ce8161216f565b925060208401356121de81612184565b91506121ec60408501612192565b90509250925092565b60006020828403121561220757600080fd5b81356121188161216f565b803561ffff811681146121a957600080fd5b6000806040838503121561223757600080fd5b61224083612212565b915060208301356122508161216f565b809150509250929050565b6000806040838503121561226e57600080fd5b82356122798161216f565b946020939093013593505050565b803560ff811681146121a957600080fd5b600080600080600080600080610100898b0312156122b557600080fd5b88356122c08161216f565b975060208901356122d08161216f565b96506040890135955060608901359450608089013593506122f360a08a01612287565b925060c0890135915060e089013590509295985092959890939650565b6000806040838503121561232357600080fd5b823561232e8161216f565b915061233c60208401612192565b90509250929050565b60006020828403121561235757600080fd5b5035919050565b60008060008060008060c0878903121561237757600080fd5b86356123828161216f565b955061239060208801612192565b9450604087013593506123a560608801612287565b92506080870135915060a087013590509295509295509295565b6000806000606084860312156123d457600080fd5b83356123df8161216f565b92506123ed60208501612212565b9150604084013590509250925092565b6000806000806080858703121561241357600080fd5b843561241e8161216f565b9350602085013561242e8161216f565b93969395505050506040820135916060013590565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d151bdad95b88155b9b1a5cdd195960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124ca57600080fd5b815161211881612184565b815115158152610140810160208301516124f3602084018215159052565b50604083015161250e60408401826001600160401b03169052565b50606083015161252960608401826001600160401b03169052565b50608083015161254460808401826001600160a01b03169052565b5060a083015161255f60a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e08301526101008084015181840152506101208084015161259b828501826001600160a01b03169052565b505092915050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b634e487b7160e01b600052601160045260246000fd5b60008282101561260c5761260c6125e4565b500390565b60008219821115612624576126246125e4565b500190565b815460ff81161515825261014082019061264d6020840160ff8360081c1615159052565b6001600160401b03601082901c8116604085015260509190911c16606083015260018301546001600160a01b0390811660808401526002840154811660a0840152600384015460c0840152600484015460e084015260058401546101008401526006909301549092166101209091015290565b60008160001904831182151516156126da576126da6125e4565b500290565b6000826126fc57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f64830d4a899d892d4d1cad4c24c30c29fe0bf798ddd8a23bf148eac724db7c164736f6c634300080e00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122090a46b9aacef5776e06ffebdc76bc2ceca9701c4ed643a7ba42a6e7c5ef11dc864736f6c634300080e0033",
    "sourceMap": "223:5332:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:54;;;:::i;:::-;;1979:116:2;;;;;;:::i;:::-;;:::i;1326:96::-;;;;;;:::i;:::-;;:::i;1540:120::-;;;;;;:::i;:::-;;:::i;5041:455::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2921:32:25;;;2903:51;;2891:2;2876:18;5041:455:2;;;;;;;;1178:85;;;;;;:::i;:::-;;:::i;288:38:1:-;;-1:-1:-1;;;;;;;;;;;288:38:1;;2350:140:2;;;;;;:::i;:::-;;:::i;4313:568::-;;;;;;:::i;:::-;;:::i;:::-;;;4169:25:25;;;4157:2;4142:18;4313:568:2;4023:177:25;3279:107:2;;;;;;:::i;:::-;;:::i;1005:242:24:-;;;;;;:::i;:::-;;:::i;1867:106:2:-;;;;;;:::i;:::-;;:::i;3392:915::-;;;;;;:::i;:::-;;:::i;5502:406::-;;;;;;:::i;:::-;;:::i;1666:130::-;;;;;;:::i;:::-;;:::i;1089:83::-;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;5283:14:25;;5276:22;5258:41;;5246:2;5231:18;1819:584:0;5118:187:25;3074:81:2;;;;;;:::i;:::-;;:::i;2214:130::-;;;;;;:::i;:::-;;:::i;2642:341::-;;;;;;:::i;:::-;;:::i;3092:1525:24:-;;;;;;:::i;:::-;;:::i;1428:106:2:-;;;;;;:::i;:::-;;:::i;1285:1803:24:-;;;;;;:::i;:::-;;:::i;1572:26:0:-;;;;;;;;;947:54:24;977:19;;-1:-1:-1;;;977:19:24;;985:10;977:19;;;4169:25:25;-1:-1:-1;;;;;;;;;;;217:64:1;977:7:24;;4142:18:25;;977:19:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:54::o;1979:116:2:-;2042:18;;-1:-1:-1;;;2042:18:2;;-1:-1:-1;;;;;;;;;;;217:64:1;2042:7:2;;:18;;2050:3;;2055:4;;2042:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2070:18:2;;-1:-1:-1;;;2070:18:2;;-1:-1:-1;;;;;2921:32:25;;2070:18:2;;;2903:51:25;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2070:13:2;;-1:-1:-1;2876:18:25;;2070::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1979:116;;:::o;1326:96::-;1370:22;;-1:-1:-1;;;1370:22:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1370:7:2;;:22;;1378:3;;-1:-1:-1;;;1383:8:2;1370:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1402:13:2;;-1:-1:-1;;;1402:13:2;;-1:-1:-1;;;;;2921:32:25;;1402:13:2;;;2903:51:25;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1402:8:2;;-1:-1:-1;2876:18:25;;1402:13:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:96;:::o;1540:120::-;1600:22;;-1:-1:-1;;;1600:22:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1600:7:2;;:22;;1608:3;;-1:-1:-1;;;1613:8:2;1600:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1632:21:2;;-1:-1:-1;;;1632:21:2;;-1:-1:-1;;;;;6851:15:25;;;1632:21:2;;;6833:34:25;6903:15;;6883:18;;;6876:43;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1632:8:2;;-1:-1:-1;6768:18:25;;1632:21:2;6621:304:25;5041:455:2;5201:16;;-1:-1:-1;;;5201:16:2;;5132:12;;;;-1:-1:-1;;;;;;;;;;;217:64:1;5201:10:2;;:16;;5212:4;;5201:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5201:16:2;;;;;;;;;;;;:::i;:::-;5219:4;5184:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5160:64;;5345:8;5339:15;5332:4;5322:8;5318:19;5315:1;5308:47;5300:55;-1:-1:-1;;;;;;5396:18:2;;5375:114;;;;-1:-1:-1;;;5375:114:2;;9029:2:25;5375:114:2;;;9011:21:25;9068:2;9048:18;;;9041:30;9107:34;9087:18;;;9080:62;-1:-1:-1;;;9158:18:25;;;9151:47;9215:19;;5375:114:2;;;;;;;;;5150:346;5041:455;;;;:::o;1178:85::-;-1:-1:-1;;;;;;;;;;;1225:7:2;1233:22;1251:4;1233:15;:22;:::i;:::-;1225:31;;;;;;;;;;;;;4169:25:25;;4157:2;4142:18;;4023:177;2350:140:2;2429:18;;-1:-1:-1;;;2429:18:2;;-1:-1:-1;;;;;;;;;;;217:64:1;2429:7:2;;:18;;2437:3;;2442:4;;2429:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2457:26:2;;-1:-1:-1;;;2457:26:2;;-1:-1:-1;;;;;6851:15:25;;;2457:26:2;;;6833:34:25;6903:15;;6883:18;;;6876:43;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2457:13:2;;-1:-1:-1;6768:18:25;;2457:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2350:140;;;:::o;4313:568::-;4381:14;4422:3;4415;:10;;4407:81;;;;-1:-1:-1;;;4407:81:2;;9709:2:25;4407:81:2;;;9691:21:25;9748:2;9728:18;;;9721:30;9787:34;9767:18;;;9760:62;9858:28;9838:18;;;9831:56;9904:19;;4407:81:2;9507:422:25;4407:81:2;4499:12;4514:9;4520:3;4514;:9;:::i;:::-;4499:24;;4538:4;4546:1;4538:9;4534:287;;4580:3;4571:12;;4534:287;;;-1:-1:-1;;4612:4:2;:19;4608:213;;4664:1;4655:10;;4608:213;;;4712:6;;;:::i;:::-;;-1:-1:-1;4756:11:2;4770:8;4712:6;4770:1;:8;:::i;:::-;4756:22;-1:-1:-1;4801:9:2;4756:22;4801:3;:9;:::i;:::-;4792:18;;4698:123;4608:213;4836:38;;;10668:21:25;;;10725:2;10705:18;;;10698:30;-1:-1:-1;;;10759:2:25;10744:18;;10737:42;10846:4;10831:20;;10824:36;;;4836:38:2;;;;;;;10811:3:25;4836:38:2;;;4397:484;4313:568;;;;;:::o;3279:107::-;3351:28;3356:5;3363:2;3367:4;3373:5;3351:4;:28::i;:::-;3279:107;;;:::o;1005:242:24:-;1070:6;;:19;;;-1:-1:-1;;;1070:19:24;;;;-1:-1:-1;;;;;;;;;;;217:64:1;1051:9:24;;-1:-1:-1;;;;;1070:6:24;;;;:17;;:19;;;;;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1051:39;;-1:-1:-1;;;;;;1051:39:24;;;;;;;1061:28;;;1051:39;;;5258:41:25;5231:18;;1051:39:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1110:5:24;;1096:20;;-1:-1:-1;;;1096:20:24;;-1:-1:-1;;;;;1110:5:24;;;1096:20;;;2903:51:25;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1096:13:24;;-1:-1:-1;2876:18:25;;1096:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:6:24;;:19;;-1:-1:-1;;;1122:19:24;;;;;4169:25:25;;;-1:-1:-1;;;;;1122:6:24;;;;-1:-1:-1;1122:11:24;;-1:-1:-1;4142:18:25;;1122:19:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1147:6:24;;1170;;1147:39;;-1:-1:-1;;;1147:39:24;;-1:-1:-1;;;;;1147:6:24;;;;-1:-1:-1;1147:14:24;;-1:-1:-1;1147:39:24;;1170:6;;;;1179;;1147:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1192:6:24;;1203:5;;-1:-1:-1;;;;;1192:6:24;;;;:10;;1203:5;1210:11;1219:2;1210:6;:11;:::i;:::-;1192:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1228:14:24;;;-1:-1:-1;;;1228:14:24;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1228:12:24;;-1:-1:-1;1228:14:24;;;;;241:37:1;;1228:14:24;;;;;;;241:37:1;217:64;1228:14:24;;;;;;;;;;1867:106:2;1916:22;;-1:-1:-1;;;1916:22:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1916:7:2;;:22;;1924:3;;-1:-1:-1;;;1929:8:2;1916:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1948:18:2;;-1:-1:-1;;;1948:18:2;;-1:-1:-1;;;;;2921:32:25;;1948:18:2;;;2903:51:25;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1948:13:2;;-1:-1:-1;2876:18:25;;1948::2;2757:203:25;3392:915:2;3546:38;;;-1:-1:-1;;;;;2921:32:25;;;3546:38:2;;;;2903:51:25;;;;3546:38:2;;;;;;;;;;2876:18:25;;;;3546:38:2;;;;;;;-1:-1:-1;;;;;3546:38:2;-1:-1:-1;;;3546:38:2;;;3535:50;;3511:20;;3535:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3508:77;;;3595:15;3624:7;3613:30;;;;;;;;;;;;:::i;:::-;3595:48;-1:-1:-1;3680:123:2;3798:4;3680:90;3767:2;3680:64;-1:-1:-1;;;3680:35:2;:8;3709:5;3680:28;:35::i;:::-;:52;18902:9;;;:16;;-1:-1:-1;;18902:16:2;;;;;;;;;;;;:9;18803:143;3680:64;:86;19218:10;;;:47;;;;;;;-1:-1:-1;19218:47:2;;;;;;;-1:-1:-1;;;;;19242:21:2;;;;19218:47;;;:10;19114:179;3680:90;:117;;:123::i;:::-;3848:6;3845:456;;;3910:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3910:34:2;-1:-1:-1;;;3910:34:2;;;3899:46;;3872:23;;-1:-1:-1;;;;;3899:10:2;;;:46;;3910:34;3899:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3869:76;;;3959:14;3987:10;3976:33;;;;;;;;;;;;:::i;:::-;3959:50;;4033:7;4026:4;:14;4023:143;;;4071:14;4081:4;4071:7;:14;:::i;:::-;4060:26;;;;:::i;:::-;;;4023:143;;;4136:14;4143:7;4136:4;:14;:::i;:::-;4125:26;;;;:::i;:::-;;;4023:143;4179:111;4283:6;4179:72;-1:-1:-1;;;4179:39:2;:8;4212:5;4179:32;:39::i;:111::-;3855:446;;3467:840;;3392:915;;;;:::o;5502:406::-;5626:16;;-1:-1:-1;;;5626:16:2;;5574:12;;;;-1:-1:-1;;;;;;;;;;;217:64:1;5626:10:2;;:16;;5637:4;;5626:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5626:16:2;;;;;;;;;;;;:::i;:::-;5602:40;;5763:8;5757:15;5750:4;5740:8;5736:19;5733:1;5726:47;5718:55;-1:-1:-1;;;;;;5814:18:2;;5793:108;;;;-1:-1:-1;;;5793:108:2;;11916:2:25;5793:108:2;;;11898:21:25;11955:2;11935:18;;;11928:30;11994:34;11974:18;;;11967:62;-1:-1:-1;;;12045:18:25;;;12038:41;12096:19;;5793:108:2;11714:407:25;5793:108:2;5592:316;5502:406;;;:::o;1666:130::-;1740:18;;-1:-1:-1;;;1740:18:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1740:7:2;;:18;;1748:3;;1753:4;;1740:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1768:21:2;;-1:-1:-1;;;1768:21:2;;-1:-1:-1;;;;;6851:15:25;;;1768:21:2;;;6833:34:25;6903:15;;6883:18;;;6876:43;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1768:8:2;;-1:-1:-1;6768:18:25;;1768:21:2;6621:304:25;1089:83:2;-1:-1:-1;;;;;;;;;;;1134:7:2;1142:22;1160:4;1142:15;:22;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3074:81:2:-;3131:17;;-1:-1:-1;;;3131:17:2;;-1:-1:-1;;;;;;;;;;;217:64:1;3131:7:2;;:17;;3139:2;;3143:4;;3131:17;;;:::i;2214:130::-;2279:22;;-1:-1:-1;;;2279:22:2;;-1:-1:-1;;;;;;;;;;;217:64:1;2279:7:2;;:22;;2287:3;;-1:-1:-1;;;2292:8:2;2279:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2311:26:2;;-1:-1:-1;;;2311:26:2;;-1:-1:-1;;;;;6851:15:25;;;2311:26:2;;;6833:34:25;6903:15;;6883:18;;;6876:43;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2311:13:2;;-1:-1:-1;6768:18:25;;2311:26:2;6621:304:25;2642:341:2;2718:125;;;;;13084:2:25;13066:21;;;13123:1;13103:18;;;13096:29;-1:-1:-1;;;13156:2:25;13141:18;;13134:37;13209:3;13202:4;13187:20;;13180:33;;;13250:2;13229:19;;;13222:31;13290:34;13284:3;13269:19;;13262:63;13362:34;13356:3;13341:19;;13334:63;13434:32;13428:3;13413:19;;13406:61;13499:3;13484:19;;12781:728;2718:125:2;;;;;;;;2853:123;2971:4;2853:90;2940:2;2853:64;-1:-1:-1;;;2853:35:2;:8;2882:5;2853:28;:35::i;3092:1525:24:-;3189:20;;-1:-1:-1;;;3189:20:24;;3205:3;3199:9;;;;3189:20;;;5258:41:25;-1:-1:-1;;;;;;;;;;;217:64:1;3189:9:24;;5231:18:25;;3189:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3240:6:24;;:19;;;-1:-1:-1;;;3240:19:24;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;3215:9:24;;-1:-1:-1;3262:4:24;;-1:-1:-1;;;;;3240:6:24;;:17;;:19;;;;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;3239:33;;3270:2;3239:33;:::i;:::-;3225:11;3234:2;3225:6;:11;:::i;:::-;3215:58;;-1:-1:-1;;;;;;3215:58:24;;;;;;;3225:47;-1:-1:-1;3215:58:24;;;5258:41:25;5231:18;;3215:58:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3310:23:24;;-1:-1:-1;;;3310:23:24;;3328:4;3320:12;;3310:23;;;5258:41:25;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;3310:9:24;;-1:-1:-1;5231:18:25;;3310:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3357:3:24;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;3339:9:24;;-1:-1:-1;3357:10:24;;3363:4;;3357:10;:::i;:::-;3339:29;;-1:-1:-1;;;;;;3339:29:24;;;;;;;3349:18;;;3339:29;;;5258:41:25;5231:18;;3339:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3410:6:24;;3419;;3394:37;;3374:17;;-1:-1:-1;;;;;;3410:6:24;;;;-1:-1:-1;3419:6:24;;;3427:3;;3394:37;;;:::i;:::-;-1:-1:-1;;;;;13943:15:25;;;13925:34;;13995:15;;;;13990:2;13975:18;;13968:43;14059:6;14047:19;14042:2;14027:18;;14020:47;13875:2;13860:18;3394:37:24;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3374:57:24;-1:-1:-1;3437:18:24;3458:11;3467:2;3458:6;:11;:::i;:::-;3498:6;;3475:30;;-1:-1:-1;;;3475:30:24;;-1:-1:-1;;;;;3498:6:24;;;3475:30;;;2903:51:25;3437:32:24;;-1:-1:-1;3475:22:24;;;;;2876:18:25;;3475:30:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3540:6:24;;3518:29;;-1:-1:-1;;;3518:29:24;;-1:-1:-1;;;;;3540:6:24;;;3518:29;;;2903:51:25;3518:21:24;;;;-1:-1:-1;3518:21:24;;-1:-1:-1;2876:18:25;;3518:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3511:37;;;;:::i;:::-;3583:5;;3569:20;;-1:-1:-1;;;3569:20:24;;-1:-1:-1;;;;;3583:5:24;;;3569:20;;;2903:51:25;-1:-1:-1;;;;;;;;;;;217:64:1;3569:13:24;;2876:18:25;;3569:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3595:6:24;;3634:3;;3595:43;;-1:-1:-1;;;3595:43:24;;-1:-1:-1;;;;;3595:6:24;;;;-1:-1:-1;3595:14:24;;-1:-1:-1;3595:43:24;;3618:13;;3634:3;3595:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3644:6:24;;:18;;-1:-1:-1;;;3644:18:24;;;;;4169:25:25;;;-1:-1:-1;;;;;3644:6:24;;;;:11;;4142:18:25;;3644::24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3676:6:24;;3693:5;;3676:23;;-1:-1:-1;;;3676:23:24;;-1:-1:-1;;;;;3693:5:24;;;3676:23;;;2903:51:25;3703:5:24;;-1:-1:-1;3676:6:24;;;-1:-1:-1;3676:16:24;;2876:18:25;;3676:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;3668:57;;;;-1:-1:-1;;;3668:57:24;;;;;;;:::i;:::-;3774:6;;3797;;3732:109;;-1:-1:-1;;;3732:109:24;;-1:-1:-1;;;;;3774:6:24;;;3732:109;;;15051:34:25;3797:6:24;;;15101:18:25;;;15094:43;15153:18;;;15146:34;;;15196:18;;;15189:34;;;3732:26:24;;;;;;14985:19:25;;3732:109:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3855:6:24;;3872:5;;3855:23;;-1:-1:-1;;;3855:23:24;;-1:-1:-1;;;;;3872:5:24;;;3855:23;;;2903:51:25;3855:6:24;;;-1:-1:-1;3855:16:24;;-1:-1:-1;2876:18:25;;3855:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;3847:59;;;;-1:-1:-1;;;3847:59:24;;15436:2:25;3847:59:24;;;15418:21:25;15475:2;15455:18;;;15448:30;-1:-1:-1;;;15494:18:25;;;15487:48;15552:18;;3847:59:24;15234:342:25;3847:59:24;3927:6;;:40;;-1:-1:-1;;;3927:40:24;;-1:-1:-1;;;;;2921:32:25;;;3927:40:24;;;2903:51:25;3971:5:24;;3927:6;;:16;;2876:18:25;;3927:40:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;3912:99;;;;-1:-1:-1;;;3912:99:24;;;;;;;:::i;:::-;4017:14;;;-1:-1:-1;;;4017:14:24;;;;-1:-1:-1;;;;;;;;;;;217:64:1;4017:12:24;;:14;;;;;241:37:1;;4017:14:24;;;;;;;241:37:1;217:64;4017:14:24;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4063:5:24;;4049:20;;-1:-1:-1;;;4049:20:24;;-1:-1:-1;;;;;4063:5:24;;;4049:20;;;2903:51:25;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;4049:13:24;;-1:-1:-1;2876:18:25;;4049:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4075:6:24;;:19;;-1:-1:-1;;;4075:19:24;;;;;4169:25:25;;;-1:-1:-1;;;;;4075:6:24;;;;-1:-1:-1;4075:11:24;;-1:-1:-1;4142:18:25;;4075:19:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4100:6:24;;4123;;4100:39;;-1:-1:-1;;;4100:39:24;;-1:-1:-1;;;;;4100:6:24;;;;-1:-1:-1;4100:14:24;;-1:-1:-1;4100:39:24;;4123:6;;;;4132;;4100:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4145:6:24;;4156:5;;4145:29;;-1:-1:-1;;;4145:29:24;;-1:-1:-1;;;;;4145:6:24;;;;:10;;:29;;4156:5;;;4163:10;;4145:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4188:6:24;;4205:5;;4188:23;;-1:-1:-1;;;4188:23:24;;-1:-1:-1;;;;;4205:5:24;;;4188:23;;;2903:51:25;4215:10:24;;-1:-1:-1;4188:6:24;;;-1:-1:-1;4188:16:24;;2876:18:25;;4188:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;4180:62;;;;-1:-1:-1;;;4180:62:24;;;;;;;:::i;:::-;4304:6;;4319:5;;4380:3;;4249:7;;;;;;4282:116;;-1:-1:-1;;;;;4304:6:24;;;;4319:5;;4340:13;;4362:10;;4391:1;4282:6;:116::i;:::-;4431:6;;4451:3;;4404:60;;-1:-1:-1;;;4404:60:24;;-1:-1:-1;;;;;4431:6:24;;;4404:60;;;16210:51:25;4431:6:24;16277:18:25;;;16270:59;16345:18;;;16338:34;;;;16420:4;16408:17;;16388:18;;;16381:45;16442:19;;;16435:35;;;16486:19;;;16479:35;;;4248:150:24;;-1:-1:-1;4248:150:24;;-1:-1:-1;4248:150:24;-1:-1:-1;4404:18:24;;;;;16182:19:25;;4404:60:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4471:14:24;;;-1:-1:-1;;;4471:14:24;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;4471:12:24;;-1:-1:-1;4471:14:24;;;;;241:37:1;;4471:14:24;;;;;;;241:37:1;217:64;4471:14:24;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4526:6:24;;4492:42;;-1:-1:-1;;;4492:42:24;;-1:-1:-1;;;;;4526:6:24;;;4492:42;;;2903:51:25;4492:25:24;;;;-1:-1:-1;4492:25:24;;-1:-1:-1;2876:18:25;;4492:42:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4573:6:24;;4590;;4573:24;;-1:-1:-1;;;4573:24:24;;-1:-1:-1;;;;;4590:6:24;;;4573:24;;;2903:51:25;4573:6:24;;;-1:-1:-1;4573:16:24;;-1:-1:-1;2876:18:25;;4573:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4565:4;4550:11;;;;:5;:11;:::i;:::-;4549:20;;;;:::i;:::-;:48;4541:71;;;;-1:-1:-1;;;4541:71:24;;16727:2:25;4541:71:24;;;16709:21:25;16766:2;16746:18;;;16739:30;-1:-1:-1;;;16785:18:25;;;16778:40;16835:18;;4541:71:24;16525:334:25;1428:106:2;1486:18;;-1:-1:-1;;;1486:18:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1486:7:2;;:18;;1494:3;;1499:4;;1486:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1514:13:2;;-1:-1:-1;;;1514:13:2;;-1:-1:-1;;;;;2921:32:25;;1514:13:2;;;2903:51:25;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1514:8:2;;-1:-1:-1;2876:18:25;;1514:13:2;2757:203:25;1285:1803:24;1383:20;;-1:-1:-1;;;1383:20:24;;1399:3;1393:9;;;;1383:20;;;5258:41:25;-1:-1:-1;;;;;;;;;;;217:64:1;1383:9:24;;5231:18:25;;1383:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1434:6:24;;:19;;;-1:-1:-1;;;1434:19:24;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1409:9:24;;-1:-1:-1;1456:4:24;;-1:-1:-1;;;;;1434:6:24;;:17;;:19;;;;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;1433:33;;1464:2;1433:33;:::i;:::-;1419:11;1428:2;1419:6;:11;:::i;:::-;1409:58;;-1:-1:-1;;;;;;1409:58:24;;;;;;;1419:47;-1:-1:-1;1409:58:24;;;5258:41:25;5231:18;;1409:58:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1504:23:24;;-1:-1:-1;;;1504:23:24;;1522:4;1514:12;;1504:23;;;5258:41:25;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1504:9:24;;-1:-1:-1;5231:18:25;;1504:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1551:3:24;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1533:9:24;;-1:-1:-1;1551:10:24;;1557:4;;1551:10;:::i;:::-;1533:29;;-1:-1:-1;;;;;;1533:29:24;;;;;;;1543:18;;;1533:29;;;5258:41:25;5231:18;;1533:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1604:6:24;;1613;;1588:37;;1568:17;;-1:-1:-1;;;;;;1604:6:24;;;;-1:-1:-1;1613:6:24;;;1621:3;;1588:37;;;:::i;:::-;-1:-1:-1;;;;;13943:15:25;;;13925:34;;13995:15;;;;13990:2;13975:18;;13968:43;14059:6;14047:19;14042:2;14027:18;;14020:47;13875:2;13860:18;1588:37:24;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1568:57:24;-1:-1:-1;1631:18:24;1652:11;1661:2;1652:6;:11;:::i;:::-;1692:6;;1669:30;;-1:-1:-1;;;1669:30:24;;-1:-1:-1;;;;;1692:6:24;;;1669:30;;;2903:51:25;1631:32:24;;-1:-1:-1;1669:22:24;;;;;2876:18:25;;1669:30:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1734:6:24;;1712:29;;-1:-1:-1;;;1712:29:24;;-1:-1:-1;;;;;1734:6:24;;;1712:29;;;2903:51:25;1712:21:24;;;;-1:-1:-1;1712:21:24;;-1:-1:-1;2876:18:25;;1712:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1705:37;;;;:::i;:::-;1777:5;;1763:20;;-1:-1:-1;;;1763:20:24;;-1:-1:-1;;;;;1777:5:24;;;1763:20;;;2903:51:25;-1:-1:-1;;;;;;;;;;;217:64:1;1763:13:24;;2876:18:25;;1763:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1789:6:24;;1812;;1821:3;;1789:36;;-1:-1:-1;;;1789:36:24;;-1:-1:-1;;;;;1789:6:24;;;;-1:-1:-1;1789:14:24;;-1:-1:-1;1789:36:24;;1812:6;;;;1789:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1831:6:24;;:19;;-1:-1:-1;;;1831:19:24;;;;;4169:25:25;;;-1:-1:-1;;;;;1831:6:24;;;;:11;;4142:18:25;;1831:19:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1856:6:24;;1867:5;;1856:29;;-1:-1:-1;;;1856:29:24;;-1:-1:-1;;;;;1856:6:24;;;;-1:-1:-1;1856:10:24;;-1:-1:-1;1856:29:24;;1867:5;;;;1874:10;;1856:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1899:6:24;;1916:5;;1899:23;;-1:-1:-1;;;1899:23:24;;-1:-1:-1;;;;;1916:5:24;;;1899:23;;;2903:51:25;1926:10:24;;-1:-1:-1;1899:6:24;;;-1:-1:-1;1899:16:24;;2876:18:25;;1899:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;1891:62;;;;-1:-1:-1;;;1891:62:24;;;;;;;:::i;:::-;2015:6;;2030:5;;2091:3;;1960:7;;;;;;1993:116;;-1:-1:-1;;;;;2015:6:24;;;;2030:5;;2051:13;;2073:10;;2015:6;1993;:116::i;:::-;2215:6;;2163:60;;-1:-1:-1;;;2163:60:24;;-1:-1:-1;;;;;2215:6:24;;;2163:60;;;2903:51:25;1959:150:24;;-1:-1:-1;1959:150:24;;-1:-1:-1;1959:150:24;-1:-1:-1;2116:10:24;;;;;;2163:43;;;;;;2876:18:25;;2163:60:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2115:108;;;;;;2237:5;2229:53;;;;-1:-1:-1;;;2229:53:24;;17509:2:25;2229:53:24;;;17491:21:25;17548:2;17528:18;;;17521:30;17587:34;17567:18;;;17560:62;-1:-1:-1;;;17638:18:25;;;17631:33;17681:19;;2229:53:24;17307:399:25;2229:53:24;2307:3;2296:14;;:7;:14;;;2288:43;;;;-1:-1:-1;;;2288:43:24;;17913:2:25;2288:43:24;;;17895:21:25;17952:2;17932:18;;;17925:30;-1:-1:-1;;;17971:18:25;;;17964:46;18027:18;;2288:43:24;17711:340:25;2288:43:24;2381:6;;2404;;2450:3;;2338:148;;-1:-1:-1;;;2338:148:24;;-1:-1:-1;;;;;2381:6:24;;;2338:148;;;18433:34:25;2404:6:24;;;18483:18:25;;;18476:43;18535:18;;;18528:34;;;18578:18;;;18571:34;;;18621:19;;;18614:35;18698:4;18686:17;;18665:19;;;18658:46;18720:19;;;18713:35;;;18764:19;;;18757:35;;;2338:27:24;;;;;;18367:19:25;;2338:148:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2500:6:24;;2517:5;;2500:23;;-1:-1:-1;;;2500:23:24;;-1:-1:-1;;;;;2517:5:24;;;2500:23;;;2903:51:25;2500:6:24;;;-1:-1:-1;2500:16:24;;-1:-1:-1;2876:18:25;;2500:23:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;2492:60;;;;-1:-1:-1;;;2492:60:24;;;;;;;:::i;:::-;2573:6;;:40;;-1:-1:-1;;;2573:40:24;;-1:-1:-1;;;;;2921:32:25;;;2573:40:24;;;2903:51:25;2617:10:24;;2573:6;;:16;;2876:18:25;;2573:40:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;2558:104;;;;-1:-1:-1;;;2558:104:24;;;;;;;:::i;:::-;2668:14;;;-1:-1:-1;;;2668:14:24;;;;-1:-1:-1;;;;;;;;;;;217:64:1;2668:12:24;;:14;;;;;241:37:1;;2668:14:24;;;;;;;241:37:1;217:64;2668:14:24;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2714:5:24;;2700:20;;-1:-1:-1;;;2700:20:24;;-1:-1:-1;;;;;2714:5:24;;;2700:20;;;2903:51:25;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2700:13:24;;-1:-1:-1;2876:18:25;;2700:20:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2726:6:24;;:18;;-1:-1:-1;;;2726:18:24;;;;;4169:25:25;;;-1:-1:-1;;;;;2726:6:24;;;;-1:-1:-1;2726:11:24;;-1:-1:-1;4142:18:25;;2726::24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2750:6:24;;2789:3;;2750:43;;-1:-1:-1;;;2750:43:24;;-1:-1:-1;;;;;2750:6:24;;;;-1:-1:-1;2750:14:24;;-1:-1:-1;2750:43:24;;2773:13;;2789:3;2750:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2825:6:24;;2799:37;;-1:-1:-1;;;2799:37:24;;-1:-1:-1;;;;;2825:6:24;;;2799:37;;;18984:51:25;2825:6:24;19051:18:25;;;19044:59;2799:17:24;;;;;;18957:18:25;;2799:37:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2842:14:24;;;-1:-1:-1;;;2842:14:24;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2842:12:24;;-1:-1:-1;2842:14:24;;;;;241:37:1;;2842:14:24;;;;;;;241:37:1;217:64;2842:14:24;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2911:6:24;;2877:42;;-1:-1:-1;;;2877:42:24;;-1:-1:-1;;;;;2911:6:24;;;2877:42;;;2903:51:25;2877:25:24;;;;-1:-1:-1;2877:25:24;;-1:-1:-1;2876:18:25;;2877:42:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2938:6:24;;2955;;2938:24;;-1:-1:-1;;;2938:24:24;;-1:-1:-1;;;;;2955:6:24;;;2938:24;;;2903:51:25;2926:37:24;;-1:-1:-1;2938:6:24;;;-1:-1:-1;2938:16:24;;2876:18:25;;2938:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2926:11;:37::i;:::-;2969:35;2998:4;2983:11;;;;:5;:11;:::i;:::-;2982:20;;;;:::i;2969:35::-;3044:6;;3061;;3044:24;;-1:-1:-1;;;3044:24:24;;-1:-1:-1;;;;;3061:6:24;;;3044:24;;;2903:51:25;3044:6:24;;;:16;;2876:18:25;;3044:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3035:4;3020:11;;;;:5;:11;:::i;:::-;3019:20;;;;:::i;:::-;3018:50;3010:73;;;;-1:-1:-1;;;3010:73:24;;16727:2:25;3010:73:24;;;16709:21:25;16766:2;16746:18;;;16739:30;-1:-1:-1;;;16785:18:25;;;16778:40;16835:18;;3010:73:24;16525:334:25;3010:73:24;1377:1711;;;;;;;;1285:1803;;;:::o;18641:156:2:-;18747:12;;;:22;;-1:-1:-1;;;;;;18747:22:2;-1:-1:-1;;;;;18747:22:2;;;;;;;;;;:12;18641:156::o;19925:120::-;20005:33;20019:4;20033:3;20005:13;:33::i;:::-;19925:120;;:::o;4659:894:24:-;4829:5;4842:7;4857;4879:18;4937:16;;4963:5;4978:7;4995:6;5024:5;-1:-1:-1;;;;;5011:26:24;;5038:5;5011:33;;;;;;;;;;;;;;-1:-1:-1;;;;;2921:32:25;;;;2903:51;;2891:2;2876:18;;2757:203;5011:33:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4917:147;;;;;;19401:25:25;;;;-1:-1:-1;;;;;19500:15:25;;;19480:18;;;19473:43;19552:15;;;;19532:18;;;19525:43;19584:18;;;19577:34;19627:19;;;19620:35;19671:19;;;19664:35;;;19373:19;;4917:147:24;;;;;;;;;;;;4900:170;;;;;;4879:191;;5076:26;5142:115;5289:5;-1:-1:-1;;;;;5283:17:24;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5283:19:24;;;;;;;;;;;;:::i;:::-;5267:37;;;;;;;5339:10;;;;;;;;;;;-1:-1:-1;;;5339:10:24;;;;5122:302;;;;;20432:25:25;;;;20473:18;;;20466:34;;;;5329:21:24;20516:18:25;;;20509:34;5371:13:24;20559:18:25;;;20552:34;-1:-1:-1;;;;;20623:32:25;;20602:19;;;20595:61;20404:19;;5122:302:24;;;;;;;;;;;;5105:325;;;;;;5076:354;;5437:14;5454:53;5476:18;5496:10;9320:57:16;;-1:-1:-1;;;9320:57:16;;;23293:27:25;23336:11;;;23329:27;;;23372:12;;;23365:28;;;9284:7:16;;23409:12:25;;9320:57:16;;;;;;;;;;;;9310:68;;;;;;9303:75;;9191:194;;;;;5454:53:24;5522:25;;-1:-1:-1;;;5522:25:24;;;;;20841::25;;;20882:18;;;20875:34;;;5437:70:24;;-1:-1:-1;;;;;;;;;;;;217:64:1;5522:7:24;;20814:18:25;;5522:25:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5514:34;;;;;;;;;4659:894;;;;;;;;;;:::o;5514:110:4:-;5560:57;5613:2;5576:40;;;;;;4169:25:25;;4157:2;4142:18;;4023:177;5576:40:4;;;;-1:-1:-1;;5576:40:4;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:40:4;-1:-1:-1;;;5576:40:4;;;5560:15;:57::i;:::-;5514:110;:::o;20279:1089:2:-;20395:12;;;;20431:9;;;;20472:11;;;;20516:10;;;20493:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20395:12:2;;;;20431:9;;;;;;20381:11;;20493:33;;20516:10;;20493:33;;20516:10;20493:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20537:17;20574:4;20580:12;20588:3;20580:7;:12::i;:::-;20557:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20557:36:2;;;;;;;;;-1:-1:-1;;;;;20608:15:2;;;;;;:10;;;20557:36;20608:15;;;;;;-1:-1:-1;;;;;;20608:21:2;;;;;;;;;20557:36;;-1:-1:-1;20608:21:2;;:15;;20640:34;;20657:3;;20662:11;;20640:34;;:::i;:::-;;;;-1:-1:-1;;20640:34:2;;;;;;;;;20630:45;;20640:34;20630:45;;;;20608:68;;;;;;;;;;-1:-1:-1;20608:68:2;;;;20603:110;;20692:10;20697:4;20692;:10::i;:::-;;20603:110;-1:-1:-1;;;;;20745:15:2;;20722:12;20745:15;;;;;;;;;;;-1:-1:-1;;;;;;20745:21:2;;;;;;;;;20777:34;;20745:21;;20722:12;;20777:34;;20794:3;;20799:11;;20777:34;;:::i;:::-;;;;;;;;;;;;;20767:45;;;;;;20745:68;;;;;;;;;;;;20737:77;;20722:92;;20825:12;20864:17;20885:3;-1:-1:-1;;;;;20885:14:2;20900:4;20885:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20861:44:2;-1:-1:-1;20926:36:2;;-1:-1:-1;20861:44:2;20947:14;20950:11;20947:2;:14;:::i;:::-;20926;:36::i;:::-;20997:28;;-1:-1:-1;;;20997:28:2;;20919:43;;-1:-1:-1;20982:12:2;;-1:-1:-1;;;;;;;;;;;;20997:17:2;;;:28;;21015:3;;21020:4;;20997:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20982:43;;21048:4;21040;:12;21036:172;;21068:129;;-1:-1:-1;;;21068:129:2;;;;;;;:::i;:::-;21217:34;;-1:-1:-1;;;21217:34:2;;-1:-1:-1;;;;;;;;;;;21217:18:2;;;:34;;21236:3;;21241:4;;21247:3;;21217:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21268:12:2;;;21261:19;;-1:-1:-1;;;;;;21261:19:2;;;-1:-1:-1;21297:9:2;;;21290:16;;-1:-1:-1;;21290:16:2;;;21316:17;-1:-1:-1;21323:10:2;;21268:12;21316:17;:::i;:::-;21350:4;:11;;21343:18;;;20371:997;;;;;;;;20279:1089;;:::o;181:376:4:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;22555:397:2:-;22614:12;22642:19;22674:1;:8;22685:2;22674:13;;;;:::i;:::-;22664:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22664:24:2;;22642:46;;22703:9;22698:224;22722:1;:8;22718:1;:12;22698:224;;;22751:9;22763:1;22765;22763:4;;;;;;;;:::i;:::-;;;;;;;22751:16;;22896:1;22890;22886:2;22882:10;22878:2;22874:19;22866:6;22862:32;22855:43;22837:75;22732:3;;;;;:::i;:::-;;;;22698:224;;15421:3214;15545:12;;;;15581:9;;;;15622:11;;;;15666:10;;;15643:33;;;;;;;;;;;;;;;;;;;15508:7;;-1:-1:-1;;;;;15545:12:2;;15581:9;;;15622:11;15508:7;;15643:33;;15666:10;;15643:33;;;15666:10;15643:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15727:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;15727:21:2;;;;;;;;;15759:34;;15643:33;;-1:-1:-1;15727:21:2;:15;;-1:-1:-1;15759:34:2;;-1:-1:-1;15643:33:2;;15781:11;;15759:34;;:::i;:::-;;;;-1:-1:-1;;15759:34:2;;;;;;;;;15749:45;;15759:34;15749:45;;;;15727:68;;;;;;;;;;-1:-1:-1;15727:68:2;;;;15723:174;;;-1:-1:-1;;;;;15818:15:2;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15818:21:2;;;;;;;;;15850:34;;15818:21;;:10;15850:34;;15867:3;;15872:11;;15850:34;;:::i;:::-;;;;;;;;;;;;;15840:45;;;;;;15818:68;;;;;;;;;;;;15811:75;;;;;;15421:3214;;;:::o;15723:174::-;15906:17;15943:4;15949:12;15957:3;15949:7;:12::i;:::-;15926:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15906:56;;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;15972:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16003:12;16042:17;16063:3;-1:-1:-1;;;;;16063:14:2;16078:4;16063:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16039:44:2;-1:-1:-1;16104:36:2;;-1:-1:-1;16039:44:2;16125:14;16128:11;16125:2;:14;:::i;16104:36::-;16190:35;;-1:-1:-1;;;16190:35:2;;-1:-1:-1;;;;;2921:32:25;;16190:35:2;;;2903:51:25;16097:43:2;;-1:-1:-1;16162:22:2;;-1:-1:-1;;;;;;;;;;;;16190:21:2;;;2876:18:25;;16190:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16190:35:2;;;;;;;;;;;;:::i;:::-;16161:64;;;16239:5;:12;16255:1;16239:17;16235:2058;;16272:12;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;16287:17:2;;16305:3;16310:5;16316:1;16310:8;;;;;;;;:::i;:::-;;;;;;;16287:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16272:47;-1:-1:-1;16272:47:2;16333:106;;16380:44;16401:3;16414:5;16420:1;16414:8;;;;;;;;:::i;:::-;;;;;;;16406:17;;16380:44;;;;;;;:::i;:::-;;;;;;;;16333:106;16464:4;16456;:12;16452:180;;16488:129;;-1:-1:-1;;;16488:129:2;;;;;;;:::i;:::-;16650:86;16660:3;16665:4;16698:3;16703:11;16681:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16671:45;;;;;;16726:5;16732:1;16726:8;;;;;;;;:::i;:::-;;;;;;;16718:17;;16650:86;;;;;;;;;:::i;:::-;;;;;;;;16829:5;16835:1;16829:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;16750:15:2;;16821:17;16750:15;;;;;;;;;;-1:-1:-1;;;;;;16750:21:2;;;;;;;;;16782:34;;16829:8;;16750:21;;16782:34;;16799:3;;16804:11;;16782:34;;:::i;:::-;;;;-1:-1:-1;;16782:34:2;;;;;;;;;16772:45;;16782:34;16772:45;;;;16750:68;;;;;;;;;;;;-1:-1:-1;16750:68:2;;;:88;;;;-1:-1:-1;;;;;16852:15:2;;;;16923:4;16852:10;;;:15;;;;;-1:-1:-1;;;;;;16852:21:2;;;;;;;;;16884:34;;16923:4;;-1:-1:-1;16884:34:2;;16901:3;;16906:11;;16884:34;;:::i;:::-;;;;;;;-1:-1:-1;;16884:34:2;;;;;;16874:45;;16884:34;16874:45;;;;16852:68;;;;;;;;;;-1:-1:-1;16852:68:2;:75;;-1:-1:-1;;16852:75:2;;;;;;;;;;-1:-1:-1;16235:2058:2;;;16963:1;16948:5;:12;:16;16944:1349;;;16985:9;16980:1190;17004:5;:12;17000:1;:16;16980:1190;;;17041:12;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;17056:17:2;;17074:3;17079:5;17085:1;17079:8;;;;;;;;:::i;:::-;;;;;;;17056:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17041:47;-1:-1:-1;17041:47:2;17106:114;;17157:44;17178:3;17191:5;17197:1;17191:8;;;;;;;;:::i;:::-;;;;;;;17183:17;;17157:44;;;;;;;:::i;:::-;;;;;;;;17106:114;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;17262:18:2;;17281:3;17286:5;17292:1;17286:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17262:53:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17333:12;17363:17;17438:3;-1:-1:-1;;;;;17438:14:2;17453:4;17438:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17420:38:2;;-1:-1:-1;17420:38:2;-1:-1:-1;17487:36:2;17420:38;17508:14;17511:11;17508:2;:14;:::i;17487:36::-;17480:43;;17564:7;:37;;;;;-1:-1:-1;;;17575:4:2;:26;17564:37;17560:539;;;17699:86;17709:3;17714:4;17747:3;17752:11;17730:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17720:45;;;;;;17775:5;17781:1;17775:8;;;;;;;;:::i;:::-;;;;;;;17767:17;;17699:86;;;;;;;;;:::i;:::-;;;;;;;;17886:5;17892:1;17886:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17807:15:2;;17878:17;17807:15;;;;;;;;;;-1:-1:-1;;;;;;17807:21:2;;;;;;;;;17839:34;;17886:8;;17807:21;;17839:34;;17856:3;;17861:11;;17839:34;;:::i;:::-;;;;;;;;;;;;;17829:45;;;;;;17807:68;;;;;;;;;;;:88;;;;17988:4;17917;:10;;:15;17928:3;-1:-1:-1;;;;;17917:15:2;-1:-1:-1;;;;;17917:15:2;;;;;;;;;;;;:21;17933:4;-1:-1:-1;;;;;17917:21:2;;-1:-1:-1;;;;;17917:21:2;;;;;;;;;;;;;:68;17966:3;17971:11;17949:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17939:45;;;;;;17917:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;18014:18:2;;18033:3;18038:5;18044:1;18038:8;;;;;;;;:::i;:::-;;;;;;;18048:4;18014:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18075:5;;;;;17560:539;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;18116:18:2;;18135:3;18140:5;18146:1;18140:8;;;;;;;;:::i;:::-;;;;;;;18150:4;18116:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17023:1147;;;17018:3;;;;;:::i;:::-;;;;16980:1190;;;;16944:1349;;;18200:82;;;-1:-1:-1;;;18200:82:2;;25546:2:25;18200:82:2;;;25528:21:25;25565:18;;;25558:30;;;;25624:34;25604:18;;;25597:62;25695:34;25675:18;;;25668:62;25747:19;;18200:82:2;25344:428:25;18200:82:2;-1:-1:-1;;;;;18311:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;18311:21:2;;;;;;;;;18343:34;;18311:21;;:15;18343:34;;18360:3;;18365:11;;18343:34;;:::i;:::-;;;;-1:-1:-1;;18343:34:2;;;;;;;;;18333:45;;18343:34;18333:45;;;;18311:68;;;;;;;;;;-1:-1:-1;18311:68:2;;;;18303:128;;;;-1:-1:-1;;;18303:128:2;;25979:2:25;18303:128:2;;;25961:21:25;26018:2;25998:18;;;25991:30;26057:34;26037:18;;;26030:62;-1:-1:-1;;;26108:18:25;;;26101:45;26163:19;;18303:128:2;25777:411:25;18303:128:2;18449:12;;;18442:19;;-1:-1:-1;;;;;;18442:19:2;;;18478:9;;;18471:16;;-1:-1:-1;;18471:16:2;;;18497:17;-1:-1:-1;18504:10:2;;18449:12;18497:17;:::i;:::-;18524:18;18531:11;;;18524:18;;;-1:-1:-1;;;;;18560:15:2;;;;;;;;;;;;-1:-1:-1;;;;;;18560:21:2;;;;;;;;;18592:34;;18560:21;;18524:18;18592:34;;18609:3;;18614:11;;18592:34;;:::i;:::-;;;;;;;;;;;;;18582:45;;;;;;18560:68;;;;;;;;;;;;18553:75;;;;;;;;;15421:3214;;;:::o;22252:297::-;22326:7;22345:11;22367;22392:2;22381:1;:8;:13;:29;;22402:1;:8;22381:29;;;22397:2;22381:29;22367:43;;22425:6;22420:103;22441:3;22437:1;:7;22420:103;;;22506:5;:1;22510;22506:5;:::i;:::-;22480:1;22482:10;22491:1;22482:6;:10;:::i;:::-;22480:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;22480:13:2;22472:40;;22465:47;;;;;22446:3;;;;:::i;:::-;;;;22420:103;;;-1:-1:-1;22539:3:2;;22252:297;-1:-1:-1;;;;22252:297:2:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:25:-;82:20;;-1:-1:-1;;;;;131:31:25;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:25:o;451:186::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;602:29;621:9;602:29;:::i;:::-;592:39;451:186;-1:-1:-1;;;451:186:25:o;642:260::-;710:6;718;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;810:29;829:9;810:29;:::i;:::-;800:39;;858:38;892:2;881:9;877:18;858:38;:::i;:::-;848:48;;642:260;;;;;:::o;907:127::-;968:10;963:3;959:20;956:1;949:31;999:4;996:1;989:15;1023:4;1020:1;1013:15;1039:275;1110:2;1104:9;1175:2;1156:13;;-1:-1:-1;;1152:27:25;1140:40;;1210:18;1195:34;;1231:22;;;1192:62;1189:88;;;1257:18;;:::i;:::-;1293:2;1286:22;1039:275;;-1:-1:-1;1039:275:25:o;1319:187::-;1368:4;1401:18;1393:6;1390:30;1387:56;;;1423:18;;:::i;:::-;-1:-1:-1;1489:2:25;1468:15;-1:-1:-1;;1464:29:25;1495:4;1460:40;;1319:187::o;1511:338::-;1576:5;1605:53;1621:36;1650:6;1621:36;:::i;:::-;1605:53;:::i;:::-;1596:62;;1681:6;1674:5;1667:21;1721:3;1712:6;1707:3;1703:16;1700:25;1697:45;;;1738:1;1735;1728:12;1697:45;1787:6;1782:3;1775:4;1768:5;1764:16;1751:43;1841:1;1834:4;1825:6;1818:5;1814:18;1810:29;1803:40;1511:338;;;;;:::o;1854:222::-;1897:5;1950:3;1943:4;1935:6;1931:17;1927:27;1917:55;;1968:1;1965;1958:12;1917:55;1990:80;2066:3;2057:6;2044:20;2037:4;2029:6;2025:17;1990:80;:::i;2081:671::-;2168:6;2176;2229:2;2217:9;2208:7;2204:23;2200:32;2197:52;;;2245:1;2242;2235:12;2197:52;2285:9;2272:23;2314:18;2355:2;2347:6;2344:14;2341:34;;;2371:1;2368;2361:12;2341:34;2394:50;2436:7;2427:6;2416:9;2412:22;2394:50;:::i;:::-;2384:60;;2497:2;2486:9;2482:18;2469:32;2453:48;;2526:2;2516:8;2513:16;2510:36;;;2542:1;2539;2532:12;2510:36;-1:-1:-1;2565:24:25;;2620:4;2612:13;;2608:27;-1:-1:-1;2598:55:25;;2649:1;2646;2639:12;2598:55;2672:74;2738:7;2733:2;2720:16;2715:2;2711;2707:11;2672:74;:::i;:::-;2662:84;;;2081:671;;;;;:::o;2965:180::-;3024:6;3077:2;3065:9;3056:7;3052:23;3048:32;3045:52;;;3093:1;3090;3083:12;3045:52;-1:-1:-1;3116:23:25;;2965:180;-1:-1:-1;2965:180:25:o;3369:328::-;3446:6;3454;3462;3515:2;3503:9;3494:7;3490:23;3486:32;3483:52;;;3531:1;3528;3521:12;3483:52;3554:29;3573:9;3554:29;:::i;:::-;3544:39;;3602:38;3636:2;3625:9;3621:18;3602:38;:::i;:::-;3592:48;;3687:2;3676:9;3672:18;3659:32;3649:42;;3369:328;;;;;:::o;3702:316::-;3779:6;3787;3795;3848:2;3836:9;3827:7;3823:23;3819:32;3816:52;;;3864:1;3861;3854:12;3816:52;-1:-1:-1;;3887:23:25;;;3957:2;3942:18;;3929:32;;-1:-1:-1;4008:2:25;3993:18;;;3980:32;;3702:316;-1:-1:-1;3702:316:25:o;4205:118::-;4291:5;4284:13;4277:21;4270:5;4267:32;4257:60;;4313:1;4310;4303:12;4328:458;4411:6;4419;4427;4435;4488:3;4476:9;4467:7;4463:23;4459:33;4456:53;;;4505:1;4502;4495:12;4456:53;4528:29;4547:9;4528:29;:::i;:::-;4518:39;;4576:38;4610:2;4599:9;4595:18;4576:38;:::i;:::-;4566:48;;4661:2;4650:9;4646:18;4633:32;4623:42;;4715:2;4704:9;4700:18;4687:32;4728:28;4750:5;4728:28;:::i;:::-;4328:458;;;;-1:-1:-1;4328:458:25;;-1:-1:-1;;4328:458:25:o;4791:322::-;4860:6;4913:2;4901:9;4892:7;4888:23;4884:32;4881:52;;;4929:1;4926;4919:12;4881:52;4969:9;4956:23;5002:18;4994:6;4991:30;4988:50;;;5034:1;5031;5024:12;4988:50;5057;5099:7;5090:6;5079:9;5075:22;5057:50;:::i;:::-;5047:60;4791:322;-1:-1:-1;;;;4791:322:25:o;5310:117::-;5395:6;5388:5;5384:18;5377:5;5374:29;5364:57;;5417:1;5414;5407:12;5432:381;5508:6;5516;5524;5577:2;5565:9;5556:7;5552:23;5548:32;5545:52;;;5593:1;5590;5583:12;5545:52;5629:9;5616:23;5606:33;;5686:2;5675:9;5671:18;5658:32;5648:42;;5740:2;5729:9;5725:18;5712:32;5753:30;5777:5;5753:30;:::i;:::-;5802:5;5792:15;;;5432:381;;;;;:::o;6017:274::-;-1:-1:-1;;;;;6209:32:25;;;;6191:51;;6273:2;6258:18;;6251:34;6179:2;6164:18;;6017:274::o;6930:258::-;7002:1;7012:113;7026:6;7023:1;7020:13;7012:113;;;7102:11;;;7096:18;7083:11;;;7076:39;7048:2;7041:10;7012:113;;;7143:6;7140:1;7137:13;7134:48;;;-1:-1:-1;;7178:1:25;7160:16;;7153:27;6930:258::o;7193:383::-;7342:2;7331:9;7324:21;7305:4;7374:6;7368:13;7417:6;7412:2;7401:9;7397:18;7390:34;7433:66;7492:6;7487:2;7476:9;7472:18;7467:2;7459:6;7455:15;7433:66;:::i;:::-;7560:2;7539:15;-1:-1:-1;;7535:29:25;7520:45;;;;7567:2;7516:54;;7193:383;-1:-1:-1;;7193:383:25:o;7581:308::-;7656:5;7685:53;7701:36;7730:6;7701:36;:::i;7685:53::-;7676:62;;7761:6;7754:5;7747:21;7801:3;7792:6;7787:3;7783:16;7780:25;7777:45;;;7818:1;7815;7808:12;7777:45;7831:52;7876:6;7869:4;7862:5;7858:16;7853:3;7831:52;:::i;7894:457::-;7973:6;8026:2;8014:9;8005:7;8001:23;7997:32;7994:52;;;8042:1;8039;8032:12;7994:52;8075:9;8069:16;8108:18;8100:6;8097:30;8094:50;;;8140:1;8137;8130:12;8094:50;8163:22;;8216:4;8208:13;;8204:27;-1:-1:-1;8194:55:25;;8245:1;8242;8235:12;8194:55;8268:77;8337:7;8332:2;8326:9;8321:2;8317;8313:11;8268:77;:::i;8356:466::-;8531:3;8569:6;8563:13;8585:53;8631:6;8626:3;8619:4;8611:6;8607:17;8585:53;:::i;:::-;8701:13;;8660:16;;;;8723:57;8701:13;8660:16;8757:4;8745:17;;8723:57;:::i;:::-;8796:20;;8356:466;-1:-1:-1;;;;8356:466:25:o;9245:127::-;9306:10;9301:3;9297:20;9294:1;9287:31;9337:4;9334:1;9327:15;9361:4;9358:1;9351:15;9377:125;9417:4;9445:1;9442;9439:8;9436:34;;;9450:18;;:::i;:::-;-1:-1:-1;9487:9:25;;9377:125::o;9934:135::-;9973:3;9994:17;;;9991:43;;10014:18;;:::i;:::-;-1:-1:-1;10061:1:25;10050:13;;9934:135::o;10074:127::-;10135:10;10130:3;10126:20;10123:1;10116:31;10166:4;10163:1;10156:15;10190:4;10187:1;10180:15;10206:112;10238:1;10264;10254:35;;10269:18;;:::i;:::-;-1:-1:-1;10303:9:25;;10206:112::o;10323:128::-;10363:3;10394:1;10390:6;10387:1;10384:13;10381:39;;;10400:18;;:::i;:::-;-1:-1:-1;10436:9:25;;10323:128::o;10871:184::-;10941:6;10994:2;10982:9;10973:7;10969:23;10965:32;10962:52;;;11010:1;11007;11000:12;10962:52;-1:-1:-1;11033:16:25;;10871:184;-1:-1:-1;10871:184:25:o;11060:245::-;11127:6;11180:2;11168:9;11159:7;11155:23;11151:32;11148:52;;;11196:1;11193;11186:12;11148:52;11228:9;11222:16;11247:28;11269:5;11247:28;:::i;11310:120::-;11350:1;11376;11366:35;;11381:18;;:::i;:::-;-1:-1:-1;11415:9:25;;11310:120::o;11435:274::-;11564:3;11602:6;11596:13;11618:53;11664:6;11659:3;11652:4;11644:6;11640:17;11618:53;:::i;:::-;11687:16;;;;;11435:274;-1:-1:-1;;11435:274:25:o;12405:371::-;-1:-1:-1;;;;;;12590:33:25;;12578:46;;12647:13;;12560:3;;12669:61;12647:13;12719:1;12710:11;;12703:4;12691:17;;12669:61;:::i;:::-;12750:16;;;;12768:1;12746:24;;12405:371;-1:-1:-1;;;12405:371:25:o;13514:168::-;13554:7;13620:1;13616;13612:6;13608:14;13605:1;13602:21;13597:1;13590:9;13583:17;13579:45;13576:71;;;13627:18;;:::i;:::-;-1:-1:-1;13667:9:25;;13514:168::o;14309:127::-;14370:10;14365:3;14361:20;14358:1;14351:31;14401:4;14398:1;14391:15;14425:4;14422:1;14415:15;14441:336;14643:2;14625:21;;;14682:2;14662:18;;;14655:30;-1:-1:-1;;;14716:2:25;14701:18;;14694:42;14768:2;14753:18;;14441:336::o;15581:343::-;15783:2;15765:21;;;15822:2;15802:18;;;15795:30;-1:-1:-1;;;15856:2:25;15841:18;;15834:49;15915:2;15900:18;;15581:343::o;16864:438::-;16948:6;16956;16964;17017:2;17005:9;16996:7;16992:23;16988:32;16985:52;;;17033:1;17030;17023:12;16985:52;17065:9;17059:16;17084:28;17106:5;17084:28;:::i;:::-;17181:2;17166:18;;17160:25;17131:5;;-1:-1:-1;17194:32:25;17160:25;17194:32;:::i;:::-;17245:7;17235:17;;;17292:2;17281:9;17277:18;17271:25;17261:35;;16864:438;;;;;:::o;20920:395::-;21006:6;21014;21022;21075:2;21063:9;21054:7;21050:23;21046:32;21043:52;;;21091:1;21088;21081:12;21043:52;21123:9;21117:16;21173:4;21166:5;21162:16;21155:5;21152:27;21142:55;;21193:1;21190;21183:12;21142:55;21261:2;21246:18;;21240:25;21305:2;21290:18;;;21284:25;21216:5;;21240:25;;-1:-1:-1;21284:25:25;20920:395;-1:-1:-1;;;20920:395:25:o;21320:610::-;21566:13;;21509:3;;21540;;21619:4;21646:15;;;21509:3;21689:175;21703:6;21700:1;21697:13;21689:175;;;21766:13;;21752:28;;21802:14;;;;21839:15;;;;21725:1;21718:9;21689:175;;;-1:-1:-1;;21873:21:25;;;-1:-1:-1;21910:14:25;;;;;-1:-1:-1;;;21320:610:25:o;22124:556::-;22326:2;22308:21;;;22365:3;22345:18;;;22338:31;22405:34;22400:2;22385:18;;22378:62;22476:34;22471:2;22456:18;;22449:62;22548:34;22542:3;22527:19;;22520:63;-1:-1:-1;;;22614:3:25;22599:19;;22592:46;22670:3;22655:19;;22124:556::o;22685:345::-;-1:-1:-1;;;;;22905:32:25;;;;22887:51;;22969:2;22954:18;;22947:34;;;;23012:2;22997:18;;22990:34;22875:2;22860:18;;22685:345::o;23432:127::-;23493:10;23488:3;23484:20;23481:1;23474:31;23524:4;23521:1;23514:15;23548:4;23545:1;23538:15;23564:709;23629:5;23682:3;23675:4;23667:6;23663:17;23659:27;23649:55;;23700:1;23697;23690:12;23649:55;23729:6;23723:13;23755:4;23778:18;23774:2;23771:26;23768:52;;;23800:18;;:::i;:::-;23846:2;23843:1;23839:10;23869:28;23893:2;23889;23885:11;23869:28;:::i;:::-;23931:15;;;24001;;;23997:24;;;23962:12;;;;24033:15;;;24030:35;;;24061:1;24058;24051:12;24030:35;24097:2;24089:6;24085:15;24074:26;;24109:135;24125:6;24120:3;24117:15;24109:135;;;24191:10;;24179:23;;24142:12;;;;24222;;;;24109:135;;;24262:5;23564:709;-1:-1:-1;;;;;;;23564:709:25:o;24278:614::-;24407:6;24415;24468:2;24456:9;24447:7;24443:23;24439:32;24436:52;;;24484:1;24481;24474:12;24436:52;24517:9;24511:16;24546:18;24587:2;24579:6;24576:14;24573:34;;;24603:1;24600;24593:12;24573:34;24626:72;24690:7;24681:6;24670:9;24666:22;24626:72;:::i;:::-;24616:82;;24744:2;24733:9;24729:18;24723:25;24707:41;;24773:2;24763:8;24760:16;24757:36;;;24789:1;24786;24779:12;24757:36;;24812:74;24878:7;24867:8;24856:9;24852:24;24812:74;:::i;24897:442::-;-1:-1:-1;;;;;25144:32:25;;;;25126:51;;-1:-1:-1;;;;;;25213:33:25;;;;25208:2;25193:18;;25186:61;25278:2;25263:18;;25256:34;25321:2;25306:18;;25299:34;25113:3;25098:19;;24897:442::o",
=======
    "object": "0x60806040526000805460ff19166001179055670de0b6b3a764000060088190556000196009557f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9600a5562000058906203616e620004ec565b600b55600a600b546200006c91906200051a565b600c556040516001625e79b760e01b03198152600160048201526000805160206200b9668339815191529063ffa18649906024016020604051808303816000875af1158015620000c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e691906200053d565b600d80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b03198152600260048201526000805160206200b9668339815191529063ffa18649906024016020604051808303816000875af115801562000157573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017d91906200053d565b600e80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b03198152600360048201526000805160206200b9668339815191529063ffa18649906024016020604051808303816000875af1158015620001ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200021491906200053d565b600f80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b031981526004808201526000805160206200b9668339815191529063ffa18649906024016020604051808303816000875af115801562000284573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002aa91906200053d565b601080546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b03198152600560048201526000805160206200b9668339815191529063ffa18649906024016020604051808303816000875af11580156200031b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200034191906200053d565b601180546001600160a01b0319166001600160a01b03929092169190911790556040516012906200037290620004d0565b6060808252600390820152621b1bdb60ea1b608082015260a060208201819052600290820152611b1b60f21b60c082015260ff909116604082015260e001604051809103906000f080158015620003cd573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03928316908117909155601154601054604051918416931691906200040890620004de565b6001600160a01b0393841681529183166020830152909116604082015260a0606082018190526018908201527f31207275652041666672652c203735303138205061726973000000000000000060c082015260e06080820181905260079082015266062826e6a6062760cb1b61010082015261012001604051809103906000f0801580156200049b573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392909216919091179055348015620004c957600080fd5b506200056f565b610e1f806200815d83390190565b6129ea8062008f7c83390190565b60008160001904831182151516156200051557634e487b7160e01b600052601160045260246000fd5b500290565b6000826200053857634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156200055057600080fd5b81516001600160a01b03811681146200056857600080fd5b9392505050565b617bde806200057f6000396000f3fe60806040523480156200001157600080fd5b5060043610620001af5760003560e01c80636f59707511620000f0578063c88a5e6d11620000a3578063e77b6747116200007a578063e77b674714620003a5578063e9a79a7b14620003bc578063edd2545f14620003d3578063fa7626d414620003ea57600080fd5b8063c88a5e6d1462000360578063d06d82291462000377578063d82555f1146200038e57600080fd5b80636f59707514620002d257806397754ae914620002e95780639a8325a01462000300578063af9bbe5f1462000317578063b9c071b4146200032e578063ba414fa6146200034557600080fd5b80633a1143da116200016657806355dda6bb116200013d57806355dda6bb14620001be5780635a6c1eed146200027e5780636bce989b14620002a45780636e0b95d014620002bb57600080fd5b80633a1143da14620001be5780633a76846314620002505780633bf82db1146200026757600080fd5b80630a9254e414620001b4578063108554f214620001c0578063233240ee14620001d757806329a9e30014620001ee57806329ce9dde14620002055780632d6c17a31462000239575b600080fd5b620001be620003f8565b005b620001be620001d1366004620048a4565b6200045f565b620001be620001e8366004620048d3565b62000538565b620001be620001ff366004620048fa565b62000614565b6200021c6200021636600462004a13565b620006c6565b6040516001600160a01b0390911681526020015b60405180910390f35b620001be6200024a36600462004a93565b620007f6565b6200021c60008051602062007b6983398151915281565b620001be6200027836600462004aad565b62000836565b620002956200028f36600462004af3565b62000918565b60405190815260200162000230565b620001be620002b536600462004aad565b62000a51565b620001be620002cc36600462004a93565b62000a65565b620001be620002e3366004620048d3565b62000e1d565b620001be620002fa36600462004b2f565b62000ec7565b6200021c6200031136600462004b89565b62001108565b620001be6200032836600462004aad565b6200120a565b620001be6200033f36600462004a93565b620012b8565b6200034f620012d9565b604051901515815260200162000230565b620001be62000371366004620048a4565b6200140a565b620001be62000388366004620048fa565b62001440565b620001be6200039f36600462004aad565b620014f2565b620001be620003b636600462004bca565b620015e9565b620001be620003cd366004620048a4565b6200250a565b620001be620003e436600462004bca565b620025b0565b6000546200034f9060ff1681565b6040516372eb5f8160e11b81526362b97afa600482015260008051602062007b698339815191529063e5d6bf0290602401600060405180830381600087803b1580156200044457600080fd5b505af115801562000459573d6000803e3d6000fd5b50505050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062000495908590859060040162004c0c565b600060405180830381600087803b158015620004b057600080fd5b505af1158015620004c5573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038516600482015260008051602062007b6983398151915292506306447d5691506024015b600060405180830381600087803b1580156200051b57600080fd5b505af115801562000530573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062000572908490600160801b9060040162004c0c565b600060405180830381600087803b1580156200058d57600080fd5b505af1158015620005a2573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062007b69833981519152925063ca669fa791506024015b600060405180830381600087803b158015620005f857600080fd5b505af11580156200060d573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d906200064e908590600160801b9060040162004c0c565b600060405180830381600087803b1580156200066957600080fd5b505af11580156200067e573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380861660048301528416602482015260008051602062007b6983398151915292506347e50cce915060440162000500565b604051638d1cc92560e01b8152600090819060008051602062007b6983398151915290638d1cc92590620006ff90879060040162004c54565b6000604051808303816000875af11580156200071f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000749919081019062004cbf565b836040516020016200075d92919062004d0d565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216620007ef5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b60008051602062007b6983398151915263e5d6bf0262000817834262004d56565b6040518263ffffffff1660e01b8152600401620005dd91815260200190565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d906200086c908690859060040162004c0c565b600060405180830381600087803b1580156200088757600080fd5b505af11580156200089c573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380871660048301528516602482015260008051602062007b6983398151915292506345b5607891506044015b600060405180830381600087803b158015620008fa57600080fd5b505af11580156200090f573d6000803e3d6000fd5b50505050505050565b600081831115620009925760405162461bcd60e51b815260206004820152603a60248201527f5465737420626f756e642875696e743235362c75696e743235362c75696e743260448201527f3536293a204d6178206973206c657373207468616e206d696e2e0000000000006064820152608401620007e6565b6000620009a0848462004d56565b905080600003620009b457839150620009f4565b6000198103620009c757849150620009f4565b620009d28162004d70565b90506000620009e2828762004da2565b9050620009f0818662004db9565b9250505b60408051818152600c818301526b109bdd5b990814995cdd5b1d60a21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b62000a60838383600062000ec7565b505050565b60135460405163f8dcbddb60e01b8152600160048201526001600160a01b039091169063f8dcbddb90602401600060405180830381600087803b15801562000aac57600080fd5b505af115801562000ac1573d6000803e3d6000fd5b50506013546040516301eebadf60e71b815261271060048201526001600160a01b03909116925063f75d6f809150602401600060405180830381600087803b15801562000b0d57600080fd5b505af115801562000b22573d6000803e3d6000fd5b505060135460408051630cb2dac360e21b8152905160008051602062007b698339815191529450634c63e56293506001600160a01b03909216916332cb6b0c916004808201926020929091908290030181865afa15801562000b88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bae919062004dd4565b6040516001600160e01b031960e084901b1681529084106004820152602401600060405180830381600087803b15801562000be857600080fd5b505af115801562000bfd573d6000803e3d6000fd5b5050600d546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062007b6983398151915292506306447d569150602401600060405180830381600087803b15801562000c5657600080fd5b505af115801562000c6b573d6000803e3d6000fd5b5050601254600d546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062000ca89290911690859060040162004c0c565b600060405180830381600087803b15801562000cc357600080fd5b505af115801562000cd8573d6000803e3d6000fd5b505060125460135460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062000d159290911690859060040162004c0c565b6020604051808303816000875af115801562000d35573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d5b919062004dee565b50601354600d546001600160a01b039182169163cce7ec13911662000d82600a8562004e0e565b6040518363ffffffff1660e01b815260040162000da192919062004c0c565b600060405180830381600087803b15801562000dbc57600080fd5b505af115801562000dd1573d6000803e3d6000fd5b5050604080516390c5013b60e01b8152905160008051602062007b6983398151915293506390c5013b9250600480830192600092919082900301818387803b158015620005f857600080fd5b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062000e57908490600160801b9060040162004c0c565b600060405180830381600087803b15801562000e7257600080fd5b505af115801562000e87573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038416600482015260008051602062007b6983398151915292506306447d569150602401620005dd565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000f1d9162004e25565b6000604051808303816000865af19150503d806000811462000f5c576040519150601f19603f3d011682016040523d82523d6000602084013e62000f61565b606091505b5091505060008180602001905181019062000f7d919062004dd4565b905062000fef8462000fe88762000fbf6370a0823160e01b62000fa260018d62003302565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062003327565b8215620005305760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200103a919062004e25565b6000604051808303816000865af19150503d806000811462001079576040519150601f19603f3d011682016040523d82523d6000602084013e6200107e565b606091505b509150506000818060200190518101906200109a919062004dd4565b905082861015620010c557620010b1868462004d56565b620010bd908262004d56565b9050620010e0565b620010d1838762004d56565b620010dd908262004db9565b90505b620010fe8162000fe86318160ddd60e01b62000fa260018d62003302565b5050505050505050565b604051638d1cc92560e01b8152600090819060008051602062007b6983398151915290638d1cc925906200114190869060040162004c54565b6000604051808303816000875af115801562001161573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200118b919081019062004cbf565b90508051602082016000f091506001600160a01b038216620012045760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401620007e6565b50919050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062001240908690859060040162004c0c565b600060405180830381600087803b1580156200125b57600080fd5b505af115801562001270573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380871660048301528516602482015260008051602062007b6983398151915292506347e50cce9150604401620008df565b60008051602062007b6983398151915263e5d6bf0262000817834262004db9565b60008054610100900460ff1615620012fa5750600054610100900460ff1690565b600060008051602062007b698339815191523b15620014055760405160009060008051602062007b69833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620013679083906519985a5b195960d21b9060200162004c0c565b60408051601f198184030181529082905262001387929160200162004e43565b60408051601f1981840301815290829052620013a39162004e25565b6000604051808303816000865af19150503d8060008114620013e2576040519150601f19603f3d011682016040523d82523d6000602084013e620013e7565b606091505b509150508080602001905181019062001401919062004dee565b9150505b919050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062000500908590859060040162004c0c565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d906200147a908590600160801b9060040162004c0c565b600060405180830381600087803b1580156200149557600080fd5b505af1158015620014aa573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380861660048301528416602482015260008051602062007b6983398151915292506345b56078915060440162000500565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051620015be906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000a608162000fe88462000fbf6370a0823160e01b62000fa260018a62003302565b60135460405163f8dcbddb60e01b8152600160048201526001600160a01b039091169063f8dcbddb90602401600060405180830381600087803b1580156200163057600080fd5b505af115801562001645573d6000803e3d6000fd5b50506013546040516301eebadf60e71b815261271060048201526001600160a01b03909116925063f75d6f809150602401600060405180830381600087803b1580156200169157600080fd5b505af1158015620016a6573d6000803e3d6000fd5b50505050620016b54662003337565b604051632631f2b160e11b81526103e861ffff831610600482015260008051602062007b6983398151915290634c63e56290602401600060405180830381600087803b1580156200170557600080fd5b505af11580156200171a573d6000803e3d6000fd5b505060135460408051630cb2dac360e21b8152905160008051602062007b698339815191529450634c63e56293506103e8926001600160a01b0316916332cb6b0c9160048083019260209291908290030181865afa15801562001781573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017a7919062004dd4565b620017b3919062004e0e565b620017c090601e62004e76565b620017cd600a8762004e0e565b6040516001600160e01b031960e085901b16815291116004820152602401600060405180830381600087803b1580156200180657600080fd5b505af11580156200181b573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e88611600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b1580156200186b57600080fd5b505af115801562001880573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e88511600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b158015620018d057600080fd5b505af1158015620018e5573d6000803e3d6000fd5b505060095460008051602062007b698339815191529250634c63e562915062001912906103e89062004e0e565b6040516001600160e01b031960e084901b1681529085106004820152602401600060405180830381600087803b1580156200194c57600080fd5b505af115801562001961573d6000803e3d6000fd5b5050601254600f54604051600094506001600160a01b03928316935091169084906200198d906200484b565b6001600160a01b03938416815292909116602083015261ffff166040820152606001604051809103906000f080158015620019cc573d6000803e3d6000fd5b5060135460405163d48bfca760e01b81526001600160a01b03918216600482015291925082169063d48bfca790602401600060405180830381600087803b15801562001a1757600080fd5b505af115801562001a2c573d6000803e3d6000fd5b50506013546040516319f3736160e01b81526001600160a01b03918216600482015290841692506319f373619150602401602060405180830381865afa15801562001a7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001aa1919062004dee565b62001ab05762001ab062004e98565b600d546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062007b69833981519152906306447d5690602401600060405180830381600087803b15801562001b0557600080fd5b505af115801562001b1a573d6000803e3d6000fd5b505060125460095460405163095ea7b360e01b81526001600160a01b03909216935063095ea7b3925062001b549185919060040162004c0c565b6020604051808303816000875af115801562001b74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b9a919062004dee565b50601254600d546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262001bd392911690879060040162004c0c565b600060405180830381600087803b15801562001bee57600080fd5b505af115801562001c03573d6000803e3d6000fd5b5050601254600d546040516370a0823160e01b81526001600160a01b039182166004820152879450911691506370a0823190602401602060405180830381865afa15801562001c56573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c7c919062004dd4565b1462001c9c5760405162461bcd60e51b8152600401620007e69062004eae565b6013546040805163d2d8cb6760e01b815290516000926001600160a01b03169163d2d8cb679160048083019260209291908290030181865afa15801562001ce7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d0d919062004dd4565b62001d19908662004e0e565b601354601254604051636f4322f360e11b81526001600160a01b0392831660048201529082166024820152604481018390526064810187905291925083169063de8645e690608401600060405180830381600087803b15801562001d7c57600080fd5b505af115801562001d91573d6000803e3d6000fd5b5050601254600d546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562001de2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e08919062004dd4565b1562001e4c5760405162461bcd60e51b8152602060048201526012602482015271213abc9027b93232b910333a1032b93937b960711b6044820152606401620007e6565b6012546040516370a0823160e01b81526001600160a01b038481166004830152869216906370a0823190602401602060405180830381865afa15801562001e97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ebd919062004dd4565b1462001edd5760405162461bcd60e51b8152600401620007e69062004ed4565b604080516390c5013b60e01b8152905160008051602062007b69833981519152916390c5013b91600480830192600092919082900301818387803b15801562001f2557600080fd5b505af115801562001f3a573d6000803e3d6000fd5b5050600e546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062007b6983398151915292506306447d569150602401600060405180830381600087803b15801562001f9357600080fd5b505af115801562001fa8573d6000803e3d6000fd5b5050601254600e546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062001fe59290911690899060040162004c0c565b600060405180830381600087803b1580156200200057600080fd5b505af115801562002015573d6000803e3d6000fd5b505060125460135460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620020529290911690899060040162004c0c565b6020604051808303816000875af115801562002072573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002098919062004dee565b50601354600e5460405163cce7ec1360e01b81526001600160a01b039283169263cce7ec1392620020d192911690899060040162004c0c565b600060405180830381600087803b158015620020ec57600080fd5b505af115801562002101573d6000803e3d6000fd5b5050601354600e546040516370a0823160e01b81526001600160a01b039182166004820152859450911691506370a0823190602401602060405180830381865afa15801562002154573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200217a919062004dd4565b146200219a5760405162461bcd60e51b8152600401620007e69062004eae565b601354600e5460095460009283928392620021c9926001600160a01b0390811692169088908890600262003382565b9250925092506000806000806000896001600160a01b031663d59a83bb601360009054906101000a90046001600160a01b031660006040518363ffffffff1660e01b81526004016200221d92919062004c0c565b61014060405180830381865afa1580156200223c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002262919062004f1a565b509850985098509850505096505050888114620022af5760405162461bcd60e51b815260206004820152600a60248201526920b6b7bab73a1032b93960b11b6044820152606401620007e6565b67ffffffffffffffff851615620022f55760405162461bcd60e51b815260206004820152600960248201526824b73232bc1032b93960b91b6044820152606401620007e6565b600d546200230c906001600160a01b031662003649565b620023178462003649565b600d546001600160a01b03858116911614620023665760405162461bcd60e51b815260206004820152600d60248201526c42757965722070726f626c656d60981b6044820152606401620007e6565b8b8214620023a75760405162461bcd60e51b815260206004820152600d60248201526c42757965722070726f626c656d60981b6044820152606401620007e6565b61ffff8b161562002410576103e8620023c561ffff8d168e62004e76565b620023d1919062004e0e565b8314620024105760405162461bcd60e51b815260206004820152600c60248201526b6665652070726f626c656d7360a01b6044820152606401620007e6565b60135460095460405163d28c3a9b60e01b81526001600160a01b03928316600482015260006024820152604481019190915260ff8a1660648201526084810189905260a48101889052908b169063d28c3a9b9060c401600060405180830381600087803b1580156200248157600080fd5b505af115801562002496573d6000803e3d6000fd5b5050604080516390c5013b60e01b8152905160008051602062007b6983398151915293506390c5013b9250600480830192600092919082900301818387803b158015620024e257600080fd5b505af1158015620024f7573d6000803e3d6000fd5b5050505050505050505050505050505050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062002540908590859060040162004c0c565b600060405180830381600087803b1580156200255b57600080fd5b505af115801562002570573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062007b69833981519152925063ca669fa7915060240162000500565b60135460405163f8dcbddb60e01b8152600160048201526001600160a01b039091169063f8dcbddb90602401600060405180830381600087803b158015620025f757600080fd5b505af11580156200260c573d6000803e3d6000fd5b50506013546040516301eebadf60e71b815261271060048201526001600160a01b03909116925063f75d6f809150602401600060405180830381600087803b1580156200265857600080fd5b505af11580156200266d573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e861ffff851610600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b158015620026c157600080fd5b505af1158015620026d6573d6000803e3d6000fd5b505060135460408051630cb2dac360e21b8152905160008051602062007b698339815191529450634c63e56293506064926001600160a01b0316916332cb6b0c9160048083019260209291908290030181865afa1580156200273c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002762919062004dd4565b6200276e919062004e0e565b6200277b90601e62004e76565b62002788600a8762004e0e565b6040516001600160e01b031960e085901b16815291116004820152602401600060405180830381600087803b158015620027c157600080fd5b505af1158015620027d6573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e88611600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b1580156200282657600080fd5b505af11580156200283b573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e88511600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b1580156200288b57600080fd5b505af1158015620028a0573d6000803e3d6000fd5b505060095460008051602062007b698339815191529250634c63e5629150620028cd906103e89062004e0e565b6040516001600160e01b031960e084901b1681529085106004820152602401600060405180830381600087803b1580156200290757600080fd5b505af11580156200291c573d6000803e3d6000fd5b5050601254600f54604051600094506001600160a01b039283169350911690849062002948906200484b565b6001600160a01b03938416815292909116602083015261ffff166040820152606001604051809103906000f08015801562002987573d6000803e3d6000fd5b5060135460405163d48bfca760e01b81526001600160a01b03918216600482015291925082169063d48bfca790602401600060405180830381600087803b158015620029d257600080fd5b505af1158015620029e7573d6000803e3d6000fd5b50506013546040516319f3736160e01b81526001600160a01b03918216600482015290841692506319f373619150602401602060405180830381865afa15801562002a36573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a5c919062004dee565b62002a6b5762002a6b62004e98565b6013546040805163d2d8cb6760e01b815290516000926001600160a01b03169163d2d8cb679160048083019260209291908290030181865afa15801562002ab6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002adc919062004dd4565b62002ae8908662004e0e565b600d546040516303223eab60e11b81526001600160a01b03909116600482015290915060008051602062007b69833981519152906306447d5690602401600060405180830381600087803b15801562002b4057600080fd5b505af115801562002b55573d6000803e3d6000fd5b505060125460135460095460405163095ea7b360e01b81526001600160a01b03938416955063095ea7b3945062002b93939092169160040162004c0c565b6020604051808303816000875af115801562002bb3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bd9919062004dee565b50601254600d546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262002c1292911690899060040162004c0c565b600060405180830381600087803b15801562002c2d57600080fd5b505af115801562002c42573d6000803e3d6000fd5b5050601354600d5460405163cce7ec1360e01b81526001600160a01b03928316945063cce7ec13935062002c7f9290911690899060040162004c0c565b600060405180830381600087803b15801562002c9a57600080fd5b505af115801562002caf573d6000803e3d6000fd5b5050601354600d546040516370a0823160e01b81526001600160a01b039182166004820152859450911691506370a0823190602401602060405180830381865afa15801562002d02573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d28919062004dd4565b1462002d485760405162461bcd60e51b8152600401620007e69062004eae565b601354600d546009546000928392839262002d77926001600160a01b0390811692169088908890600162003382565b601354601254600954604051636bdf6b3960e01b81526001600160a01b0393841660048201529183166024830152604482018a9052606482018d9052608482015260ff851660a482015260c4810184905260e481018390529396509194509250861690636bdf6b399061010401600060405180830381600087803b15801562002dff57600080fd5b505af115801562002e14573d6000803e3d6000fd5b5050601354600d546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562002e65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e8b919062004dd4565b1562002eab5760405162461bcd60e51b8152600401620007e69062004ed4565b6013546040516370a0823160e01b81526001600160a01b038781166004830152869216906370a0823190602401602060405180830381865afa15801562002ef6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f1c919062004dd4565b1462002f3c5760405162461bcd60e51b8152600401620007e69062004ed4565b604080516390c5013b60e01b8152905160008051602062007b69833981519152916390c5013b91600480830192600092919082900301818387803b15801562002f8457600080fd5b505af115801562002f99573d6000803e3d6000fd5b5050600e546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062007b6983398151915292506306447d569150602401600060405180830381600087803b15801562002ff257600080fd5b505af115801562003007573d6000803e3d6000fd5b5050601254600e546040516340c10f1960e01b81526001600160a01b0392831694506340c10f1993506200304492909116908b9060040162004c0c565b600060405180830381600087803b1580156200305f57600080fd5b505af115801562003074573d6000803e3d6000fd5b505060125460095460405163095ea7b360e01b81526001600160a01b03909216935063095ea7b39250620030ae9189919060040162004c0c565b6020604051808303816000875af1158015620030ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030f4919062004dee565b50601354604051639a83aa8b60e01b81526001600160a01b0391821660048201526000602482015290861690639a83aa8b90604401600060405180830381600087803b1580156200314457600080fd5b505af115801562003159573d6000803e3d6000fd5b5050604080516390c5013b60e01b8152905160008051602062007b6983398151915293506390c5013b9250600480830192600092919082900301818387803b158015620031a557600080fd5b505af1158015620031ba573d6000803e3d6000fd5b5050601254604051631ac3ddeb60e01b81526001600160a01b0391821660048201529088169250631ac3ddeb9150602401600060405180830381600087803b1580156200320657600080fd5b505af11580156200321b573d6000803e3d6000fd5b50505050620032344667ffffffffffffffff1662003337565b601254600f546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562003281573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620032a7919062004dd4565b6103e8620032ba61ffff89168a62004e76565b620032c6919062004e0e565b14620010fe5760405162461bcd60e51b815260206004820152600a60248201526946656550726f626c656d60b01b6044820152606401620007e6565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62003333828262003693565b5050565b6200337f816040516024016200334f91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052620039fc565b50565b600080600080600a548989898d6001600160a01b0316637ecebe008e6040518263ffffffff1660e01b8152600401620033ca91906001600160a01b0391909116815260200190565b602060405180830381865afa158015620033e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200340e919062004dd4565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8b6001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620034c0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620034ea919081019062004cbf565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201526001600160a01b038c1660a082015260c0016040516020818303038152906040528051906020012090506000620035b6828460405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6040516338d07aa960e21b8152600481018990526024810182905290915060008051602062007b698339815191529063e341eaa4906044016060604051808303816000875af11580156200360e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003634919062004fde565b95509550955050505096509650969350505050565b6040516001600160a01b03821660248201526200337f9060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052620039fc565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200370657602002820191906000526020600020905b815481526020019060010190808311620036f1575b505050505090506000836200371b8362003a1d565b6040516020016200372e92919062004e43565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620037829186918891016200501d565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620037bd57620037bb8762003aca565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620037fe9187918991016200501d565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162003845919062004e25565b600060405180830381855afa9150503d806000811462003882576040519150601f19603f3d011682016040523d82523d6000602084013e62003887565b606091505b509150620038a49050816200389e88602062004e76565b620047c1565b604051630667f9d760e41b81529092506000915060008051602062007b698339815191529063667f9d7090620038e1908b90879060040162004c0c565b6020604051808303816000875af115801562003901573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003927919062004dd4565b90508082146200394b5760405162461bcd60e51b8152600401620007e69062005059565b6040516370ca10bb60e01b815260008051602062007b69833981519152906370ca10bb9062003983908b9087908e90600401620050f4565b600060405180830381600087803b1580156200399e57600080fd5b505af1158015620039b3573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620039e860028b01600062004859565b896004016000905550505050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606060008251602062003a31919062004e76565b67ffffffffffffffff81111562003a4c5762003a4c62004938565b6040519080825280601f01601f19166020018201604052801562003a77576020820181803683370190505b50905060005b8351811015620007ef57600084828151811062003a9e5762003a9e62005115565b60200260200101519050808260200260200184015250808062003ac19062004d70565b91505062003a7d565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562003b3c57602002820191906000526020600020905b81548152602001906001019080831162003b27575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062003b88925085918791016200501d565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562003c27576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162003bf79185918791016200501d565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362003c358362003a1d565b60405160200162003c4892919062004e43565b604051602081830303815290604052905060008051602062007b8983398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003ca757600080fd5b505af115801562003cbc573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162003cdd919062004e25565b600060405180830381855afa9150503d806000811462003d1a576040519150601f19603f3d011682016040523d82523d6000602084013e62003d1f565b606091505b50915062003d369050816200389e87602062004e76565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062007b69833981519152906365bc9481906024016000604051808303816000875af115801562003d93573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003dbd9190810190620051b4565b50905080516001036200408657600060008051602062007b8983398151915260001c6001600160a01b031663667f9d70898460008151811062003e045762003e0462005115565b60200260200101516040518363ffffffff1660e01b815260040162003e2b92919062004c0c565b6020604051808303816000875af115801562003e4b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e71919062004dd4565b90508062003ed5577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062003eb15762003eb162005115565b602002602001015160001c60405162003ecc92919062004c0c565b60405180910390a15b80831462003ef75760405162461bcd60e51b8152600401620007e69062005059565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162003f2f9291906200501d565b604051602081830303815290604052805190602001208560008151811062003f5b5762003f5b62005115565b602002602001015160001c60405162003f78949392919062005215565b60405180910390a18160008151811062003f965762003f9662005115565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262003fe1918a918c91016200501d565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916200404b918a918c91016200501d565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062004644565b600181511115620045d35760005b8151811015620045cc57600060008051602062007b8983398151915260001c6001600160a01b031663667f9d708a858581518110620040d757620040d762005115565b60200260200101516040518363ffffffff1660e01b8152600401620040fe92919062004c0c565b6020604051808303816000875af11580156200411e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004144919062004dd4565b905080620041a7577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062004183576200418362005115565b602002602001015160001c6040516200419e92919062004c0c565b60405180910390a15b60008051602062007b8983398151915260001c6001600160a01b03166370ca10bb8a858581518110620041de57620041de62005115565b602002602001015161133760f01b6040518463ffffffff1660e01b81526004016200420c93929190620050f4565b600060405180830381600087803b1580156200422757600080fd5b505af11580156200423c573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516200425e919062004e25565b600060405180830381855afa9150503d80600081146200429b576040519150601f19603f3d011682016040523d82523d6000602084013e620042a0565b606091505b509092509050620042b8816200389e8b602062004e76565b9550818015620042cc575061133760f01b86145b156200451f577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200430a9291906200501d565b6040516020818303038152906040528051906020012088888151811062004335576200433562005115565b602002602001015160001c60405162004352949392919062005215565b60405180910390a18484815181106200436f576200436f62005115565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092620043ba918d918f91016200501d565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620044479291906200501d565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062007b8983398151915260001c6001600160a01b03166370ca10bb8c878781518110620044b957620044b962005115565b6020026020010151866040518463ffffffff1660e01b8152600401620044e293929190620050f4565b600060405180830381600087803b158015620044fd57600080fd5b505af115801562004512573d6000803e3d6000fd5b50505050505050620045cc565b60008051602062007b8983398151915260001c6001600160a01b03166370ca10bb8c87878151811062004556576200455662005115565b6020026020010151866040518463ffffffff1660e01b81526004016200457f93929190620050f4565b600060405180830381600087803b1580156200459a57600080fd5b505af1158015620045af573d6000803e3d6000fd5b505050505050508080620045c39062004d70565b91505062004094565b5062004644565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401620007e6565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620046889188918a91016200501d565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620047175760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401620007e6565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200474860028a01600062004859565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200478e9188918a91016200501d565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111620047d8578451620047db565b60205b905060005b818110156200484157620047f681600862004e76565b8662004803838862004db9565b8151811062004816576200481662005115565b01602001516001600160f81b031916901c929092179180620048388162004d70565b915050620047e0565b5090949350505050565b612923806200524683390190565b50805460008255906000526020600020908101906200337f91905b808211156200488a576000815560010162004874565b5090565b6001600160a01b03811681146200337f57600080fd5b60008060408385031215620048b857600080fd5b8235620048c5816200488e565b946020939093013593505050565b600060208284031215620048e657600080fd5b8135620048f3816200488e565b9392505050565b600080604083850312156200490e57600080fd5b82356200491b816200488e565b915060208301356200492d816200488e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200497a576200497a62004938565b604052919050565b600067ffffffffffffffff8211156200499f576200499f62004938565b50601f01601f191660200190565b6000620049c4620049be8462004982565b6200494e565b9050828152838383011115620049d957600080fd5b828260208301376000602084830101529392505050565b600082601f83011262004a0257600080fd5b620048f383833560208501620049ad565b6000806040838503121562004a2757600080fd5b823567ffffffffffffffff8082111562004a4057600080fd5b62004a4e86838701620049f0565b9350602085013591508082111562004a6557600080fd5b508301601f8101851362004a7857600080fd5b62004a8985823560208401620049ad565b9150509250929050565b60006020828403121562004aa657600080fd5b5035919050565b60008060006060848603121562004ac357600080fd5b833562004ad0816200488e565b9250602084013562004ae2816200488e565b929592945050506040919091013590565b60008060006060848603121562004b0957600080fd5b505081359360208301359350604090920135919050565b80151581146200337f57600080fd5b6000806000806080858703121562004b4657600080fd5b843562004b53816200488e565b9350602085013562004b65816200488e565b925060408501359150606085013562004b7e8162004b20565b939692955090935050565b60006020828403121562004b9c57600080fd5b813567ffffffffffffffff81111562004bb457600080fd5b62004bc284828501620049f0565b949350505050565b60008060006060848603121562004be057600080fd5b8335925060208401359150604084013561ffff8116811462004c0157600080fd5b809150509250925092565b6001600160a01b03929092168252602082015260400190565b60005b8381101562004c4257818101518382015260200162004c28565b83811115620004595750506000910152565b602081526000825180602084015262004c7581604085016020870162004c25565b601f01601f19169190910160400192915050565b600062004c9a620049be8462004982565b905082815283838301111562004caf57600080fd5b620048f383602083018462004c25565b60006020828403121562004cd257600080fd5b815167ffffffffffffffff81111562004cea57600080fd5b8201601f8101841362004cfc57600080fd5b62004bc28482516020840162004c89565b6000835162004d2181846020880162004c25565b83519083019062004d3781836020880162004c25565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562004d6b5762004d6b62004d40565b500390565b60006001820162004d855762004d8562004d40565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008262004db45762004db462004d8c565b500690565b6000821982111562004dcf5762004dcf62004d40565b500190565b60006020828403121562004de757600080fd5b5051919050565b60006020828403121562004e0157600080fd5b8151620048f38162004b20565b60008262004e205762004e2062004d8c565b500490565b6000825162004e3981846020870162004c25565b9190910192915050565b6001600160e01b031983168152815160009062004e6881600485016020870162004c25565b919091016004019392505050565b600081600019048311821515161562004e935762004e9362004d40565b500290565b634e487b7160e01b600052600160045260246000fd5b6020808252600c908201526b213abc90333a1032b93937b960a11b604082015260600190565b60208082526013908201527229b2b6361027b93232b910333a1032b93937b960691b604082015260600190565b805167ffffffffffffffff811681146200140557600080fd5b6000806000806000806000806000806101408b8d03121562004f3b57600080fd5b8a5162004f488162004b20565b60208c0151909a5062004f5b8162004b20565b985062004f6b60408c0162004f01565b975062004f7b60608c0162004f01565b965060808b015162004f8d816200488e565b60a08c015190965062004fa0816200488e565b8095505060c08b0151935060e08b015192506101008b015191506101208b015162004fcb816200488e565b809150509295989b9194979a5092959850565b60008060006060848603121562004ff457600080fd5b835160ff811681146200500657600080fd5b602085015160409095015190969495509392505050565b825160009082906020808701845b8381101562005049578151855293820193908201906001016200502b565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600082601f8301126200513d57600080fd5b8151602067ffffffffffffffff8211156200515c576200515c62004938565b8160051b6200516d8282016200494e565b92835284810182019282810190878511156200518857600080fd5b83870192505b84831015620051a9578251825291830191908301906200518e565b979650505050505050565b60008060408385031215620051c857600080fd5b825167ffffffffffffffff80821115620051e157600080fd5b620051ef868387016200512b565b935060208501519150808211156200520657600080fd5b5062004a89858286016200512b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b506040516200292338038062002923833981016040819052620000349162000186565b6200003f3362000119565b600180556103e861ffff821611156200005757600080fd5b6006805460018181019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b039586166001600160a01b0319918216811790925560078054959096169416939093179093556040805160608101825284815261ffff928316602082810191825260008385018181529681526004909152929092209051815492519093166101000262ffff00199315159390931662ffffff19909216919091179190911781559051910155620001da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018157600080fd5b919050565b6000806000606084860312156200019c57600080fd5b620001a78462000169565b9250620001b76020850162000169565b9150604084015161ffff81168114620001cf57600080fd5b809150509250925092565b61273980620001ea6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063d48bfca711610071578063d48bfca7146102f8578063d59a83bb1461030b578063de8645e61461031e578063f110fb5614610331578063f2fde38b1461034457600080fd5b80638da5cb5b146102875780639a83aa8b146102ac5780639ead7222146102bf578063d28c3a9b146102d2578063d38d0b45146102e557600080fd5b80634303d9d9116100f45780634303d9d9146101895780636afb2a55146102035780636bdf6b3914610259578063715018a61461026c5780638705fcd41461027457600080fd5b806308b4e2a61461012657806319f373611461013b5780631ac3ddeb1461016357806330f738be14610176575b600080fd5b6101396101343660046121b0565b610357565b005b61014e6101493660046121f7565b610904565b60405190151581526020015b60405180910390f35b6101396101713660046121f7565b6109c3565b610139610184366004612226565b610adc565b61019c61019736600461225d565b610b5b565b604080519a15158b5298151560208b01526001600160401b03978816988a01989098529490951660608801526001600160a01b03928316608088015290821660a087015260c086015260e0850192909252610100840152166101208201526101400161015a565b6102396102113660046121f7565b6004602052600090815260409020805460019091015460ff821691610100900461ffff169083565b60408051931515845261ffff90921660208401529082015260600161015a565b61013961026736600461229a565b610be8565b61013961108c565b6101396102823660046121f7565b6110a0565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161015a565b6101396102ba366004612312565b6110ca565b6102946102cd366004612347565b61157a565b6101396102e0366004612360565b6115a4565b6101396102f33660046123c1565b6119c2565b6101396103063660046121f7565b611aa2565b61019c61031936600461225d565b611b48565b61013961032c3660046123ff565b611b64565b61029461033f366004612347565b612008565b6101396103523660046121f7565b612018565b6002600154036103825760405162461bcd60e51b815260040161037990612445565b60405180910390fd5b600260015561039083610904565b6103ac5760405162461bcd60e51b81526004016103799061247c565b6000826103f9576001600160a01b038416600090815260036020526040902080546001600160401b0384169081106103e6576103e66124a4565b906000526020600020906007020161043b565b6001600160a01b038416600090815260026020526040902080546001600160401b03841690811061042c5761042c6124a4565b90600052602060002090600702015b6040805161014081018252825460ff80821615158352610100808304909116151560208401526001600160401b03620100008304811694840194909452600160501b909104909216606082015260018301546001600160a01b03908116608083018190526002850154821660a0840152600385015460c0840152600485015460e08401526005850154938301939093526006909301549092166101208301529091503314806104f6575060a08101516001600160a01b031633145b6105385760405162461bcd60e51b815260206004820152601360248201527210d85b98d95b081d5b985d5d1a1bdc9a5e9959606a1b6044820152606401610379565b60008152821561071d5761010081015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b0385169063a9059cbb906044016020604051808303816000875af1158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906124ba565b506001600160a01b038416600090815260026020526040902080548291906001600160401b0385169081106105f1576105f16124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517f9b3589e58cfaae811e95372b148d4048358e808d0c0af452b23f9d4620f8a23e906107109083906124d7565b60405180910390a16108fa565b61012081015160e082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906124ba565b506001600160a01b038416600090815260036020526040902080548291906001600160401b0385169081106107d2576107d26124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517fb95b9053e8e235c5fb04aa72707d183a8eba7f5f7847a660f916fdf159927cc8906108f19083906124d7565b60405180910390a15b5050600180555050565b600080600580548060200260200160405190810160405280929190818152602001828054801561095d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161093f575b505083519394506000925050505b818110156109b857846001600160a01b031683828151811061098f5761098f6124a4565b60200260200101516001600160a01b0316036109b057506001949350505050565b60010161096b565b506000949350505050565b6109cb612091565b6001600160a01b038181166000818152600460208181526040928390208351606081018552815460ff811615158252610100900461ffff169281019290925260010154818401819052600754935163a9059cbb60e01b81529390951691830191909152602482019390935263a9059cbb906044016020604051808303816000875af1158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906124ba565b50600060408083018281526001600160a01b03909416825260046020908152912082518154929093015161ffff166101000262ffff00199315159390931662ffffff19909216919091179190911781559051600190910155565b610ae4612091565b6101f48261ffff1610610b285760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40a8dede40d0d2ced60a31b6044820152606401610379565b6001600160a01b03166000908152600460205260409020805461ffff9092166101000262ffff0019909216919091179055565b60026020528160005260406000208181548110610b7757600080fd5b6000918252602090912060079091020180546001820154600283015460038401546004850154600586015460069096015460ff808716995061010087041697506001600160401b03620100008704811697600160501b90970416956001600160a01b0395861695948516949091168a565b600260015403610c0a5760405162461bcd60e51b815260040161037990612445565b60026001556103e88511610c545760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b610c5d88610904565b610ca05760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0387166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252610d325760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6001600160a01b0389166000818152600260205260409081902054905163cfac414b60e01b815290919063cfac414b90610d7c90339030908d908c908c908c908c906004016125a5565b600060405180830381600087803b158015610d9657600080fd5b505af1158015610daa573d6000803e3d6000fd5b505050506000610dbe8884602001516120eb565b9050600260008c6001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507f3b24c5db8e1f8aaec17cd20d4e148ad8ee3909fd0c9a1f6a86b1e900a49ef6b7604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b031681525060405161107391906124d7565b60405180910390a1505060018055505050505050505050565b611094612091565b61109e6000612121565b565b6110a8612091565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036110ec5760405162461bcd60e51b815260040161037990612445565b60026001556110fa82610904565b6111165760405162461bcd60e51b81526004016103799061247c565b6001600160a01b038216600090815260026020526040812080546001600160401b038416908110611149576111496124a4565b600091825260209182902060408051610140810182526007909302909101805460ff80821615158086526101008084049092161515968601969096526001600160401b03620100008304811694860194909452600160501b909104909216606084015260018101546001600160a01b0390811660808501526002820154811660a0850152600382015460c0850152600482015460e0850152600582015492840192909252600601541661012082015291506112345760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b3360a08201819052600160208301526000825261012082015160e08301516040516323b872dd60e01b8152600481019390935230602484015260448301526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c891906124ba565b508061012001516001600160a01b031663a9059cbb82608001518360c001518460e001516112f691906125fc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136591906124ba565b5060c08101516101208201516001600160a01b03166000908152600460205260408120600101805490919061139b908490612613565b90915550506001600160a01b038316600090815260026020526040902080548291906001600160401b0385169081106113d6576113d66124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e086015160048085019190915585870151600585015561012090960151600690930180549091169282169290921790915591840151905163a9059cbb60e01b81523393810193909352602483015284169063a9059cbb906044016020604051808303816000875af1158015611515573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153991906124ba565b507fb6432e18a59c31eafbe7fea705a495b38ea4992c69bdc678262b38ddc31c2d218160405161156991906124d7565b60405180910390a150506001805550565b6005818154811061158a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600154036115c65760405162461bcd60e51b815260040161037990612445565b60026001556115d486610904565b6115f05760405162461bcd60e51b81526004016103799061247c565b6001600160a01b038616600090815260036020526040812080546001600160401b038816908110611623576116236124a4565b60009182526020909120600790910201805490915060ff166116755760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b60028101546001600160a01b03166116bf5760405162461bcd60e51b815260206004820152600d60248201526c57726f6e67206164647265737360981b6044820152606401610379565b6001810180546001600160a01b03191633908117909155815461ffff19166101001782556002820154600583015460405163cfac414b60e01b81526001600160a01b038b81169463cfac414b946117259491939216918b908b908b908b906004016125a5565b600060405180830381600087803b15801561173f57600080fd5b505af1158015611753573d6000803e3d6000fd5b5050506006820154600383015460048401546001600160a01b03909216925063a9059cbb913391611783916125fc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156117ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f291906124ba565b50600381015460068201546001600160a01b031660009081526004602052604081206001018054909190611827908490612613565b90915550506001600160a01b038716600090815260036020526040902080548291906001600160401b038916908110611862576118626124a4565b600091825260209091208254600790920201805460ff928316151560ff19821681178355845461010090819004909416151590930261ff001990931661ffff19909116179190911780825582546001600160401b036201000091829004811690910269ffffffffffffffff0000198316811784558454600160501b9081900490921690910267ffffffffffffffff60501b1990911662010000600160901b03199092169190911717815560018083015490820180546001600160a01b03199081166001600160a01b03938416179091556002808501549084018054831691841691909117905560038085015490840155600480850154908401556005808501549084015560069384015493909201805490921692169190911790556040517f127e23dc5aa74346dfbee84f2e6e25abf5f06e34ad3beea66e7363e53ff51359906119ad90839061262b565b60405180910390a15050600180555050505050565b6119ca612091565b6001600160a01b03831660009081526004602052604090205460ff16611a3657600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0385161790555b60408051606081018252600180825261ffff94851660208084019182528385019586526001600160a01b0397909716600090815260049097529290952090518154925162ffffff1990931690151562ffff00191617610100929094169190910292909217825551910155565b611aaa612091565b611ab381610904565b15611af65760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610379565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b60036020528160005260406000208181548110610b7757600080fd5b600260015403611b865760405162461bcd60e51b815260040161037990612445565b60026001556103e88111611bd05760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b611bd984610904565b611c1c5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0383166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252611cae5760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015611d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2591906124ba565b506001600160a01b038516600090815260036020908152604082205490830151909190611d539085906120eb565b905060036000886001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507fa23adb6634e58bf746cbb87e2f83ff7c3ba3201ab3f5f6cd04188a2acda98450604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b03168152506040516119ad91906124d7565b6006818154811061158a57600080fd5b612020612091565b6001600160a01b0381166120855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610379565b61208e81612121565b50565b6000546001600160a01b0316331461109e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b6000808261ffff16116120ff57600061211a565b6103e861211061ffff8416856126c2565b61211a91906126e1565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461208e57600080fd5b801515811461208e57600080fd5b80356001600160401b03811681146121ab57600080fd5b919050565b6000806000606084860312156121c557600080fd5b83356121d081612171565b925060208401356121e081612186565b91506121ee60408501612194565b90509250925092565b60006020828403121561220957600080fd5b813561211a81612171565b803561ffff811681146121ab57600080fd5b6000806040838503121561223957600080fd5b61224283612214565b9150602083013561225281612171565b809150509250929050565b6000806040838503121561227057600080fd5b823561227b81612171565b946020939093013593505050565b803560ff811681146121ab57600080fd5b600080600080600080600080610100898b0312156122b757600080fd5b88356122c281612171565b975060208901356122d281612171565b96506040890135955060608901359450608089013593506122f560a08a01612289565b925060c0890135915060e089013590509295985092959890939650565b6000806040838503121561232557600080fd5b823561233081612171565b915061233e60208401612194565b90509250929050565b60006020828403121561235957600080fd5b5035919050565b60008060008060008060c0878903121561237957600080fd5b863561238481612171565b955061239260208801612194565b9450604087013593506123a760608801612289565b92506080870135915060a087013590509295509295509295565b6000806000606084860312156123d657600080fd5b83356123e181612171565b92506123ef60208501612214565b9150604084013590509250925092565b6000806000806080858703121561241557600080fd5b843561242081612171565b9350602085013561243081612171565b93969395505050506040820135916060013590565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d151bdad95b88155b9b1a5cdd195960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124cc57600080fd5b815161211a81612186565b815115158152610140810160208301516124f5602084018215159052565b50604083015161251060408401826001600160401b03169052565b50606083015161252b60608401826001600160401b03169052565b50608083015161254660808401826001600160a01b03169052565b5060a083015161256160a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e08301526101008084015181840152506101208084015161259d828501826001600160a01b03169052565b505092915050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b634e487b7160e01b600052601160045260246000fd5b60008282101561260e5761260e6125e6565b500390565b60008219821115612626576126266125e6565b500190565b815460ff81161515825261014082019061264f6020840160ff8360081c1615159052565b6001600160401b03601082901c8116604085015260509190911c16606083015260018301546001600160a01b0390811660808401526002840154811660a0840152600384015460c0840152600484015460e084015260058401546101008401526006909301549092166101209091015290565b60008160001904831182151516156126dc576126dc6125e6565b500290565b6000826126fe57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122010a13cf6261ffa87954c3a4d8337a1fba370e1c791a42665350c25f27dadde7364736f6c634300080e00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220fdf0786e950de76106aa83ff5bb7b0a57d86aff15e7aa50627f913d7c15c50b764736f6c634300080e003360a06040523480156200001157600080fd5b5060405162000e1f38038062000e1f8339810160408190526200003491620001ef565b82828282828160039080519060200190620000519291906200007c565b508051620000679060049060208401906200007c565b50505060ff1660805250620002b09350505050565b8280546200008a9062000274565b90600052602060002090601f016020900481019282620000ae5760008555620000f9565b82601f10620000c957805160ff1916838001178555620000f9565b82800160010185558215620000f9579182015b82811115620000f9578251825591602001919060010190620000dc565b50620001079291506200010b565b5090565b5b808211156200010757600081556001016200010c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014a57600080fd5b81516001600160401b038082111562000167576200016762000122565b604051601f8301601f19908116603f0116810190828211818310171562000192576200019262000122565b81604052838152602092508683858801011115620001af57600080fd5b600091505b83821015620001d35785820183015181830184015290820190620001b4565b83821115620001e55760008385830101525b9695505050505050565b6000806000606084860312156200020557600080fd5b83516001600160401b03808211156200021d57600080fd5b6200022b8783880162000138565b945060208601519150808211156200024257600080fd5b50620002518682870162000138565b925050604084015160ff811681146200026957600080fd5b809150509250925092565b600181811c908216806200028957607f821691505b602082108103620002aa57634e487b7160e01b600052602260045260246000fd5b50919050565b608051610b53620002cc60003960006101410152610b536000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146101c4578063a457c2d7146101d7578063a9059cbb146101ea578063dd62ed3e146101fd57600080fd5b806340c10f191461017e57806370a082311461019357806395d89b41146101bc57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461016b575b600080fd5b6100dc610210565b6040516100e99190610972565b60405180910390f35b6101056101003660046109e3565b6102a2565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610a0d565b6102ba565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100e9565b6101056101793660046109e3565b6102de565b61019161018c3660046109e3565b610300565b005b6101196101a1366004610a49565b6001600160a01b031660009081526020819052604090205490565b6100dc61030e565b6101916101d23660046109e3565b61031d565b6101056101e53660046109e3565b610327565b6101056101f83660046109e3565b6103a7565b61011961020b366004610a6b565b6103b5565b60606003805461021f90610a9e565b80601f016020809104026020016040519081016040528092919081815260200182805461024b90610a9e565b80156102985780601f1061026d57610100808354040283529160200191610298565b820191906000526020600020905b81548152906001019060200180831161027b57829003601f168201915b5050505050905090565b6000336102b08185856103e0565b5060019392505050565b6000336102c8858285610505565b6102d385858561057f565b506001949350505050565b6000336102b08185856102f183836103b5565b6102fb9190610aee565b6103e0565b61030a828261074d565b5050565b60606004805461021f90610a9e565b61030a828261082c565b6000338161033582866103b5565b90508381101561039a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102d382868684036103e0565b6000336102b081858561057f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104425760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610391565b6001600160a01b0382166104a35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610391565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061051184846103b5565b90506000198114610579578181101561056c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610391565b61057984848484036103e0565b50505050565b6001600160a01b0383166105e35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610391565b6001600160a01b0382166106455760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610391565b6001600160a01b038316600090815260208190526040902054818110156106bd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610391565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106f4908490610aee565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161074091815260200190565b60405180910390a3610579565b6001600160a01b0382166107a35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610391565b80600260008282546107b59190610aee565b90915550506001600160a01b038216600090815260208190526040812080548392906107e2908490610aee565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661088c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610391565b6001600160a01b038216600090815260208190526040902054818110156109005760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610391565b6001600160a01b038316600090815260208190526040812083830390556002805484929061092f908490610b06565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016104f8565b600060208083528351808285015260005b8181101561099f57858101830151858201604001528201610983565b818111156109b1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109de57600080fd5b919050565b600080604083850312156109f657600080fd5b6109ff836109c7565b946020939093013593505050565b600080600060608486031215610a2257600080fd5b610a2b846109c7565b9250610a39602085016109c7565b9150604084013590509250925092565b600060208284031215610a5b57600080fd5b610a64826109c7565b9392505050565b60008060408385031215610a7e57600080fd5b610a87836109c7565b9150610a95602084016109c7565b90509250929050565b600181811c90821680610ab257607f821691505b602082108103610ad257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b0157610b01610ad8565b500190565b600082821015610b1857610b18610ad8565b50039056fea26469706673582212201bd94262691e90642162bfa8901f700e682ba51529266df54e82410b2676789064736f6c634300080e00336101406040523480156200001257600080fd5b50604051620029ea380380620029ea83398101604081905262000035916200052d565b8180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006b9291906200039d565b508051620000819060049060208401906200039d565b5050825160209384012082519284019290922060e08381526101008281524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818b01819052818301999099526060810196909652608080870193909352308683018190528151808803909301835260c0808801808452845194909b01939093209093529190526101209586526001600855610180840190526000808752918301829052820152929350500160646200014f690dc3a8351f3d86a00000601e620005e6565b6200015b919062000614565b6001600160801b031681526001600160a01b0380881660208301528516604090910152805160098054909190829060ff19166001836002811115620001a457620001a4620005d0565b02179055506020820151815464ffffffff00191661010063ffffffff909216919091021781556040820151600182015560608201516002820180546001600160801b0319166001600160801b0390921691909117905560808201516003820180546001600160a01b03199081166001600160a01b039384161790915560a09093015160049092018054909316911617905562000250600080516020620029ca83398151915233620002ad565b6200026b600080516020620029ca83398151915285620002ad565b62000286600080516020620029aa83398151915285620002ad565b620002a26000600080516020620029aa83398151915262000352565b505050505062000673565b60008281526007602090815260408083206001600160a01b038516845290915290205460ff166200034e5760008281526007602090815260408083206001600160a01b03851684529091529020805460ff191660011790556200030d3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600082815260076020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b828054620003ab9062000637565b90600052602060002090601f016020900481019282620003cf57600085556200041a565b82601f10620003ea57805160ff19168380011785556200041a565b828001600101855582156200041a579182015b828111156200041a578251825591602001919060010190620003fd565b50620004289291506200042c565b5090565b5b808211156200042857600081556001016200042d565b80516001600160a01b03811681146200045b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200048857600080fd5b81516001600160401b0380821115620004a557620004a562000460565b604051601f8301601f19908116603f01168101908282118183101715620004d057620004d062000460565b81604052838152602092508683858801011115620004ed57600080fd5b600091505b83821015620005115785820183015181830184015290820190620004f2565b83821115620005235760008385830101525b9695505050505050565b600080600080600060a086880312156200054657600080fd5b620005518662000443565b9450620005616020870162000443565b9350620005716040870162000443565b60608701519093506001600160401b03808211156200058f57600080fd5b6200059d89838a0162000476565b93506080880151915080821115620005b457600080fd5b50620005c38882890162000476565b9150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b60008160001904831182151516156200060f57634e487b7160e01b600052601160045260246000fd5b500290565b6000826200063257634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200064c57607f821691505b6020821081036200066d57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516122e7620006c360003960006116fd0152600061174c0152600061172701526000611680015260006116aa015260006116d401526122e76000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637ecebe001161011a578063cce7ec13116100ad578063d547741f1161007c578063d547741f14610464578063dd62ed3e14610477578063ea7a42e41461048a578063f75d6f801461049d578063f8dcbddb146104b057600080fd5b8063cce7ec1314610423578063cfac414b14610436578063d2d8cb6714610449578063d505accf1461045157600080fd5b8063a217fddf116100e9578063a217fddf146103a0578063a457c2d7146103a8578063a9059cbb146103bb578063be45a26f146103ce57600080fd5b80637ecebe001461035f578063849b4d171461037257806391d148541461038557806395d89b411461039857600080fd5b80632f84c3911161019257806336568abe1161016157806336568abe14610308578063395093511461031b5780633ccfd60b1461032e57806370a082311461033657600080fd5b80632f84c391146102cd578063313ce567146102e057806332cb6b0c146102ef5780633644e5151461030057600080fd5b806323b872dd116101ce57806323b872dd14610262578063248a9ca314610275578063264d7797146102985780632f2ff15d146102b857600080fd5b806301ffc9a71461020057806306fdde0314610228578063095ea7b31461023d57806318160ddd14610250575b600080fd5b61021361020e366004611e28565b6104c3565b60405190151581526020015b60405180910390f35b6102306104fa565b60405161021f9190611e7e565b61021361024b366004611ecd565b61058c565b6002545b60405190815260200161021f565b610213610270366004611ef7565b6105a4565b610254610283366004611f33565b60009081526007602052604090206001015490565b6102546102a6366004611f4c565b600e6020526000908152604090205481565b6102cb6102c6366004611f67565b6105c8565b005b6102cb6102db366004611f4c565b6105f2565b6040516012815260200161021f565b610254690dc3a8351f3d86a0000081565b61025461084d565b6102cb610316366004611f67565b61085c565b610213610329366004611ecd565b6108df565b6102cb610901565b610254610344366004611f4c565b6001600160a01b031660009081526020819052604090205490565b61025461036d366004611f4c565b610a93565b6102cb610380366004611f93565b610ab1565b610213610393366004611f67565b610b36565b610230610b61565b610254600081565b6102136103b6366004611ecd565b610b70565b6102136103c9366004611ecd565b610beb565b600954600a54600b54600c54600d546104119460ff81169461010090910463ffffffff169390926001600160801b03909116916001600160a01b03918216911686565b60405161021f96959493929190611fd2565b6102cb610431366004611ecd565b610bf9565b6102cb610444366004612038565b610f7b565b610254600a81565b6102cb61045f366004612038565b610f9f565b6102cb610472366004611f67565b611103565b6102546104853660046120ab565b611128565b6102cb610498366004611f33565b611153565b6102cb6104ab3660046120d5565b611171565b6102cb6104be366004611f33565b611225565b60006001600160e01b03198216637965db0b60e01b14806104f457506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060038054610509906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610535906120fb565b80156105825780601f1061055757610100808354040283529160200191610582565b820191906000526020600020905b81548152906001019060200180831161056557829003601f168201915b5050505050905090565b60003361059a818585611274565b5060019392505050565b6000336105b2858285611398565b6105bd858585611412565b506001949350505050565b6000828152600760205260409020600101546105e3816115e0565b6105ed83836115ed565b505050565b60008051602061229283398151915261060a816115e0565b6040805160c08101909152600980546000929190829060ff16600281111561063457610634611fbc565b600281111561064557610645611fbc565b81528154610100900463ffffffff166020820152600182015460408083019190915260028301546001600160801b0316606083015260038301546001600160a01b03908116608080850191909152600494850154821660a094850152928501519285015191516370a0823160e01b8152309481019490945293945092169163a9059cbb9183906370a0823190602401602060405180830381865afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610715919061212f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107849190612148565b506001600160a01b03831660a0820152805160098054839290829060ff191660018360028111156107b7576107b7611fbc565b02179055506020820151815464ffffffff00191661010063ffffffff909216919091021781556040820151600182015560608201516002820180546001600160801b0319166001600160801b0390921691909117905560808201516003820180546001600160a01b03199081166001600160a01b039384161790915560a090930151600490920180549093169116179055505050565b6000610857611673565b905090565b6001600160a01b03811633146108d15760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6108db828261179a565b5050565b60003361059a8185856108f28383611128565b6108fc9190612180565b611274565b600080516020612292833981519152610919816115e0565b6040805160c08101909152600980546000929190829060ff16600281111561094357610943611fbc565b600281111561095457610954611fbc565b81528154610100900463ffffffff166020820152600182015460408083019190915260028301546001600160801b0316606083015260038301546001600160a01b03908116608080850191909152600494850154821660a094850152928501519285015191516370a0823160e01b8152309481019490945293945092169163a9059cbb9183906370a0823190602401602060405180830381865afa158015610a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a24919061212f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ed9190612148565b6001600160a01b0381166000908152600560205260408120546104f4565b600080516020612292833981519152610ac9816115e0565b68056bc75e2d63100000826001600160801b031611610b135760405162461bcd60e51b81526004016108c890602080825260049082015263151310d160e21b604082015260600190565b50600b80546001600160801b0319166001600160801b0392909216919091179055565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060048054610509906120fb565b60003381610b7e8286611128565b905083811015610bde5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108c8565b6105bd8286868403611274565b60003361059a818585611412565b600260085403610c4b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108c8565b600260088190556040805160c0810190915260098054600093839160ff1690811115610c7957610c79611fbc565b6002811115610c8a57610c8a611fbc565b81528154610100900463ffffffff1660208201526001820154604082015260028201546001600160801b0316606082015260038201546001600160a01b03908116608083015260049092015490911660a09091015290506000610cf0600a612710612198565b6020830151610d059063ffffffff1685612198565b610d0f91906121b7565b90506000610d1c60025490565b610d269083612180565b9050600083516002811115610d3d57610d3d611fbc565b03610d735760405162461bcd60e51b81526004016108c89060208082526004908201526353494e4160e01b604082015260600190565b600283516002811115610d8857610d88611fbc565b03610dba5760405162461bcd60e51b8152602060048201526002602482015261534f60f01b60448201526064016108c8565b690dc3a8351f3d86a00000811115610dfa5760405162461bcd60e51b8152602060048201526003602482015262454d5360e81b60448201526064016108c8565b6060830151336000908152600e60205260409020546001600160801b0390911690610e26908490612180565b1115610e5d5760405162461bcd60e51b815260206004820152600660248201526515105095135560d21b60448201526064016108c8565b60a08301516040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eda9190612148565b50610ee58583611801565b336000908152600e602052604081208054849290610f04908490612180565b9091555050690dc3a8351f3d869fffff198101610f2557610f256002611225565b604080516001600160a01b0387168152602081018690529081018390527f9e4ea95a373e6be65b8e8588f0c5491e3c70ace6d2cf2b53f95cf22a0fc9a6999060600160405180910390a150506001600855505050565b610f8a87338787878787610f9f565b610f958787876105a4565b5050505050505050565b83421115610fef5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016108c8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861101e8c6118e0565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061107982611908565b9050600061108982878787611956565b9050896001600160a01b0316816001600160a01b0316146110ec5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016108c8565b6110f78a8a8a611274565b50505050505050505050565b60008281526007602052604090206001015461111e816115e0565b6105ed838361179a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008051602061229283398151915261116b816115e0565b50600a55565b600080516020612292833981519152611189816115e0565b613e808263ffffffff16106111c65760405162461bcd60e51b81526020600482015260036024820152620a4a8960eb1b60448201526064016108c8565b6117708263ffffffff16116112035760405162461bcd60e51b815260206004820152600360248201526214951360ea1b60448201526064016108c8565b6009805464ffffffff00191661010063ffffffff8516021790556108db610901565b60008051602061229283398151915261123d816115e0565b81600281111561124f5761124f611fbc565b6009805460ff1916600183600281111561126b5761126b611fbc565b02179055505050565b6001600160a01b0383166112d65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108c8565b6001600160a01b0382166113375760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108c8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006113a48484611128565b9050600019811461140c57818110156113ff5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108c8565b61140c8484848403611274565b50505050565b6001600160a01b0383166114765760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108c8565b6001600160a01b0382166114d85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108c8565b6001600160a01b038316600090815260208190526040902054818110156115505760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108c8565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611587908490612180565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115d391815260200190565b60405180910390a361140c565b6115ea813361197e565b50565b6115f78282610b36565b6108db5760008281526007602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561162f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156116cc57507f000000000000000000000000000000000000000000000000000000000000000046145b156116f657507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6117a48282610b36565b156108db5760008281526007602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6001600160a01b0382166118575760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108c8565b80600260008282546118699190612180565b90915550506001600160a01b03821660009081526020819052604081208054839290611896908490612180565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006104f4611915611673565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611967878787876119e2565b9150915061197481611acf565b5095945050505050565b6119888282610b36565b6108db576119a0816001600160a01b03166014611c85565b6119ab836020611c85565b6040516020016119bc9291906121d9565b60408051601f198184030181529082905262461bcd60e51b82526108c891600401611e7e565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a195750600090506003611ac6565b8460ff16601b14158015611a3157508460ff16601c14155b15611a425750600090506004611ac6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a96573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611abf57600060019250925050611ac6565b9150600090505b94509492505050565b6000816004811115611ae357611ae3611fbc565b03611aeb5750565b6001816004811115611aff57611aff611fbc565b03611b4c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016108c8565b6002816004811115611b6057611b60611fbc565b03611bad5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016108c8565b6003816004811115611bc157611bc1611fbc565b03611c195760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016108c8565b6004816004811115611c2d57611c2d611fbc565b036115ea5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016108c8565b60606000611c94836002612198565b611c9f906002612180565b67ffffffffffffffff811115611cb757611cb761224e565b6040519080825280601f01601f191660200182016040528015611ce1576020820181803683370190505b509050600360fc1b81600081518110611cfc57611cfc612264565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d2b57611d2b612264565b60200101906001600160f81b031916908160001a9053506000611d4f846002612198565b611d5a906001612180565b90505b6001811115611dd2576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d8e57611d8e612264565b1a60f81b828281518110611da457611da4612264565b60200101906001600160f81b031916908160001a90535060049490941c93611dcb8161227a565b9050611d5d565b508315611e215760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016108c8565b9392505050565b600060208284031215611e3a57600080fd5b81356001600160e01b031981168114611e2157600080fd5b60005b83811015611e6d578181015183820152602001611e55565b8381111561140c5750506000910152565b6020815260008251806020840152611e9d816040850160208701611e52565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611ec857600080fd5b919050565b60008060408385031215611ee057600080fd5b611ee983611eb1565b946020939093013593505050565b600080600060608486031215611f0c57600080fd5b611f1584611eb1565b9250611f2360208501611eb1565b9150604084013590509250925092565b600060208284031215611f4557600080fd5b5035919050565b600060208284031215611f5e57600080fd5b611e2182611eb1565b60008060408385031215611f7a57600080fd5b82359150611f8a60208401611eb1565b90509250929050565b600060208284031215611fa557600080fd5b81356001600160801b0381168114611e2157600080fd5b634e487b7160e01b600052602160045260246000fd5b60c0810160038810611ff457634e487b7160e01b600052602160045260246000fd5b96815263ffffffff95909516602086015260408501939093526001600160801b039190911660608401526001600160a01b0390811660808401521660a09091015290565b600080600080600080600060e0888a03121561205357600080fd5b61205c88611eb1565b965061206a60208901611eb1565b95506040880135945060608801359350608088013560ff8116811461208e57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156120be57600080fd5b6120c783611eb1565b9150611f8a60208401611eb1565b6000602082840312156120e757600080fd5b813563ffffffff81168114611e2157600080fd5b600181811c9082168061210f57607f821691505b60208210810361190257634e487b7160e01b600052602260045260246000fd5b60006020828403121561214157600080fd5b5051919050565b60006020828403121561215a57600080fd5b81518015158114611e2157600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156121935761219361216a565b500190565b60008160001904831182151516156121b2576121b261216a565b500290565b6000826121d457634e487b7160e01b600052601260045260246000fd5b500490565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612211816017850160208801611e52565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612242816028840160208801611e52565b01602801949350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816122895761228961216a565b50600019019056feb1e380c01db319c0153ea3bb4fbd0ab6639cc088e3bf8cd5319b128f33a2f9e8a2646970667358221220bcccf3bda7edc768864a5e0a1b7e0a24e893d63f1355bf45d47f371ee9a0a8b864736f6c634300080e00334f19e045df9e964e6a281e418b6ef252a08a0c414769d06f540dec5c12f40d42b1e380c01db319c0153ea3bb4fbd0ab6639cc088e3bf8cd5319b128f33a2f9e80000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d",
    "sourceMap": "223:6065:30:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;280:6:30;257:29;;;;-1:-1:-1;;290:84:30;;409:107;378:138;;541:21;;:6;:21;:::i;:::-;520:42;;603:2;590:10;;:15;;;;:::i;:::-;566:39;;648:10;;-1:-1:-1;;;;;;648:10:30;;656:1;648:10;;;660:25:31;-1:-1:-1;;;;;;;;;;;217:64:1;648:7:30;;633:18:31;;648:10:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;632:26;;;-1:-1:-1;;;;;;632:26:30;-1:-1:-1;;;;;632:26:30;;;;;;;;;;678:10;;-1:-1:-1;;;;;;678:10:30;;686:1;678:10;;;660:25:31;-1:-1:-1;;;;;;;;;;;217:64:1;678:7:30;;633:18:31;;678:10:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;662:26;;;-1:-1:-1;;;;;;662:26:30;-1:-1:-1;;;;;662:26:30;;;;;;;;;;709:10;;-1:-1:-1;;;;;;709:10:30;;717:1;709:10;;;660:25:31;-1:-1:-1;;;;;;;;;;;217:64:1;709:7:30;;633:18:31;;709:10:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;692:27;;;-1:-1:-1;;;;;;692:27:30;-1:-1:-1;;;;;692:27:30;;;;;;;;;;742:10;;-1:-1:-1;;;;;;742:10:30;;750:1;742:10;;;660:25:31;-1:-1:-1;;;;;;;;;;;217:64:1;742:7:30;;633:18:31;;742:10:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;723:29;;;-1:-1:-1;;;;;;723:29:30;-1:-1:-1;;;;;723:29:30;;;;;;;;;;771:10;;-1:-1:-1;;;;;;771:10:30;;779:1;771:10;;;660:25:31;-1:-1:-1;;;;;;;;;;;217:64:1;771:7:30;;633:18:31;;771:10:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;756:25;;;-1:-1:-1;;;;;;756:25:30;-1:-1:-1;;;;;756:25:30;;;;;;;;;;804:30;;831:2;;804:30;;;:::i;:::-;2089:2:31;2071:21;;;2128:1;2108:18;;;2101:29;-1:-1:-1;;;2161:3:31;2146:19;;2139:34;2211:3;2204:4;2189:20;;2182:33;;;2252:1;2231:19;;;2224:30;-1:-1:-1;;;2285:3:31;2270:19;;2263:33;2380:4;2368:17;;;-1:-1:-1;2348:18:31;;2341:45;2328:3;2313:19;804:30:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;785:49:30;;;-1:-1:-1;;;;;;785:49:30;-1:-1:-1;;;;;785:49:30;;;;;;;;;890:4;;902:8;;865:125;;890:4;;;;902:8;;785:49;865:125;;;:::i;:::-;-1:-1:-1;;;;;2822:15:31;;;2804:34;;2874:15;;;2869:2;2854:18;;2847:43;2926:15;;;2921:2;2906:18;;2899:43;2784:3;2973:2;2958:18;;2951:31;;;3019:2;2998:19;;;2991:31;3059:26;3053:3;3038:19;;3031:55;3123:3;3117;3102:19;;3095:32;;;3164:1;3143:19;;;3136:30;-1:-1:-1;;;3197:3:31;3182:19;;3175:38;3245:3;3230:19;865:125:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;838:152:30;;;-1:-1:-1;;;;;;838:152:30;-1:-1:-1;;;;;838:152:30;;;;;;;;;;223:6065;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;14:265:31:-;54:7;120:1;116;112:6;108:14;105:1;102:21;97:1;90:9;83:17;79:45;76:168;;;166:10;161:3;157:20;154:1;147:31;201:4;198:1;191:15;229:4;226:1;219:15;76:168;-1:-1:-1;264:9:31;;14:265::o;284:217::-;324:1;350;340:132;;394:10;389:3;385:20;382:1;375:31;429:4;426:1;419:15;457:4;454:1;447:15;340:132;-1:-1:-1;486:9:31;;284:217::o;696:290::-;766:6;819:2;807:9;798:7;794:23;790:32;787:52;;;835:1;832;825:12;787:52;861:16;;-1:-1:-1;;;;;906:31:31;;896:42;;886:70;;952:1;949;942:12;886:70;975:5;696:290;-1:-1:-1;;;696:290:31:o;2397:858::-;223:6065:30;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001af5760003560e01c80636f59707511620000f0578063c88a5e6d11620000a3578063e77b6747116200007a578063e77b674714620003a5578063e9a79a7b14620003bc578063edd2545f14620003d3578063fa7626d414620003ea57600080fd5b8063c88a5e6d1462000360578063d06d82291462000377578063d82555f1146200038e57600080fd5b80636f59707514620002d257806397754ae914620002e95780639a8325a01462000300578063af9bbe5f1462000317578063b9c071b4146200032e578063ba414fa6146200034557600080fd5b80633a1143da116200016657806355dda6bb116200013d57806355dda6bb14620001be5780635a6c1eed146200027e5780636bce989b14620002a45780636e0b95d014620002bb57600080fd5b80633a1143da14620001be5780633a76846314620002505780633bf82db1146200026757600080fd5b80630a9254e414620001b4578063108554f214620001c0578063233240ee14620001d757806329a9e30014620001ee57806329ce9dde14620002055780632d6c17a31462000239575b600080fd5b620001be620003f8565b005b620001be620001d1366004620048a4565b6200045f565b620001be620001e8366004620048d3565b62000538565b620001be620001ff366004620048fa565b62000614565b6200021c6200021636600462004a13565b620006c6565b6040516001600160a01b0390911681526020015b60405180910390f35b620001be6200024a36600462004a93565b620007f6565b6200021c60008051602062007b6983398151915281565b620001be6200027836600462004aad565b62000836565b620002956200028f36600462004af3565b62000918565b60405190815260200162000230565b620001be620002b536600462004aad565b62000a51565b620001be620002cc36600462004a93565b62000a65565b620001be620002e3366004620048d3565b62000e1d565b620001be620002fa36600462004b2f565b62000ec7565b6200021c6200031136600462004b89565b62001108565b620001be6200032836600462004aad565b6200120a565b620001be6200033f36600462004a93565b620012b8565b6200034f620012d9565b604051901515815260200162000230565b620001be62000371366004620048a4565b6200140a565b620001be62000388366004620048fa565b62001440565b620001be6200039f36600462004aad565b620014f2565b620001be620003b636600462004bca565b620015e9565b620001be620003cd366004620048a4565b6200250a565b620001be620003e436600462004bca565b620025b0565b6000546200034f9060ff1681565b6040516372eb5f8160e11b81526362b97afa600482015260008051602062007b698339815191529063e5d6bf0290602401600060405180830381600087803b1580156200044457600080fd5b505af115801562000459573d6000803e3d6000fd5b50505050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062000495908590859060040162004c0c565b600060405180830381600087803b158015620004b057600080fd5b505af1158015620004c5573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038516600482015260008051602062007b6983398151915292506306447d5691506024015b600060405180830381600087803b1580156200051b57600080fd5b505af115801562000530573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062000572908490600160801b9060040162004c0c565b600060405180830381600087803b1580156200058d57600080fd5b505af1158015620005a2573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062007b69833981519152925063ca669fa791506024015b600060405180830381600087803b158015620005f857600080fd5b505af11580156200060d573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d906200064e908590600160801b9060040162004c0c565b600060405180830381600087803b1580156200066957600080fd5b505af11580156200067e573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380861660048301528416602482015260008051602062007b6983398151915292506347e50cce915060440162000500565b604051638d1cc92560e01b8152600090819060008051602062007b6983398151915290638d1cc92590620006ff90879060040162004c54565b6000604051808303816000875af11580156200071f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000749919081019062004cbf565b836040516020016200075d92919062004d0d565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216620007ef5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b60008051602062007b6983398151915263e5d6bf0262000817834262004d56565b6040518263ffffffff1660e01b8152600401620005dd91815260200190565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d906200086c908690859060040162004c0c565b600060405180830381600087803b1580156200088757600080fd5b505af11580156200089c573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380871660048301528516602482015260008051602062007b6983398151915292506345b5607891506044015b600060405180830381600087803b158015620008fa57600080fd5b505af11580156200090f573d6000803e3d6000fd5b50505050505050565b600081831115620009925760405162461bcd60e51b815260206004820152603a60248201527f5465737420626f756e642875696e743235362c75696e743235362c75696e743260448201527f3536293a204d6178206973206c657373207468616e206d696e2e0000000000006064820152608401620007e6565b6000620009a0848462004d56565b905080600003620009b457839150620009f4565b6000198103620009c757849150620009f4565b620009d28162004d70565b90506000620009e2828762004da2565b9050620009f0818662004db9565b9250505b60408051818152600c818301526b109bdd5b990814995cdd5b1d60a21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b62000a60838383600062000ec7565b505050565b60135460405163f8dcbddb60e01b8152600160048201526001600160a01b039091169063f8dcbddb90602401600060405180830381600087803b15801562000aac57600080fd5b505af115801562000ac1573d6000803e3d6000fd5b50506013546040516301eebadf60e71b815261271060048201526001600160a01b03909116925063f75d6f809150602401600060405180830381600087803b15801562000b0d57600080fd5b505af115801562000b22573d6000803e3d6000fd5b505060135460408051630cb2dac360e21b8152905160008051602062007b698339815191529450634c63e56293506001600160a01b03909216916332cb6b0c916004808201926020929091908290030181865afa15801562000b88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bae919062004dd4565b6040516001600160e01b031960e084901b1681529084106004820152602401600060405180830381600087803b15801562000be857600080fd5b505af115801562000bfd573d6000803e3d6000fd5b5050600d546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062007b6983398151915292506306447d569150602401600060405180830381600087803b15801562000c5657600080fd5b505af115801562000c6b573d6000803e3d6000fd5b5050601254600d546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062000ca89290911690859060040162004c0c565b600060405180830381600087803b15801562000cc357600080fd5b505af115801562000cd8573d6000803e3d6000fd5b505060125460135460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062000d159290911690859060040162004c0c565b6020604051808303816000875af115801562000d35573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d5b919062004dee565b50601354600d546001600160a01b039182169163cce7ec13911662000d82600a8562004e0e565b6040518363ffffffff1660e01b815260040162000da192919062004c0c565b600060405180830381600087803b15801562000dbc57600080fd5b505af115801562000dd1573d6000803e3d6000fd5b5050604080516390c5013b60e01b8152905160008051602062007b6983398151915293506390c5013b9250600480830192600092919082900301818387803b158015620005f857600080fd5b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062000e57908490600160801b9060040162004c0c565b600060405180830381600087803b15801562000e7257600080fd5b505af115801562000e87573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038416600482015260008051602062007b6983398151915292506306447d569150602401620005dd565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000f1d9162004e25565b6000604051808303816000865af19150503d806000811462000f5c576040519150601f19603f3d011682016040523d82523d6000602084013e62000f61565b606091505b5091505060008180602001905181019062000f7d919062004dd4565b905062000fef8462000fe88762000fbf6370a0823160e01b62000fa260018d62003302565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062003327565b8215620005305760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200103a919062004e25565b6000604051808303816000865af19150503d806000811462001079576040519150601f19603f3d011682016040523d82523d6000602084013e6200107e565b606091505b509150506000818060200190518101906200109a919062004dd4565b905082861015620010c557620010b1868462004d56565b620010bd908262004d56565b9050620010e0565b620010d1838762004d56565b620010dd908262004db9565b90505b620010fe8162000fe86318160ddd60e01b62000fa260018d62003302565b5050505050505050565b604051638d1cc92560e01b8152600090819060008051602062007b6983398151915290638d1cc925906200114190869060040162004c54565b6000604051808303816000875af115801562001161573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200118b919081019062004cbf565b90508051602082016000f091506001600160a01b038216620012045760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401620007e6565b50919050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062001240908690859060040162004c0c565b600060405180830381600087803b1580156200125b57600080fd5b505af115801562001270573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b0380871660048301528516602482015260008051602062007b6983398151915292506347e50cce9150604401620008df565b60008051602062007b6983398151915263e5d6bf0262000817834262004db9565b60008054610100900460ff1615620012fa5750600054610100900460ff1690565b600060008051602062007b698339815191523b15620014055760405160009060008051602062007b69833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620013679083906519985a5b195960d21b9060200162004c0c565b60408051601f198184030181529082905262001387929160200162004e43565b60408051601f1981840301815290829052620013a39162004e25565b6000604051808303816000865af19150503d8060008114620013e2576040519150601f19603f3d011682016040523d82523d6000602084013e620013e7565b606091505b509150508080602001905181019062001401919062004dee565b9150505b919050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062000500908590859060040162004c0c565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d906200147a908590600160801b9060040162004c0c565b600060405180830381600087803b1580156200149557600080fd5b505af1158015620014aa573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b0380861660048301528416602482015260008051602062007b6983398151915292506345b56078915060440162000500565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051620015be906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162000a608162000fe88462000fbf6370a0823160e01b62000fa260018a62003302565b60135460405163f8dcbddb60e01b8152600160048201526001600160a01b039091169063f8dcbddb90602401600060405180830381600087803b1580156200163057600080fd5b505af115801562001645573d6000803e3d6000fd5b50506013546040516301eebadf60e71b815261271060048201526001600160a01b03909116925063f75d6f809150602401600060405180830381600087803b1580156200169157600080fd5b505af1158015620016a6573d6000803e3d6000fd5b50505050620016b54662003337565b604051632631f2b160e11b81526103e861ffff831610600482015260008051602062007b6983398151915290634c63e56290602401600060405180830381600087803b1580156200170557600080fd5b505af11580156200171a573d6000803e3d6000fd5b505060135460408051630cb2dac360e21b8152905160008051602062007b698339815191529450634c63e56293506103e8926001600160a01b0316916332cb6b0c9160048083019260209291908290030181865afa15801562001781573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017a7919062004dd4565b620017b3919062004e0e565b620017c090601e62004e76565b620017cd600a8762004e0e565b6040516001600160e01b031960e085901b16815291116004820152602401600060405180830381600087803b1580156200180657600080fd5b505af11580156200181b573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e88611600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b1580156200186b57600080fd5b505af115801562001880573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e88511600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b158015620018d057600080fd5b505af1158015620018e5573d6000803e3d6000fd5b505060095460008051602062007b698339815191529250634c63e562915062001912906103e89062004e0e565b6040516001600160e01b031960e084901b1681529085106004820152602401600060405180830381600087803b1580156200194c57600080fd5b505af115801562001961573d6000803e3d6000fd5b5050601254600f54604051600094506001600160a01b03928316935091169084906200198d906200484b565b6001600160a01b03938416815292909116602083015261ffff166040820152606001604051809103906000f080158015620019cc573d6000803e3d6000fd5b5060135460405163d48bfca760e01b81526001600160a01b03918216600482015291925082169063d48bfca790602401600060405180830381600087803b15801562001a1757600080fd5b505af115801562001a2c573d6000803e3d6000fd5b50506013546040516319f3736160e01b81526001600160a01b03918216600482015290841692506319f373619150602401602060405180830381865afa15801562001a7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001aa1919062004dee565b62001ab05762001ab062004e98565b600d546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062007b69833981519152906306447d5690602401600060405180830381600087803b15801562001b0557600080fd5b505af115801562001b1a573d6000803e3d6000fd5b505060125460095460405163095ea7b360e01b81526001600160a01b03909216935063095ea7b3925062001b549185919060040162004c0c565b6020604051808303816000875af115801562001b74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b9a919062004dee565b50601254600d546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262001bd392911690879060040162004c0c565b600060405180830381600087803b15801562001bee57600080fd5b505af115801562001c03573d6000803e3d6000fd5b5050601254600d546040516370a0823160e01b81526001600160a01b039182166004820152879450911691506370a0823190602401602060405180830381865afa15801562001c56573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c7c919062004dd4565b1462001c9c5760405162461bcd60e51b8152600401620007e69062004eae565b6013546040805163d2d8cb6760e01b815290516000926001600160a01b03169163d2d8cb679160048083019260209291908290030181865afa15801562001ce7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d0d919062004dd4565b62001d19908662004e0e565b601354601254604051636f4322f360e11b81526001600160a01b0392831660048201529082166024820152604481018390526064810187905291925083169063de8645e690608401600060405180830381600087803b15801562001d7c57600080fd5b505af115801562001d91573d6000803e3d6000fd5b5050601254600d546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562001de2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e08919062004dd4565b1562001e4c5760405162461bcd60e51b8152602060048201526012602482015271213abc9027b93232b910333a1032b93937b960711b6044820152606401620007e6565b6012546040516370a0823160e01b81526001600160a01b038481166004830152869216906370a0823190602401602060405180830381865afa15801562001e97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ebd919062004dd4565b1462001edd5760405162461bcd60e51b8152600401620007e69062004ed4565b604080516390c5013b60e01b8152905160008051602062007b69833981519152916390c5013b91600480830192600092919082900301818387803b15801562001f2557600080fd5b505af115801562001f3a573d6000803e3d6000fd5b5050600e546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062007b6983398151915292506306447d569150602401600060405180830381600087803b15801562001f9357600080fd5b505af115801562001fa8573d6000803e3d6000fd5b5050601254600e546040516340c10f1960e01b81526001600160a01b0392831694506340c10f19935062001fe59290911690899060040162004c0c565b600060405180830381600087803b1580156200200057600080fd5b505af115801562002015573d6000803e3d6000fd5b505060125460135460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620020529290911690899060040162004c0c565b6020604051808303816000875af115801562002072573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002098919062004dee565b50601354600e5460405163cce7ec1360e01b81526001600160a01b039283169263cce7ec1392620020d192911690899060040162004c0c565b600060405180830381600087803b158015620020ec57600080fd5b505af115801562002101573d6000803e3d6000fd5b5050601354600e546040516370a0823160e01b81526001600160a01b039182166004820152859450911691506370a0823190602401602060405180830381865afa15801562002154573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200217a919062004dd4565b146200219a5760405162461bcd60e51b8152600401620007e69062004eae565b601354600e5460095460009283928392620021c9926001600160a01b0390811692169088908890600262003382565b9250925092506000806000806000896001600160a01b031663d59a83bb601360009054906101000a90046001600160a01b031660006040518363ffffffff1660e01b81526004016200221d92919062004c0c565b61014060405180830381865afa1580156200223c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002262919062004f1a565b509850985098509850505096505050888114620022af5760405162461bcd60e51b815260206004820152600a60248201526920b6b7bab73a1032b93960b11b6044820152606401620007e6565b67ffffffffffffffff851615620022f55760405162461bcd60e51b815260206004820152600960248201526824b73232bc1032b93960b91b6044820152606401620007e6565b600d546200230c906001600160a01b031662003649565b620023178462003649565b600d546001600160a01b03858116911614620023665760405162461bcd60e51b815260206004820152600d60248201526c42757965722070726f626c656d60981b6044820152606401620007e6565b8b8214620023a75760405162461bcd60e51b815260206004820152600d60248201526c42757965722070726f626c656d60981b6044820152606401620007e6565b61ffff8b161562002410576103e8620023c561ffff8d168e62004e76565b620023d1919062004e0e565b8314620024105760405162461bcd60e51b815260206004820152600c60248201526b6665652070726f626c656d7360a01b6044820152606401620007e6565b60135460095460405163d28c3a9b60e01b81526001600160a01b03928316600482015260006024820152604481019190915260ff8a1660648201526084810189905260a48101889052908b169063d28c3a9b9060c401600060405180830381600087803b1580156200248157600080fd5b505af115801562002496573d6000803e3d6000fd5b5050604080516390c5013b60e01b8152905160008051602062007b6983398151915293506390c5013b9250600480830192600092919082900301818387803b158015620024e257600080fd5b505af1158015620024f7573d6000803e3d6000fd5b5050505050505050505050505050505050565b60405163c88a5e6d60e01b815260008051602062007b698339815191529063c88a5e6d9062002540908590859060040162004c0c565b600060405180830381600087803b1580156200255b57600080fd5b505af115801562002570573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062007b69833981519152925063ca669fa7915060240162000500565b60135460405163f8dcbddb60e01b8152600160048201526001600160a01b039091169063f8dcbddb90602401600060405180830381600087803b158015620025f757600080fd5b505af11580156200260c573d6000803e3d6000fd5b50506013546040516301eebadf60e71b815261271060048201526001600160a01b03909116925063f75d6f809150602401600060405180830381600087803b1580156200265857600080fd5b505af11580156200266d573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e861ffff851610600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b158015620026c157600080fd5b505af1158015620026d6573d6000803e3d6000fd5b505060135460408051630cb2dac360e21b8152905160008051602062007b698339815191529450634c63e56293506064926001600160a01b0316916332cb6b0c9160048083019260209291908290030181865afa1580156200273c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002762919062004dd4565b6200276e919062004e0e565b6200277b90601e62004e76565b62002788600a8762004e0e565b6040516001600160e01b031960e085901b16815291116004820152602401600060405180830381600087803b158015620027c157600080fd5b505af1158015620027d6573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e88611600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b1580156200282657600080fd5b505af11580156200283b573d6000803e3d6000fd5b5050604051632631f2b160e11b81526103e88511600482015260008051602062007b698339815191529250634c63e5629150602401600060405180830381600087803b1580156200288b57600080fd5b505af1158015620028a0573d6000803e3d6000fd5b505060095460008051602062007b698339815191529250634c63e5629150620028cd906103e89062004e0e565b6040516001600160e01b031960e084901b1681529085106004820152602401600060405180830381600087803b1580156200290757600080fd5b505af11580156200291c573d6000803e3d6000fd5b5050601254600f54604051600094506001600160a01b039283169350911690849062002948906200484b565b6001600160a01b03938416815292909116602083015261ffff166040820152606001604051809103906000f08015801562002987573d6000803e3d6000fd5b5060135460405163d48bfca760e01b81526001600160a01b03918216600482015291925082169063d48bfca790602401600060405180830381600087803b158015620029d257600080fd5b505af1158015620029e7573d6000803e3d6000fd5b50506013546040516319f3736160e01b81526001600160a01b03918216600482015290841692506319f373619150602401602060405180830381865afa15801562002a36573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002a5c919062004dee565b62002a6b5762002a6b62004e98565b6013546040805163d2d8cb6760e01b815290516000926001600160a01b03169163d2d8cb679160048083019260209291908290030181865afa15801562002ab6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002adc919062004dd4565b62002ae8908662004e0e565b600d546040516303223eab60e11b81526001600160a01b03909116600482015290915060008051602062007b69833981519152906306447d5690602401600060405180830381600087803b15801562002b4057600080fd5b505af115801562002b55573d6000803e3d6000fd5b505060125460135460095460405163095ea7b360e01b81526001600160a01b03938416955063095ea7b3945062002b93939092169160040162004c0c565b6020604051808303816000875af115801562002bb3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bd9919062004dee565b50601254600d546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262002c1292911690899060040162004c0c565b600060405180830381600087803b15801562002c2d57600080fd5b505af115801562002c42573d6000803e3d6000fd5b5050601354600d5460405163cce7ec1360e01b81526001600160a01b03928316945063cce7ec13935062002c7f9290911690899060040162004c0c565b600060405180830381600087803b15801562002c9a57600080fd5b505af115801562002caf573d6000803e3d6000fd5b5050601354600d546040516370a0823160e01b81526001600160a01b039182166004820152859450911691506370a0823190602401602060405180830381865afa15801562002d02573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d28919062004dd4565b1462002d485760405162461bcd60e51b8152600401620007e69062004eae565b601354600d546009546000928392839262002d77926001600160a01b0390811692169088908890600162003382565b601354601254600954604051636bdf6b3960e01b81526001600160a01b0393841660048201529183166024830152604482018a9052606482018d9052608482015260ff851660a482015260c4810184905260e481018390529396509194509250861690636bdf6b399061010401600060405180830381600087803b15801562002dff57600080fd5b505af115801562002e14573d6000803e3d6000fd5b5050601354600d546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801562002e65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e8b919062004dd4565b1562002eab5760405162461bcd60e51b8152600401620007e69062004ed4565b6013546040516370a0823160e01b81526001600160a01b038781166004830152869216906370a0823190602401602060405180830381865afa15801562002ef6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f1c919062004dd4565b1462002f3c5760405162461bcd60e51b8152600401620007e69062004ed4565b604080516390c5013b60e01b8152905160008051602062007b69833981519152916390c5013b91600480830192600092919082900301818387803b15801562002f8457600080fd5b505af115801562002f99573d6000803e3d6000fd5b5050600e546040516303223eab60e11b81526001600160a01b03909116600482015260008051602062007b6983398151915292506306447d569150602401600060405180830381600087803b15801562002ff257600080fd5b505af115801562003007573d6000803e3d6000fd5b5050601254600e546040516340c10f1960e01b81526001600160a01b0392831694506340c10f1993506200304492909116908b9060040162004c0c565b600060405180830381600087803b1580156200305f57600080fd5b505af115801562003074573d6000803e3d6000fd5b505060125460095460405163095ea7b360e01b81526001600160a01b03909216935063095ea7b39250620030ae9189919060040162004c0c565b6020604051808303816000875af1158015620030ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030f4919062004dee565b50601354604051639a83aa8b60e01b81526001600160a01b0391821660048201526000602482015290861690639a83aa8b90604401600060405180830381600087803b1580156200314457600080fd5b505af115801562003159573d6000803e3d6000fd5b5050604080516390c5013b60e01b8152905160008051602062007b6983398151915293506390c5013b9250600480830192600092919082900301818387803b158015620031a557600080fd5b505af1158015620031ba573d6000803e3d6000fd5b5050601254604051631ac3ddeb60e01b81526001600160a01b0391821660048201529088169250631ac3ddeb9150602401600060405180830381600087803b1580156200320657600080fd5b505af11580156200321b573d6000803e3d6000fd5b50505050620032344667ffffffffffffffff1662003337565b601254600f546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562003281573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620032a7919062004dd4565b6103e8620032ba61ffff89168a62004e76565b620032c6919062004e0e565b14620010fe5760405162461bcd60e51b815260206004820152600a60248201526946656550726f626c656d60b01b6044820152606401620007e6565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62003333828262003693565b5050565b6200337f816040516024016200334f91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052620039fc565b50565b600080600080600a548989898d6001600160a01b0316637ecebe008e6040518263ffffffff1660e01b8152600401620033ca91906001600160a01b0391909116815260200190565b602060405180830381865afa158015620033e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200340e919062004dd4565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8b6001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620034c0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620034ea919081019062004cbf565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201526001600160a01b038c1660a082015260c0016040516020818303038152906040528051906020012090506000620035b6828460405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6040516338d07aa960e21b8152600481018990526024810182905290915060008051602062007b698339815191529063e341eaa4906044016060604051808303816000875af11580156200360e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003634919062004fde565b95509550955050505096509650969350505050565b6040516001600160a01b03821660248201526200337f9060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052620039fc565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200370657602002820191906000526020600020905b815481526020019060010190808311620036f1575b505050505090506000836200371b8362003a1d565b6040516020016200372e92919062004e43565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620037829186918891016200501d565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620037bd57620037bb8762003aca565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620037fe9187918991016200501d565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162003845919062004e25565b600060405180830381855afa9150503d806000811462003882576040519150601f19603f3d011682016040523d82523d6000602084013e62003887565b606091505b509150620038a49050816200389e88602062004e76565b620047c1565b604051630667f9d760e41b81529092506000915060008051602062007b698339815191529063667f9d7090620038e1908b90879060040162004c0c565b6020604051808303816000875af115801562003901573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003927919062004dd4565b90508082146200394b5760405162461bcd60e51b8152600401620007e69062005059565b6040516370ca10bb60e01b815260008051602062007b69833981519152906370ca10bb9062003983908b9087908e90600401620050f4565b600060405180830381600087803b1580156200399e57600080fd5b505af1158015620039b3573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620039e860028b01600062004859565b896004016000905550505050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606060008251602062003a31919062004e76565b67ffffffffffffffff81111562003a4c5762003a4c62004938565b6040519080825280601f01601f19166020018201604052801562003a77576020820181803683370190505b50905060005b8351811015620007ef57600084828151811062003a9e5762003a9e62005115565b60200260200101519050808260200260200184015250808062003ac19062004d70565b91505062003a7d565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562003b3c57602002820191906000526020600020905b81548152602001906001019080831162003b27575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062003b88925085918791016200501d565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562003c27576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162003bf79185918791016200501d565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362003c358362003a1d565b60405160200162003c4892919062004e43565b604051602081830303815290604052905060008051602062007b8983398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003ca757600080fd5b505af115801562003cbc573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162003cdd919062004e25565b600060405180830381855afa9150503d806000811462003d1a576040519150601f19603f3d011682016040523d82523d6000602084013e62003d1f565b606091505b50915062003d369050816200389e87602062004e76565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062007b69833981519152906365bc9481906024016000604051808303816000875af115801562003d93573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003dbd9190810190620051b4565b50905080516001036200408657600060008051602062007b8983398151915260001c6001600160a01b031663667f9d70898460008151811062003e045762003e0462005115565b60200260200101516040518363ffffffff1660e01b815260040162003e2b92919062004c0c565b6020604051808303816000875af115801562003e4b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e71919062004dd4565b90508062003ed5577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062003eb15762003eb162005115565b602002602001015160001c60405162003ecc92919062004c0c565b60405180910390a15b80831462003ef75760405162461bcd60e51b8152600401620007e69062005059565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162003f2f9291906200501d565b604051602081830303815290604052805190602001208560008151811062003f5b5762003f5b62005115565b602002602001015160001c60405162003f78949392919062005215565b60405180910390a18160008151811062003f965762003f9662005115565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262003fe1918a918c91016200501d565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916200404b918a918c91016200501d565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062004644565b600181511115620045d35760005b8151811015620045cc57600060008051602062007b8983398151915260001c6001600160a01b031663667f9d708a858581518110620040d757620040d762005115565b60200260200101516040518363ffffffff1660e01b8152600401620040fe92919062004c0c565b6020604051808303816000875af11580156200411e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004144919062004dd4565b905080620041a7577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062004183576200418362005115565b602002602001015160001c6040516200419e92919062004c0c565b60405180910390a15b60008051602062007b8983398151915260001c6001600160a01b03166370ca10bb8a858581518110620041de57620041de62005115565b602002602001015161133760f01b6040518463ffffffff1660e01b81526004016200420c93929190620050f4565b600060405180830381600087803b1580156200422757600080fd5b505af11580156200423c573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516200425e919062004e25565b600060405180830381855afa9150503d80600081146200429b576040519150601f19603f3d011682016040523d82523d6000602084013e620042a0565b606091505b509092509050620042b8816200389e8b602062004e76565b9550818015620042cc575061133760f01b86145b156200451f577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200430a9291906200501d565b6040516020818303038152906040528051906020012088888151811062004335576200433562005115565b602002602001015160001c60405162004352949392919062005215565b60405180910390a18484815181106200436f576200436f62005115565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092620043ba918d918f91016200501d565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620044479291906200501d565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602062007b8983398151915260001c6001600160a01b03166370ca10bb8c878781518110620044b957620044b962005115565b6020026020010151866040518463ffffffff1660e01b8152600401620044e293929190620050f4565b600060405180830381600087803b158015620044fd57600080fd5b505af115801562004512573d6000803e3d6000fd5b50505050505050620045cc565b60008051602062007b8983398151915260001c6001600160a01b03166370ca10bb8c87878151811062004556576200455662005115565b6020026020010151866040518463ffffffff1660e01b81526004016200457f93929190620050f4565b600060405180830381600087803b1580156200459a57600080fd5b505af1158015620045af573d6000803e3d6000fd5b505050505050508080620045c39062004d70565b91505062004094565b5062004644565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401620007e6565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620046889188918a91016200501d565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620047175760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401620007e6565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200474860028a01600062004859565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200478e9188918a91016200501d565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111620047d8578451620047db565b60205b905060005b818110156200484157620047f681600862004e76565b8662004803838862004db9565b8151811062004816576200481662005115565b01602001516001600160f81b031916901c929092179180620048388162004d70565b915050620047e0565b5090949350505050565b612923806200524683390190565b50805460008255906000526020600020908101906200337f91905b808211156200488a576000815560010162004874565b5090565b6001600160a01b03811681146200337f57600080fd5b60008060408385031215620048b857600080fd5b8235620048c5816200488e565b946020939093013593505050565b600060208284031215620048e657600080fd5b8135620048f3816200488e565b9392505050565b600080604083850312156200490e57600080fd5b82356200491b816200488e565b915060208301356200492d816200488e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200497a576200497a62004938565b604052919050565b600067ffffffffffffffff8211156200499f576200499f62004938565b50601f01601f191660200190565b6000620049c4620049be8462004982565b6200494e565b9050828152838383011115620049d957600080fd5b828260208301376000602084830101529392505050565b600082601f83011262004a0257600080fd5b620048f383833560208501620049ad565b6000806040838503121562004a2757600080fd5b823567ffffffffffffffff8082111562004a4057600080fd5b62004a4e86838701620049f0565b9350602085013591508082111562004a6557600080fd5b508301601f8101851362004a7857600080fd5b62004a8985823560208401620049ad565b9150509250929050565b60006020828403121562004aa657600080fd5b5035919050565b60008060006060848603121562004ac357600080fd5b833562004ad0816200488e565b9250602084013562004ae2816200488e565b929592945050506040919091013590565b60008060006060848603121562004b0957600080fd5b505081359360208301359350604090920135919050565b80151581146200337f57600080fd5b6000806000806080858703121562004b4657600080fd5b843562004b53816200488e565b9350602085013562004b65816200488e565b925060408501359150606085013562004b7e8162004b20565b939692955090935050565b60006020828403121562004b9c57600080fd5b813567ffffffffffffffff81111562004bb457600080fd5b62004bc284828501620049f0565b949350505050565b60008060006060848603121562004be057600080fd5b8335925060208401359150604084013561ffff8116811462004c0157600080fd5b809150509250925092565b6001600160a01b03929092168252602082015260400190565b60005b8381101562004c4257818101518382015260200162004c28565b83811115620004595750506000910152565b602081526000825180602084015262004c7581604085016020870162004c25565b601f01601f19169190910160400192915050565b600062004c9a620049be8462004982565b905082815283838301111562004caf57600080fd5b620048f383602083018462004c25565b60006020828403121562004cd257600080fd5b815167ffffffffffffffff81111562004cea57600080fd5b8201601f8101841362004cfc57600080fd5b62004bc28482516020840162004c89565b6000835162004d2181846020880162004c25565b83519083019062004d3781836020880162004c25565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562004d6b5762004d6b62004d40565b500390565b60006001820162004d855762004d8562004d40565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008262004db45762004db462004d8c565b500690565b6000821982111562004dcf5762004dcf62004d40565b500190565b60006020828403121562004de757600080fd5b5051919050565b60006020828403121562004e0157600080fd5b8151620048f38162004b20565b60008262004e205762004e2062004d8c565b500490565b6000825162004e3981846020870162004c25565b9190910192915050565b6001600160e01b031983168152815160009062004e6881600485016020870162004c25565b919091016004019392505050565b600081600019048311821515161562004e935762004e9362004d40565b500290565b634e487b7160e01b600052600160045260246000fd5b6020808252600c908201526b213abc90333a1032b93937b960a11b604082015260600190565b60208082526013908201527229b2b6361027b93232b910333a1032b93937b960691b604082015260600190565b805167ffffffffffffffff811681146200140557600080fd5b6000806000806000806000806000806101408b8d03121562004f3b57600080fd5b8a5162004f488162004b20565b60208c0151909a5062004f5b8162004b20565b985062004f6b60408c0162004f01565b975062004f7b60608c0162004f01565b965060808b015162004f8d816200488e565b60a08c015190965062004fa0816200488e565b8095505060c08b0151935060e08b015192506101008b015191506101208b015162004fcb816200488e565b809150509295989b9194979a5092959850565b60008060006060848603121562004ff457600080fd5b835160ff811681146200500657600080fd5b602085015160409095015190969495509392505050565b825160009082906020808701845b8381101562005049578151855293820193908201906001016200502b565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600082601f8301126200513d57600080fd5b8151602067ffffffffffffffff8211156200515c576200515c62004938565b8160051b6200516d8282016200494e565b92835284810182019282810190878511156200518857600080fd5b83870192505b84831015620051a9578251825291830191908301906200518e565b979650505050505050565b60008060408385031215620051c857600080fd5b825167ffffffffffffffff80821115620051e157600080fd5b620051ef868387016200512b565b935060208501519150808211156200520657600080fd5b5062004a89858286016200512b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60806040523480156200001157600080fd5b506040516200292338038062002923833981016040819052620000349162000186565b6200003f3362000119565b600180556103e861ffff821611156200005757600080fd5b6006805460018181019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b039586166001600160a01b0319918216811790925560078054959096169416939093179093556040805160608101825284815261ffff928316602082810191825260008385018181529681526004909152929092209051815492519093166101000262ffff00199315159390931662ffffff19909216919091179190911781559051910155620001da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018157600080fd5b919050565b6000806000606084860312156200019c57600080fd5b620001a78462000169565b9250620001b76020850162000169565b9150604084015161ffff81168114620001cf57600080fd5b809150509250925092565b61273980620001ea6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063d48bfca711610071578063d48bfca7146102f8578063d59a83bb1461030b578063de8645e61461031e578063f110fb5614610331578063f2fde38b1461034457600080fd5b80638da5cb5b146102875780639a83aa8b146102ac5780639ead7222146102bf578063d28c3a9b146102d2578063d38d0b45146102e557600080fd5b80634303d9d9116100f45780634303d9d9146101895780636afb2a55146102035780636bdf6b3914610259578063715018a61461026c5780638705fcd41461027457600080fd5b806308b4e2a61461012657806319f373611461013b5780631ac3ddeb1461016357806330f738be14610176575b600080fd5b6101396101343660046121b0565b610357565b005b61014e6101493660046121f7565b610904565b60405190151581526020015b60405180910390f35b6101396101713660046121f7565b6109c3565b610139610184366004612226565b610adc565b61019c61019736600461225d565b610b5b565b604080519a15158b5298151560208b01526001600160401b03978816988a01989098529490951660608801526001600160a01b03928316608088015290821660a087015260c086015260e0850192909252610100840152166101208201526101400161015a565b6102396102113660046121f7565b6004602052600090815260409020805460019091015460ff821691610100900461ffff169083565b60408051931515845261ffff90921660208401529082015260600161015a565b61013961026736600461229a565b610be8565b61013961108c565b6101396102823660046121f7565b6110a0565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161015a565b6101396102ba366004612312565b6110ca565b6102946102cd366004612347565b61157a565b6101396102e0366004612360565b6115a4565b6101396102f33660046123c1565b6119c2565b6101396103063660046121f7565b611aa2565b61019c61031936600461225d565b611b48565b61013961032c3660046123ff565b611b64565b61029461033f366004612347565b612008565b6101396103523660046121f7565b612018565b6002600154036103825760405162461bcd60e51b815260040161037990612445565b60405180910390fd5b600260015561039083610904565b6103ac5760405162461bcd60e51b81526004016103799061247c565b6000826103f9576001600160a01b038416600090815260036020526040902080546001600160401b0384169081106103e6576103e66124a4565b906000526020600020906007020161043b565b6001600160a01b038416600090815260026020526040902080546001600160401b03841690811061042c5761042c6124a4565b90600052602060002090600702015b6040805161014081018252825460ff80821615158352610100808304909116151560208401526001600160401b03620100008304811694840194909452600160501b909104909216606082015260018301546001600160a01b03908116608083018190526002850154821660a0840152600385015460c0840152600485015460e08401526005850154938301939093526006909301549092166101208301529091503314806104f6575060a08101516001600160a01b031633145b6105385760405162461bcd60e51b815260206004820152601360248201527210d85b98d95b081d5b985d5d1a1bdc9a5e9959606a1b6044820152606401610379565b60008152821561071d5761010081015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b0385169063a9059cbb906044016020604051808303816000875af1158015610596573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ba91906124ba565b506001600160a01b038416600090815260026020526040902080548291906001600160401b0385169081106105f1576105f16124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517f9b3589e58cfaae811e95372b148d4048358e808d0c0af452b23f9d4620f8a23e906107109083906124d7565b60405180910390a16108fa565b61012081015160e082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b91906124ba565b506001600160a01b038416600090815260036020526040902080548291906001600160401b0385169081106107d2576107d26124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e0860151600484015593850151600583015561012090940151600690910180549093169316929092179055517fb95b9053e8e235c5fb04aa72707d183a8eba7f5f7847a660f916fdf159927cc8906108f19083906124d7565b60405180910390a15b5050600180555050565b600080600580548060200260200160405190810160405280929190818152602001828054801561095d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161093f575b505083519394506000925050505b818110156109b857846001600160a01b031683828151811061098f5761098f6124a4565b60200260200101516001600160a01b0316036109b057506001949350505050565b60010161096b565b506000949350505050565b6109cb612091565b6001600160a01b038181166000818152600460208181526040928390208351606081018552815460ff811615158252610100900461ffff169281019290925260010154818401819052600754935163a9059cbb60e01b81529390951691830191909152602482019390935263a9059cbb906044016020604051808303816000875af1158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906124ba565b50600060408083018281526001600160a01b03909416825260046020908152912082518154929093015161ffff166101000262ffff00199315159390931662ffffff19909216919091179190911781559051600190910155565b610ae4612091565b6101f48261ffff1610610b285760405162461bcd60e51b815260206004820152600c60248201526b08ccaca40a8dede40d0d2ced60a31b6044820152606401610379565b6001600160a01b03166000908152600460205260409020805461ffff9092166101000262ffff0019909216919091179055565b60026020528160005260406000208181548110610b7757600080fd5b6000918252602090912060079091020180546001820154600283015460038401546004850154600586015460069096015460ff808716995061010087041697506001600160401b03620100008704811697600160501b90970416956001600160a01b0395861695948516949091168a565b600260015403610c0a5760405162461bcd60e51b815260040161037990612445565b60026001556103e88511610c545760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b610c5d88610904565b610ca05760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0387166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252610d325760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6001600160a01b0389166000818152600260205260409081902054905163cfac414b60e01b815290919063cfac414b90610d7c90339030908d908c908c908c908c906004016125a5565b600060405180830381600087803b158015610d9657600080fd5b505af1158015610daa573d6000803e3d6000fd5b505050506000610dbe8884602001516120eb565b9050600260008c6001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507f3b24c5db8e1f8aaec17cd20d4e148ad8ee3909fd0c9a1f6a86b1e900a49ef6b7604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b03168152602001336001600160a01b0316815260200160006001600160a01b031681526020018381526020018a81526020018b81526020018c6001600160a01b031681525060405161107391906124d7565b60405180910390a1505060018055505050505050505050565b611094612091565b61109e6000612121565b565b6110a8612091565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036110ec5760405162461bcd60e51b815260040161037990612445565b60026001556110fa82610904565b6111165760405162461bcd60e51b81526004016103799061247c565b6001600160a01b038216600090815260026020526040812080546001600160401b038416908110611149576111496124a4565b600091825260209182902060408051610140810182526007909302909101805460ff80821615158086526101008084049092161515968601969096526001600160401b03620100008304811694860194909452600160501b909104909216606084015260018101546001600160a01b0390811660808501526002820154811660a0850152600382015460c0850152600482015460e0850152600582015492840192909252600601541661012082015291506112345760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b3360a08201819052600160208301526000825261012082015160e08301516040516323b872dd60e01b8152600481019390935230602484015260448301526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c891906124ba565b508061012001516001600160a01b031663a9059cbb82608001518360c001518460e001516112f691906125fc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136591906124ba565b5060c08101516101208201516001600160a01b03166000908152600460205260408120600101805490919061139b908490612613565b90915550506001600160a01b038316600090815260026020526040902080548291906001600160401b0385169081106113d6576113d66124a4565b6000918252602091829020835160079290920201805492840151604080860151606087015161ffff1990961694151561ff0019169490941761010092151583021762010000600160901b031916620100006001600160401b039586160267ffffffffffffffff60501b191617600160501b949095169390930293909317815560808401516001820180546001600160a01b03199081166001600160a01b039384161790915560a0860151600284018054831691841691909117905560c0860151600384015560e086015160048085019190915585870151600585015561012090960151600690930180549091169282169290921790915591840151905163a9059cbb60e01b81523393810193909352602483015284169063a9059cbb906044016020604051808303816000875af1158015611515573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153991906124ba565b507fb6432e18a59c31eafbe7fea705a495b38ea4992c69bdc678262b38ddc31c2d218160405161156991906124d7565b60405180910390a150506001805550565b6005818154811061158a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6002600154036115c65760405162461bcd60e51b815260040161037990612445565b60026001556115d486610904565b6115f05760405162461bcd60e51b81526004016103799061247c565b6001600160a01b038616600090815260036020526040812080546001600160401b038816908110611623576116236124a4565b60009182526020909120600790910201805490915060ff166116755760405162461bcd60e51b815260206004820152600b60248201526a13dc99195c90db1bdcd95960aa1b6044820152606401610379565b60028101546001600160a01b03166116bf5760405162461bcd60e51b815260206004820152600d60248201526c57726f6e67206164647265737360981b6044820152606401610379565b6001810180546001600160a01b03191633908117909155815461ffff19166101001782556002820154600583015460405163cfac414b60e01b81526001600160a01b038b81169463cfac414b946117259491939216918b908b908b908b906004016125a5565b600060405180830381600087803b15801561173f57600080fd5b505af1158015611753573d6000803e3d6000fd5b5050506006820154600383015460048401546001600160a01b03909216925063a9059cbb913391611783916125fc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156117ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f291906124ba565b50600381015460068201546001600160a01b031660009081526004602052604081206001018054909190611827908490612613565b90915550506001600160a01b038716600090815260036020526040902080548291906001600160401b038916908110611862576118626124a4565b600091825260209091208254600790920201805460ff928316151560ff19821681178355845461010090819004909416151590930261ff001990931661ffff19909116179190911780825582546001600160401b036201000091829004811690910269ffffffffffffffff0000198316811784558454600160501b9081900490921690910267ffffffffffffffff60501b1990911662010000600160901b03199092169190911717815560018083015490820180546001600160a01b03199081166001600160a01b03938416179091556002808501549084018054831691841691909117905560038085015490840155600480850154908401556005808501549084015560069384015493909201805490921692169190911790556040517f127e23dc5aa74346dfbee84f2e6e25abf5f06e34ad3beea66e7363e53ff51359906119ad90839061262b565b60405180910390a15050600180555050505050565b6119ca612091565b6001600160a01b03831660009081526004602052604090205460ff16611a3657600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0385161790555b60408051606081018252600180825261ffff94851660208084019182528385019586526001600160a01b0397909716600090815260049097529290952090518154925162ffffff1990931690151562ffff00191617610100929094169190910292909217825551910155565b611aaa612091565b611ab381610904565b15611af65760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610379565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b60036020528160005260406000208181548110610b7757600080fd5b600260015403611b865760405162461bcd60e51b815260040161037990612445565b60026001556103e88111611bd05760405162461bcd60e51b815260206004820152601160248201527053656c6c507269636520746f6f206c6f7760781b6044820152606401610379565b611bd984610904565b611c1c5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88139bdd08149959da5cdd195c995960621b6044820152606401610379565b6001600160a01b0383166000908152600460209081526040918290208251606081018452815460ff8116151580835261010090910461ffff169382019390935260019091015492810192909252611cae5760405162461bcd60e51b815260206004820152601660248201527510dd5c9c995b98de481b9bdd081d1bdb195c985d195960521b6044820152606401610379565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015611d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2591906124ba565b506001600160a01b038516600090815260036020908152604082205490830151909190611d539085906120eb565b905060036000886001600160a01b03166001600160a01b03168152602001908152602001600020604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b0316815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001600a6101000a8154816001600160401b0302191690836001600160401b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015560e0820151816004015561010082015181600501556101208201518160060160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050507fa23adb6634e58bf746cbb87e2f83ff7c3ba3201ab3f5f6cd04188a2acda98450604051806101400160405280600115158152602001600015158152602001846001600160401b03168152602001426001600160401b0316815260200160006001600160a01b03168152602001336001600160a01b03168152602001838152602001868152602001878152602001886001600160a01b03168152506040516119ad91906124d7565b6006818154811061158a57600080fd5b612020612091565b6001600160a01b0381166120855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610379565b61208e81612121565b50565b6000546001600160a01b0316331461109e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b6000808261ffff16116120ff57600061211a565b6103e861211061ffff8416856126c2565b61211a91906126e1565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461208e57600080fd5b801515811461208e57600080fd5b80356001600160401b03811681146121ab57600080fd5b919050565b6000806000606084860312156121c557600080fd5b83356121d081612171565b925060208401356121e081612186565b91506121ee60408501612194565b90509250925092565b60006020828403121561220957600080fd5b813561211a81612171565b803561ffff811681146121ab57600080fd5b6000806040838503121561223957600080fd5b61224283612214565b9150602083013561225281612171565b809150509250929050565b6000806040838503121561227057600080fd5b823561227b81612171565b946020939093013593505050565b803560ff811681146121ab57600080fd5b600080600080600080600080610100898b0312156122b757600080fd5b88356122c281612171565b975060208901356122d281612171565b96506040890135955060608901359450608089013593506122f560a08a01612289565b925060c0890135915060e089013590509295985092959890939650565b6000806040838503121561232557600080fd5b823561233081612171565b915061233e60208401612194565b90509250929050565b60006020828403121561235957600080fd5b5035919050565b60008060008060008060c0878903121561237957600080fd5b863561238481612171565b955061239260208801612194565b9450604087013593506123a760608801612289565b92506080870135915060a087013590509295509295509295565b6000806000606084860312156123d657600080fd5b83356123e181612171565b92506123ef60208501612214565b9150604084013590509250925092565b6000806000806080858703121561241557600080fd5b843561242081612171565b9350602085013561243081612171565b93969395505050506040820135916060013590565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600e908201526d151bdad95b88155b9b1a5cdd195960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156124cc57600080fd5b815161211a81612186565b815115158152610140810160208301516124f5602084018215159052565b50604083015161251060408401826001600160401b03169052565b50606083015161252b60608401826001600160401b03169052565b50608083015161254660808401826001600160a01b03169052565b5060a083015161256160a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e08301526101008084015181840152506101208084015161259d828501826001600160a01b03169052565b505092915050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b634e487b7160e01b600052601160045260246000fd5b60008282101561260e5761260e6125e6565b500390565b60008219821115612626576126266125e6565b500190565b815460ff81161515825261014082019061264f6020840160ff8360081c1615159052565b6001600160401b03601082901c8116604085015260509190911c16606083015260018301546001600160a01b0390811660808401526002840154811660a0840152600384015460c0840152600484015460e084015260058401546101008401526006909301549092166101209091015290565b60008160001904831182151516156126dc576126dc6125e6565b500290565b6000826126fe57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122010a13cf6261ffa87954c3a4d8337a1fba370e1c791a42665350c25f27dadde7364736f6c634300080e00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220fdf0786e950de76106aa83ff5bb7b0a57d86aff15e7aa50627f913d7c15c50b764736f6c634300080e0033",
    "sourceMap": "223:6065:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;995:54;;;:::i;:::-;;1979:116:2;;;;;;:::i;:::-;;:::i;1326:96::-;;;;;;:::i;:::-;;:::i;1540:120::-;;;;;;:::i;:::-;;:::i;5041:455::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3129:32:31;;;3111:51;;3099:2;3084:18;5041:455:2;;;;;;;;1178:85;;;;;;:::i;:::-;;:::i;288:38:1:-;;-1:-1:-1;;;;;;;;;;;288:38:1;;2350:140:2;;;;;;:::i;:::-;;:::i;4313:568::-;;;;;;:::i;:::-;;:::i;:::-;;;4505:25:31;;;4493:2;4478:18;4313:568:2;4359:177:31;3279:107:2;;;;;;:::i;:::-;;:::i;1053:323:30:-;;;;;;:::i;:::-;;:::i;1867:106:2:-;;;;;;:::i;:::-;;:::i;3392:915::-;;;;;;:::i;:::-;;:::i;5502:406::-;;;;;;:::i;:::-;;:::i;1666:130::-;;;;;;:::i;:::-;;:::i;1089:83::-;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;5753:14:31;;5746:22;5728:41;;5716:2;5701:18;1819:584:0;5588:187:31;3074:81:2;;;;;;:::i;:::-;;:::i;2214:130::-;;;;;;:::i;:::-;;:::i;2642:341::-;;;;;;:::i;:::-;;:::i;3072:2272:30:-;;;;;;:::i;:::-;;:::i;1428:106:2:-;;;;;;:::i;:::-;;:::i;1414:1654:30:-;;;;;;:::i;:::-;;:::i;1572:26:0:-;;;;;;;;;995:54:30;1025:19;;-1:-1:-1;;;1025:19:30;;1033:10;1025:19;;;4505:25:31;-1:-1:-1;;;;;;;;;;;217:64:1;1025:7:30;;4478:18:31;;1025:19:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;995:54::o;1979:116:2:-;2042:18;;-1:-1:-1;;;2042:18:2;;-1:-1:-1;;;;;;;;;;;217:64:1;2042:7:2;;:18;;2050:3;;2055:4;;2042:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2070:18:2;;-1:-1:-1;;;2070:18:2;;-1:-1:-1;;;;;3129:32:31;;2070:18:2;;;3111:51:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2070:13:2;;-1:-1:-1;3084:18:31;;2070::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1979:116;;:::o;1326:96::-;1370:22;;-1:-1:-1;;;1370:22:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1370:7:2;;:22;;1378:3;;-1:-1:-1;;;1383:8:2;1370:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1402:13:2;;-1:-1:-1;;;1402:13:2;;-1:-1:-1;;;;;3129:32:31;;1402:13:2;;;3111:51:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1402:8:2;;-1:-1:-1;3084:18:31;;1402:13:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:96;:::o;1540:120::-;1600:22;;-1:-1:-1;;;1600:22:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1600:7:2;;:22;;1608:3;;-1:-1:-1;;;1613:8:2;1600:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1632:21:2;;-1:-1:-1;;;1632:21:2;;-1:-1:-1;;;;;7226:15:31;;;1632:21:2;;;7208:34:31;7278:15;;7258:18;;;7251:43;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1632:8:2;;-1:-1:-1;7143:18:31;;1632:21:2;6996:304:31;5041:455:2;5201:16;;-1:-1:-1;;;5201:16:2;;5132:12;;;;-1:-1:-1;;;;;;;;;;;217:64:1;5201:10:2;;:16;;5212:4;;5201:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5201:16:2;;;;;;;;;;;;:::i;:::-;5219:4;5184:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5160:64;;5345:8;5339:15;5332:4;5322:8;5318:19;5315:1;5308:47;5300:55;-1:-1:-1;;;;;;5396:18:2;;5375:114;;;;-1:-1:-1;;;5375:114:2;;9404:2:31;5375:114:2;;;9386:21:31;9443:2;9423:18;;;9416:30;9482:34;9462:18;;;9455:62;-1:-1:-1;;;9533:18:31;;;9526:47;9590:19;;5375:114:2;;;;;;;;;5150:346;5041:455;;;;:::o;1178:85::-;-1:-1:-1;;;;;;;;;;;1225:7:2;1233:22;1251:4;1233:15;:22;:::i;:::-;1225:31;;;;;;;;;;;;;4505:25:31;;4493:2;4478:18;;4359:177;2350:140:2;2429:18;;-1:-1:-1;;;2429:18:2;;-1:-1:-1;;;;;;;;;;;217:64:1;2429:7:2;;:18;;2437:3;;2442:4;;2429:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2457:26:2;;-1:-1:-1;;;2457:26:2;;-1:-1:-1;;;;;7226:15:31;;;2457:26:2;;;7208:34:31;7278:15;;7258:18;;;7251:43;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2457:13:2;;-1:-1:-1;7143:18:31;;2457:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2350:140;;;:::o;4313:568::-;4381:14;4422:3;4415;:10;;4407:81;;;;-1:-1:-1;;;4407:81:2;;10084:2:31;4407:81:2;;;10066:21:31;10123:2;10103:18;;;10096:30;10162:34;10142:18;;;10135:62;10233:28;10213:18;;;10206:56;10279:19;;4407:81:2;9882:422:31;4407:81:2;4499:12;4514:9;4520:3;4514;:9;:::i;:::-;4499:24;;4538:4;4546:1;4538:9;4534:287;;4580:3;4571:12;;4534:287;;;-1:-1:-1;;4612:4:2;:19;4608:213;;4664:1;4655:10;;4608:213;;;4712:6;;;:::i;:::-;;-1:-1:-1;4756:11:2;4770:8;4712:6;4770:1;:8;:::i;:::-;4756:22;-1:-1:-1;4801:9:2;4756:22;4801:3;:9;:::i;:::-;4792:18;;4698:123;4608:213;4836:38;;;11043:21:31;;;11100:2;11080:18;;;11073:30;-1:-1:-1;;;11134:2:31;11119:18;;11112:42;11221:4;11206:20;;11199:36;;;4836:38:2;;;;;;;11186:3:31;4836:38:2;;;4397:484;4313:568;;;;;:::o;3279:107::-;3351:28;3356:5;3363:2;3367:4;3373:5;3351:4;:28::i;:::-;3279:107;;;:::o;1053:323:30:-;1103:6;;:17;;-1:-1:-1;;;1103:17:30;;:6;:17;;;4505:25:31;-1:-1:-1;;;;;1103:6:30;;;;:14;;4478:18:31;;1103:17:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1126:6:30;;:25;;-1:-1:-1;;;1126:25:30;;1145:5;1126:25;;;11593:42:31;-1:-1:-1;;;;;1126:6:30;;;;-1:-1:-1;1126:18:30;;-1:-1:-1;11566:18:31;;1126:25:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1180:6:30;;:19;;;-1:-1:-1;;;1180:19:30;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1157:9:30;;-1:-1:-1;;;;;;1180:6:30;;;;:17;;:19;;;;;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1157:43;;-1:-1:-1;;;;;;1157:43:30;;;;;;;1167:32;;;1157:43;;;5728:41:31;5701:18;;1157:43:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1220:5:30;;1206:20;;-1:-1:-1;;;1206:20:30;;-1:-1:-1;;;;;1220:5:30;;;1206:20;;;3111:51:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1206:13:30;;-1:-1:-1;3084:18:31;;1206:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1232:6:30;;1244:5;;1232:30;;-1:-1:-1;;;1232:30:30;;-1:-1:-1;;;;;1232:6:30;;;;-1:-1:-1;1232:11:30;;-1:-1:-1;1232:30:30;;1244:5;;;;1251:10;;1232:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1268:6:30;;1291;;1268:43;;-1:-1:-1;;;1268:43:30;;-1:-1:-1;;;;;1268:6:30;;;;-1:-1:-1;1268:14:30;;-1:-1:-1;1268:43:30;;1291:6;;;;1300:10;;1268:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1317:6:30;;1328:5;;-1:-1:-1;;;;;1317:6:30;;;;:10;;1328:5;1335:15;1348:2;1335:10;:15;:::i;:::-;1317:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1357:14:30;;;-1:-1:-1;;;1357:14:30;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1357:12:30;;-1:-1:-1;1357:14:30;;;;;241:37:1;;1357:14:30;;;;;;;241:37:1;217:64;1357:14:30;;;;;;;;;;1867:106:2;1916:22;;-1:-1:-1;;;1916:22:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1916:7:2;;:22;;1924:3;;-1:-1:-1;;;1929:8:2;1916:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1948:18:2;;-1:-1:-1;;;1948:18:2;;-1:-1:-1;;;;;3129:32:31;;1948:18:2;;;3111:51:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1948:13:2;;-1:-1:-1;3084:18:31;;1948::2;2965:203:31;3392:915:2;3546:38;;;-1:-1:-1;;;;;3129:32:31;;;3546:38:2;;;;3111:51:31;;;;3546:38:2;;;;;;;;;;3084:18:31;;;;3546:38:2;;;;;;;-1:-1:-1;;;;;3546:38:2;-1:-1:-1;;;3546:38:2;;;3535:50;;3511:20;;3535:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3508:77;;;3595:15;3624:7;3613:30;;;;;;;;;;;;:::i;:::-;3595:48;-1:-1:-1;3680:123:2;3798:4;3680:90;3767:2;3680:64;-1:-1:-1;;;3680:35:2;:8;3709:5;3680:28;:35::i;:::-;:52;18902:9;;;:16;;-1:-1:-1;;18902:16:2;;;;;;;;;;;;:9;18803:143;3680:64;:86;19218:10;;;:47;;;;;;;-1:-1:-1;19218:47:2;;;;;;;-1:-1:-1;;;;;19242:21:2;;;;19218:47;;;:10;19114:179;3680:90;:117;;:123::i;:::-;3848:6;3845:456;;;3910:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3910:34:2;-1:-1:-1;;;3910:34:2;;;3899:46;;3872:23;;-1:-1:-1;;;;;3899:10:2;;;:46;;3910:34;3899:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3869:76;;;3959:14;3987:10;3976:33;;;;;;;;;;;;:::i;:::-;3959:50;;4033:7;4026:4;:14;4023:143;;;4071:14;4081:4;4071:7;:14;:::i;:::-;4060:26;;;;:::i;:::-;;;4023:143;;;4136:14;4143:7;4136:4;:14;:::i;:::-;4125:26;;;;:::i;:::-;;;4023:143;4179:111;4283:6;4179:72;-1:-1:-1;;;4179:39:2;:8;4212:5;4179:32;:39::i;:111::-;3855:446;;3467:840;;3392:915;;;;:::o;5502:406::-;5626:16;;-1:-1:-1;;;5626:16:2;;5574:12;;;;-1:-1:-1;;;;;;;;;;;217:64:1;5626:10:2;;:16;;5637:4;;5626:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5626:16:2;;;;;;;;;;;;:::i;:::-;5602:40;;5763:8;5757:15;5750:4;5740:8;5736:19;5733:1;5726:47;5718:55;-1:-1:-1;;;;;;5814:18:2;;5793:108;;;;-1:-1:-1;;;5793:108:2;;12691:2:31;5793:108:2;;;12673:21:31;12730:2;12710:18;;;12703:30;12769:34;12749:18;;;12742:62;-1:-1:-1;;;12820:18:31;;;12813:41;12871:19;;5793:108:2;12489:407:31;5793:108:2;5592:316;5502:406;;;:::o;1666:130::-;1740:18;;-1:-1:-1;;;1740:18:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1740:7:2;;:18;;1748:3;;1753:4;;1740:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1768:21:2;;-1:-1:-1;;;1768:21:2;;-1:-1:-1;;;;;7226:15:31;;;1768:21:2;;;7208:34:31;7278:15;;7258:18;;;7251:43;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1768:8:2;;-1:-1:-1;7143:18:31;;1768:21:2;6996:304:31;1089:83:2;-1:-1:-1;;;;;;;;;;;1134:7:2;1142:22;1160:4;1142:15;:22;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3074:81:2:-;3131:17;;-1:-1:-1;;;3131:17:2;;-1:-1:-1;;;;;;;;;;;217:64:1;3131:7:2;;:17;;3139:2;;3143:4;;3131:17;;;:::i;2214:130::-;2279:22;;-1:-1:-1;;;2279:22:2;;-1:-1:-1;;;;;;;;;;;217:64:1;2279:7:2;;:22;;2287:3;;-1:-1:-1;;;2292:8:2;2279:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2311:26:2;;-1:-1:-1;;;2311:26:2;;-1:-1:-1;;;;;7226:15:31;;;2311:26:2;;;7208:34:31;7278:15;;7258:18;;;7251:43;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2311:13:2;;-1:-1:-1;7143:18:31;;2311:26:2;6996:304:31;2642:341:2;2718:125;;;;;13859:2:31;13841:21;;;13898:1;13878:18;;;13871:29;-1:-1:-1;;;13931:2:31;13916:18;;13909:37;13984:3;13977:4;13962:20;;13955:33;;;14025:2;14004:19;;;13997:31;14065:34;14059:3;14044:19;;14037:63;14137:34;14131:3;14116:19;;14109:63;14209:32;14203:3;14188:19;;14181:61;14274:3;14259:19;;13556:728;2718:125:2;;;;;;;;2853:123;2971:4;2853:90;2940:2;2853:64;-1:-1:-1;;;2853:35:2;:8;2882:5;2853:28;:35::i;3072:2272:30:-;3173:6;;:17;;-1:-1:-1;;;3173:17:30;;:6;:17;;;4505:25:31;-1:-1:-1;;;;;3173:6:30;;;;:14;;4478:18:31;;3173:17:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3196:6:30;;:25;;-1:-1:-1;;;3196:25:30;;3215:5;3196:25;;;11593:42:31;-1:-1:-1;;;;;3196:6:30;;;;-1:-1:-1;3196:18:30;;-1:-1:-1;11566:18:31;;3196:25:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3227:26;3239:13;3227:11;:26::i;:::-;3259:21;;-1:-1:-1;;;3259:21:30;;3275:4;3269:10;;;;3259:21;;;5728:41:31;-1:-1:-1;;;;;;;;;;;217:64:1;3259:9:30;;5701:18:31;;3259:21:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3315:6:30;;:19;;;-1:-1:-1;;;3315:19:30;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;3286:9:30;;-1:-1:-1;3337:4:30;;-1:-1:-1;;;;;3315:6:30;;:17;;:19;;;;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;:::i;:::-;3314:33;;3345:2;3314:33;:::i;:::-;3296:15;3309:2;3296:10;:15;:::i;:::-;3286:62;;-1:-1:-1;;;;;;3286:62:30;;;;;;;3296:51;-1:-1:-1;3286:62:30;;;5728:41:31;5701:18;;3286:62:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3354:28:30;;-1:-1:-1;;;3354:28:30;;3377:4;3364:17;;3354:28;;;5728:41:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;3354:9:30;;-1:-1:-1;5701:18:31;;3354:28:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3388:23:30;;-1:-1:-1;;;3388:23:30;;3406:4;3398:12;;3388:23;;;5728:41:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;3388:9:30;;-1:-1:-1;5701:18:31;;3388:23:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3435:3:30;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;3417:9:30;;-1:-1:-1;3435:10:30;;3441:4;;3435:10;:::i;:::-;3417:29;;-1:-1:-1;;;;;;3417:29:30;;;;;;;3427:18;;;3417:29;;;5728:41:31;5701:18;;3417:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3488:6:30;;3497;;3472:37;;3452:17;;-1:-1:-1;;;;;;3488:6:30;;;;-1:-1:-1;3497:6:30;;;3505:3;;3472:37;;;:::i;:::-;-1:-1:-1;;;;;14718:15:31;;;14700:34;;14770:15;;;;14765:2;14750:18;;14743:43;14834:6;14822:19;14817:2;14802:18;;14795:47;14650:2;14635:18;3472:37:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3538:6:30;;3515:30;;-1:-1:-1;;;3515:30:30;;-1:-1:-1;;;;;3538:6:30;;;3515:30;;;3111:51:31;3452:57:30;;-1:-1:-1;3515:22:30;;;;;3084:18:31;;3515:30:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3580:6:30;;3558:29;;-1:-1:-1;;;3558:29:30;;-1:-1:-1;;;;;3580:6:30;;;3558:29;;;3111:51:31;3558:21:30;;;;-1:-1:-1;3558:21:30;;-1:-1:-1;3084:18:31;;3558:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3551:37;;;;:::i;:::-;3623:5;;3609:20;;-1:-1:-1;;;3609:20:30;;-1:-1:-1;;;;;3623:5:30;;;3609:20;;;3111:51:31;-1:-1:-1;;;;;;;;;;;217:64:1;3609:13:30;;3084:18:31;;3609:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3635:6:30;;3674:3;;3635:43;;-1:-1:-1;;;3635:43:30;;-1:-1:-1;;;;;3635:6:30;;;;-1:-1:-1;3635:14:30;;-1:-1:-1;3635:43:30;;3658:13;;3674:3;3635:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3684:6:30;;3696:5;;3684:25;;-1:-1:-1;;;3684:25:30;;-1:-1:-1;;;;;3684:6:30;;;;:11;;:25;;3696:5;;;3703;;3684:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3723:6:30;;3740:5;;3723:23;;-1:-1:-1;;;3723:23:30;;-1:-1:-1;;;;;3740:5:30;;;3723:23;;;3111:51:31;3750:5:30;;-1:-1:-1;3723:6:30;;;-1:-1:-1;3723:16:30;;3084:18:31;;3723:23:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;3715:57;;;;-1:-1:-1;;;3715:57:30;;;;;;;:::i;:::-;3813:6;;:20;;;-1:-1:-1;;;3813:20:30;;;;3778:19;;-1:-1:-1;;;;;3813:6:30;;:18;;:20;;;;;;;;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3800:33;;:10;:33;:::i;:::-;3881:6;;3904;;3839:110;;-1:-1:-1;;;3839:110:30;;-1:-1:-1;;;;;3881:6:30;;;3839:110;;;15826:34:31;3904:6:30;;;15876:18:31;;;15869:43;15928:18;;;15921:34;;;15971:18;;;15964:34;;;3778:55:30;;-1:-1:-1;3839:26:30;;;;;15760:19:31;;3839:110:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3963:6:30;;3980:5;;3963:23;;-1:-1:-1;;;3963:23:30;;-1:-1:-1;;;;;3980:5:30;;;3963:23;;;3111:51:31;3963:6:30;;;-1:-1:-1;3963:16:30;;-1:-1:-1;3084:18:31;;3963:23:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;3955:59;;;;-1:-1:-1;;;3955:59:30;;16211:2:31;3955:59:30;;;16193:21:31;16250:2;16230:18;;;16223:30;-1:-1:-1;;;16269:18:31;;;16262:48;16327:18;;3955:59:30;16009:342:31;3955:59:30;4035:6;;:40;;-1:-1:-1;;;4035:40:30;;-1:-1:-1;;;;;3129:32:31;;;4035:40:30;;;3111:51:31;4079:5:30;;4035:6;;:16;;3084:18:31;;4035:40:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;4020:99;;;;-1:-1:-1;;;4020:99:30;;;;;;;:::i;:::-;4125:14;;;-1:-1:-1;;;4125:14:30;;;;-1:-1:-1;;;;;;;;;;;217:64:1;4125:12:30;;:14;;;;;241:37:1;;4125:14:30;;;;;;;241:37:1;217:64;4125:14:30;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4171:5:30;;4157:20;;-1:-1:-1;;;4157:20:30;;-1:-1:-1;;;;;4171:5:30;;;4157:20;;;3111:51:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;4157:13:30;;-1:-1:-1;3084:18:31;;4157:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4183:6:30;;4195:5;;4183:30;;-1:-1:-1;;;4183:30:30;;-1:-1:-1;;;;;4183:6:30;;;;-1:-1:-1;4183:11:30;;-1:-1:-1;4183:30:30;;4195:5;;;;4202:10;;4183:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4219:6:30;;4242;;4219:43;;-1:-1:-1;;;4219:43:30;;-1:-1:-1;;;;;4219:6:30;;;;-1:-1:-1;4219:14:30;;-1:-1:-1;4219:43:30;;4242:6;;;;4251:10;;4219:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4268:6:30;;4279:5;;4268:29;;-1:-1:-1;;;4268:29:30;;-1:-1:-1;;;;;4268:6:30;;;;:10;;:29;;4279:5;;;4286:10;;4268:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4311:6:30;;4328:5;;4311:23;;-1:-1:-1;;;4311:23:30;;-1:-1:-1;;;;;4328:5:30;;;4311:23;;;3111:51:31;4338:11:30;;-1:-1:-1;4311:6:30;;;-1:-1:-1;4311:16:30;;3084:18:31;;4311:23:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;4303:63;;;;-1:-1:-1;;;4303:63:30;;;;;;;:::i;:::-;4428:6;;4443:5;;4505:3;;4373:7;;;;;;4406:117;;-1:-1:-1;;;;;4428:6:30;;;;4443:5;;4464:13;;4486:11;;4516:1;4406:6;:117::i;:::-;4372:151;;;;;;4612:13;4649:14;4671:12;4691:14;4713:20;4744:13;-1:-1:-1;;;;;4744:29:30;;4782:6;;;;;;;;;-1:-1:-1;;;;;4782:6:30;4791:1;4744:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4588:205;;;;;;;;;;;;;;;4823:11;4807:12;:27;4799:50;;;;-1:-1:-1;;;4799:50:30;;18525:2:31;4799:50:30;;;18507:21:31;18564:2;18544:18;;;18537:30;-1:-1:-1;;;18583:18:31;;;18576:40;18633:18;;4799:50:30;18323:334:31;4799:50:30;4863:11;;;;4855:33;;;;-1:-1:-1;;;4855:33:30;;18864:2:31;4855:33:30;;;18846:21:31;18903:1;18883:18;;;18876:29;-1:-1:-1;;;18921:18:31;;;18914:39;18970:18;;4855:33:30;18662:332:31;4855:33:30;4906:5;;4894:18;;-1:-1:-1;;;;;4906:5:30;4894:11;:18::i;:::-;4918:19;4930:6;4918:11;:19::i;:::-;4961:5;;-1:-1:-1;;;;;4951:15:30;;;4961:5;;4951:15;4943:41;;;;-1:-1:-1;;;4943:41:30;;19201:2:31;4943:41:30;;;19183:21:31;19240:2;19220:18;;;19213:30;-1:-1:-1;;;19259:18:31;;;19252:43;19312:18;;4943:41:30;18999:337:31;4943:41:30;5008:5;4998:6;:15;4990:41;;;;-1:-1:-1;;;4990:41:30;;19201:2:31;4990:41:30;;;19183:21:31;19240:2;19220:18;;;19213:30;-1:-1:-1;;;19259:18:31;;;19252:43;19312:18;;4990:41:30;18999:337:31;4990:41:30;5041:7;;;;5037:66;;5082:4;5067:11;;;;:5;:11;:::i;:::-;5066:20;;;;:::i;:::-;5058:4;:28;5050:53;;;;-1:-1:-1;;;5050:53:30;;19543:2:31;5050:53:30;;;19525:21:31;19582:2;19562:18;;;19555:30;-1:-1:-1;;;19601:18:31;;;19594:42;19653:18;;5050:53:30;19341:336:31;5050:53:30;5136:6;;5156:3;;5109:60;;-1:-1:-1;;;5109:60:30;;-1:-1:-1;;;;;5136:6:30;;;5109:60;;;19963:51:31;5136:6:30;20030:18:31;;;20023:59;20098:18;;;20091:34;;;;20173:4;20161:17;;20141:18;;;20134:45;20195:19;;;20188:35;;;20239:19;;;20232:35;;;5109:18:30;;;;;;19935:19:31;;5109:60:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5175:14:30;;;-1:-1:-1;;;5175:14:30;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;5175:12:30;;-1:-1:-1;5175:14:30;;;;;241:37:1;;5175:14:30;;;;;;;241:37:1;217:64;5175:14:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:2177;;;;;;;;;;3072:2272;;;:::o;1428:106:2:-;1486:18;;-1:-1:-1;;;1486:18:2;;-1:-1:-1;;;;;;;;;;;217:64:1;1486:7:2;;:18;;1494:3;;1499:4;;1486:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1514:13:2;;-1:-1:-1;;;1514:13:2;;-1:-1:-1;;;;;3129:32:31;;1514:13:2;;;3111:51:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1514:8:2;;-1:-1:-1;3084:18:31;;1514:13:2;2965:203:31;1414:1654:30;1516:6;;:17;;-1:-1:-1;;;1516:17:30;;:6;:17;;;4505:25:31;-1:-1:-1;;;;;1516:6:30;;;;:14;;4478:18:31;;1516:17:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1539:6:30;;:25;;-1:-1:-1;;;1539:25:30;;1558:5;1539:25;;;11593:42:31;-1:-1:-1;;;;;1539:6:30;;;;-1:-1:-1;1539:18:30;;-1:-1:-1;11566:18:31;;1539:25:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1570:21:30;;-1:-1:-1;;;1570:21:30;;1586:4;1580:10;;;;1570:21;;;5728:41:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1570:9:30;;-1:-1:-1;5701:18:31;;1570:21:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1626:6:30;;:19;;;-1:-1:-1;;;1626:19:30;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1597:9:30;;-1:-1:-1;1648:3:30;;-1:-1:-1;;;;;1626:6:30;;:17;;:19;;;;;;;;;;;;;;:6;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:25;;;;:::i;:::-;1625:32;;1655:2;1625:32;:::i;:::-;1607:15;1620:2;1607:10;:15;:::i;:::-;1597:61;;-1:-1:-1;;;;;;1597:61:30;;;;;;;1607:50;-1:-1:-1;1597:61:30;;;5728:41:31;5701:18;;1597:61:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1664:28:30;;-1:-1:-1;;;1664:28:30;;1687:4;1674:17;;1664:28;;;5728:41:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1664:9:30;;-1:-1:-1;5701:18:31;;1664:28:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1698:23:30;;-1:-1:-1;;;1698:23:30;;1716:4;1708:12;;1698:23;;;5728:41:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1698:9:30;;-1:-1:-1;5701:18:31;;1698:23:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1745:3:30;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;1727:9:30;;-1:-1:-1;1745:10:30;;1751:4;;1745:10;:::i;:::-;1727:29;;-1:-1:-1;;;;;;1727:29:30;;;;;;;1737:18;;;1727:29;;;5728:41:31;5701:18;;1727:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1799:6:30;;1808;;1783:37;;1762:18;;-1:-1:-1;;;;;;1799:6:30;;;;-1:-1:-1;1808:6:30;;;1816:3;;1783:37;;;:::i;:::-;-1:-1:-1;;;;;14718:15:31;;;14700:34;;14770:15;;;;14765:2;14750:18;;14743:43;14834:6;14822:19;14817:2;14802:18;;14795:47;14650:2;14635:18;1783:37:30;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1850:6:30;;1826:31;;-1:-1:-1;;;1826:31:30;;-1:-1:-1;;;;;1850:6:30;;;1826:31;;;3111:51:31;1762:58:30;;-1:-1:-1;1826:23:30;;;;;3084:18:31;;1826:31:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1893:6:30;;1870:30;;-1:-1:-1;;;1870:30:30;;-1:-1:-1;;;;;1893:6:30;;;1870:30;;;3111:51:31;1870:22:30;;;;-1:-1:-1;1870:22:30;;-1:-1:-1;3084:18:31;;1870:30:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1863:38;;;;:::i;:::-;1957:6;;:20;;;-1:-1:-1;;;1957:20:30;;;;1922:19;;-1:-1:-1;;;;;1957:6:30;;:18;;:20;;;;;;;;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1944:33;;:10;:33;:::i;:::-;1997:5;;1983:20;;-1:-1:-1;;;1983:20:30;;-1:-1:-1;;;;;1997:5:30;;;1983:20;;;3111:51:31;1922:55:30;;-1:-1:-1;;;;;;;;;;;;217:64:1;1983:13:30;;3084:18:31;;1983:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2009:6:30;;2032;;2041:3;;2009:36;;-1:-1:-1;;;2009:36:30;;-1:-1:-1;;;;;2009:6:30;;;;-1:-1:-1;2009:14:30;;-1:-1:-1;2009:36:30;;2032:6;;;;2009:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2051:6:30;;2063:5;;2051:30;;-1:-1:-1;;;2051:30:30;;-1:-1:-1;;;;;2051:6:30;;;;:11;;:30;;2063:5;;;2070:10;;2051:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2087:6:30;;2098:5;;2087:29;;-1:-1:-1;;;2087:29:30;;-1:-1:-1;;;;;2087:6:30;;;;-1:-1:-1;2087:10:30;;-1:-1:-1;2087:29:30;;2098:5;;;;2105:10;;2087:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2130:6:30;;2147:5;;2130:23;;-1:-1:-1;;;2130:23:30;;-1:-1:-1;;;;;2147:5:30;;;2130:23;;;3111:51:31;2157:11:30;;-1:-1:-1;2130:6:30;;;-1:-1:-1;2130:16:30;;3084:18:31;;2130:23:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;2122:63;;;;-1:-1:-1;;;2122:63:30;;;;;;;:::i;:::-;2247:6;;2262:5;;2325:3;;2192:7;;;;;;2225:118;;-1:-1:-1;;;;;2247:6:30;;;;2262:5;;2283:14;;2306:11;;2247:6;2225;:118::i;:::-;2393:6;;2416;;2463:3;;2349:150;;-1:-1:-1;;;2349:150:30;;-1:-1:-1;;;;;2393:6:30;;;2349:150;;;20655:34:31;2416:6:30;;;20705:18:31;;;20698:43;20757:18;;;20750:34;;;20800:18;;;20793:34;;;20843:19;;;20836:35;20920:4;20908:17;;20887:19;;;20880:46;20942:19;;;20935:35;;;20986:19;;;20979:35;;;2191:152:30;;-1:-1:-1;2191:152:30;;-1:-1:-1;2191:152:30;-1:-1:-1;2349:28:30;;;;;20589:19:31;;2349:150:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2513:6:30;;2530:5;;2513:23;;-1:-1:-1;;;2513:23:30;;-1:-1:-1;;;;;2530:5:30;;;2513:23;;;3111:51:31;2513:6:30;;;-1:-1:-1;2513:16:30;;-1:-1:-1;3084:18:31;;2513:23:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;2505:60;;;;-1:-1:-1;;;2505:60:30;;;;;;;:::i;:::-;2586:6;;:41;;-1:-1:-1;;;2586:41:30;;-1:-1:-1;;;;;3129:32:31;;;2586:41:30;;;3111:51:31;2631:11:30;;2586:6;;:16;;3084:18:31;;2586:41:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;2571:106;;;;-1:-1:-1;;;2571:106:30;;;;;;;:::i;:::-;2683:14;;;-1:-1:-1;;;2683:14:30;;;;-1:-1:-1;;;;;;;;;;;217:64:1;2683:12:30;;:14;;;;;241:37:1;;2683:14:30;;;;;;;241:37:1;217:64;2683:14:30;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2729:5:30;;2715:20;;-1:-1:-1;;;2715:20:30;;-1:-1:-1;;;;;2729:5:30;;;2715:20;;;3111:51:31;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2715:13:30;;-1:-1:-1;3084:18:31;;2715:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2741:6:30;;2753:5;;2741:25;;-1:-1:-1;;;2741:25:30;;-1:-1:-1;;;;;2741:6:30;;;;-1:-1:-1;2741:11:30;;-1:-1:-1;2741:25:30;;2753:5;;;;2760;;2741:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2772:6:30;;2812:3;;2772:44;;-1:-1:-1;;;2772:44:30;;-1:-1:-1;;;;;2772:6:30;;;;-1:-1:-1;2772:14:30;;-1:-1:-1;2772:44:30;;2795:14;;2812:3;2772:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2849:6:30;;2822:38;;-1:-1:-1;;;2822:38:30;;-1:-1:-1;;;;;2849:6:30;;;2822:38;;;21206:51:31;2849:6:30;21273:18:31;;;21266:59;2822:18:30;;;;;;21179::31;;2822:38:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2866:14:30;;;-1:-1:-1;;;2866:14:30;;;;-1:-1:-1;;;;;;;;;;;217:64:1;-1:-1:-1;2866:12:30;;-1:-1:-1;2866:14:30;;;;;241:37:1;;2866:14:30;;;;;;;241:37:1;217:64;2866:14:30;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2936:6:30;;2901:43;;-1:-1:-1;;;2901:43:30;;-1:-1:-1;;;;;2936:6:30;;;2901:43;;;3111:51:31;2901:26:30;;;;-1:-1:-1;2901:26:30;;-1:-1:-1;3084:18:31;;2901:43:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:34;2969:13;2950:34;;:11;:34::i;:::-;3024:6;;3041;;3024:24;;-1:-1:-1;;;3024:24:30;;-1:-1:-1;;;;;3041:6:30;;;3024:24;;;3111:51:31;3024:6:30;;;:16;;3084:18:31;;3024:24:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3015:4;3000:11;;;;:5;:11;:::i;:::-;2999:20;;;;:::i;:::-;2998:50;2990:73;;;;-1:-1:-1;;;2990:73:30;;21538:2:31;2990:73:30;;;21520:21:31;21577:2;21557:18;;;21550:30;-1:-1:-1;;;21596:18:31;;;21589:40;21646:18;;2990:73:30;21336:334:31;18641:156:2;18747:12;;;:22;;-1:-1:-1;;;;;;18747:22:2;-1:-1:-1;;;;;18747:22:2;;;;;;;;;;:12;18641:156::o;19925:120::-;20005:33;20019:4;20033:3;20005:13;:33::i;:::-;19925:120;;:::o;5514:110:4:-;5560:57;5613:2;5576:40;;;;;;4505:25:31;;4493:2;4478:18;;4359:177;5576:40:4;;;;-1:-1:-1;;5576:40:4;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:40:4;-1:-1:-1;;;5576:40:4;;;5560:15;:57::i;:::-;5514:110;:::o;5386:900:30:-;5560:5;5573:7;5588;5610:18;5668:16;;5694:5;5709:7;5726:10;5759:5;-1:-1:-1;;;;;5746:26:30;;5773:5;5746:33;;;;;;;;;;;;;;-1:-1:-1;;;;;3129:32:31;;;;3111:51;;3099:2;3084:18;;2965:203;5746:33:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5648:151;;;;;;21962:25:31;;;;-1:-1:-1;;;;;22061:15:31;;;22041:18;;;22034:43;22113:15;;;;22093:18;;;22086:43;22145:18;;;22138:34;22188:19;;;22181:35;22232:19;;;22225:35;;;21934:19;;5648:151:30;;;;;;;;;;;;5631:174;;;;;;5610:195;;5811:26;5877:115;6024:5;-1:-1:-1;;;;;6018:17:30;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6018:19:30;;;;;;;;;;;;:::i;:::-;6002:37;;;;;;;6074:10;;;;;;;;;;;-1:-1:-1;;;6074:10:30;;;;5857:302;;;;;22993:25:31;;;;23034:18;;;23027:34;;;;6064:21:30;23077:18:31;;;23070:34;6106:13:30;23120:18:31;;;23113:34;-1:-1:-1;;;;;23184:32:31;;23163:19;;;23156:61;22965:19;;5857:302:30;;;;;;;;;;;;5840:325;;;;;;5811:354;;6171:14;6188:53;6210:18;6230:10;9320:57:19;;-1:-1:-1;;;9320:57:19;;;25854:27:31;25897:11;;;25890:27;;;25933:12;;;25926:28;;;9284:7:19;;25970:12:31;;9320:57:19;;;;;;;;;;;;9310:68;;;;;;9303:75;;9191:194;;;;;6188:53:30;6255:25;;-1:-1:-1;;;6255:25:30;;;;;23402::31;;;23443:18;;;23436:34;;;6171:70:30;;-1:-1:-1;;;;;;;;;;;;217:64:1;6255:7:30;;23375:18:31;;6255:25:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6247:34;;;;;;;;;5386:900;;;;;;;;;;:::o;5873:116:4:-;5938:43;;-1:-1:-1;;;;;3129:32:31;;5938:43:4;;;3111:51:31;5922:60:4;;3084:18:31;;5938:43:4;;;-1:-1:-1;;5938:43:4;;;;;;;;;;;;;;-1:-1:-1;;;;;5938:43:4;-1:-1:-1;;;5938:43:4;;;5922:15;:60::i;20279:1089:2:-;20395:12;;;;20431:9;;;;20472:11;;;;20516:10;;;20493:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20395:12:2;;;;20431:9;;;;;;20381:11;;20493:33;;20516:10;;20493:33;;20516:10;20493:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20537:17;20574:4;20580:12;20588:3;20580:7;:12::i;:::-;20557:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20557:36:2;;;;;;;;;-1:-1:-1;;;;;20608:15:2;;;;;;:10;;;20557:36;20608:15;;;;;;-1:-1:-1;;;;;;20608:21:2;;;;;;;;;20557:36;;-1:-1:-1;20608:21:2;;:15;;20640:34;;20657:3;;20662:11;;20640:34;;:::i;:::-;;;;-1:-1:-1;;20640:34:2;;;;;;;;;20630:45;;20640:34;20630:45;;;;20608:68;;;;;;;;;;-1:-1:-1;20608:68:2;;;;20603:110;;20692:10;20697:4;20692;:10::i;:::-;;20603:110;-1:-1:-1;;;;;20745:15:2;;20722:12;20745:15;;;;;;;;;;;-1:-1:-1;;;;;;20745:21:2;;;;;;;;;20777:34;;20745:21;;20722:12;;20777:34;;20794:3;;20799:11;;20777:34;;:::i;:::-;;;;;;;;;;;;;20767:45;;;;;;20745:68;;;;;;;;;;;;20737:77;;20722:92;;20825:12;20864:17;20885:3;-1:-1:-1;;;;;20885:14:2;20900:4;20885:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20861:44:2;-1:-1:-1;20926:36:2;;-1:-1:-1;20861:44:2;20947:14;20950:11;20947:2;:14;:::i;:::-;20926;:36::i;:::-;20997:28;;-1:-1:-1;;;20997:28:2;;20919:43;;-1:-1:-1;20982:12:2;;-1:-1:-1;;;;;;;;;;;;20997:17:2;;;:28;;21015:3;;21020:4;;20997:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20982:43;;21048:4;21040;:12;21036:172;;21068:129;;-1:-1:-1;;;21068:129:2;;;;;;;:::i;:::-;21217:34;;-1:-1:-1;;;21217:34:2;;-1:-1:-1;;;;;;;;;;;21217:18:2;;;:34;;21236:3;;21241:4;;21247:3;;21217:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21268:12:2;;;21261:19;;-1:-1:-1;;;;;;21261:19:2;;;-1:-1:-1;21297:9:2;;;21290:16;;-1:-1:-1;;21290:16:2;;;21316:17;-1:-1:-1;21323:10:2;;21268:12;21316:17;:::i;:::-;21350:4;:11;;21343:18;;;20371:997;;;;;;;;20279:1089;;:::o;181:376:4:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;22555:397:2:-;22614:12;22642:19;22674:1;:8;22685:2;22674:13;;;;:::i;:::-;22664:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22664:24:2;;22642:46;;22703:9;22698:224;22722:1;:8;22718:1;:12;22698:224;;;22751:9;22763:1;22765;22763:4;;;;;;;;:::i;:::-;;;;;;;22751:16;;22896:1;22890;22886:2;22882:10;22878:2;22874:19;22866:6;22862:32;22855:43;22837:75;22732:3;;;;;:::i;:::-;;;;22698:224;;15421:3214;15545:12;;;;15581:9;;;;15622:11;;;;15666:10;;;15643:33;;;;;;;;;;;;;;;;;;;15508:7;;-1:-1:-1;;;;;15545:12:2;;15581:9;;;15622:11;15508:7;;15643:33;;15666:10;;15643:33;;;15666:10;15643:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15727:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;15727:21:2;;;;;;;;;15759:34;;15643:33;;-1:-1:-1;15727:21:2;:15;;-1:-1:-1;15759:34:2;;-1:-1:-1;15643:33:2;;15781:11;;15759:34;;:::i;:::-;;;;-1:-1:-1;;15759:34:2;;;;;;;;;15749:45;;15759:34;15749:45;;;;15727:68;;;;;;;;;;-1:-1:-1;15727:68:2;;;;15723:174;;;-1:-1:-1;;;;;15818:15:2;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15818:21:2;;;;;;;;;15850:34;;15818:21;;:10;15850:34;;15867:3;;15872:11;;15850:34;;:::i;:::-;;;;;;;;;;;;;15840:45;;;;;;15818:68;;;;;;;;;;;;15811:75;;;;;;15421:3214;;;:::o;15723:174::-;15906:17;15943:4;15949:12;15957:3;15949:7;:12::i;:::-;15926:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15906:56;;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;15972:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16003:12;16042:17;16063:3;-1:-1:-1;;;;;16063:14:2;16078:4;16063:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16039:44:2;-1:-1:-1;16104:36:2;;-1:-1:-1;16039:44:2;16125:14;16128:11;16125:2;:14;:::i;16104:36::-;16190:35;;-1:-1:-1;;;16190:35:2;;-1:-1:-1;;;;;3129:32:31;;16190:35:2;;;3111:51:31;16097:43:2;;-1:-1:-1;16162:22:2;;-1:-1:-1;;;;;;;;;;;;16190:21:2;;;3084:18:31;;16190:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16190:35:2;;;;;;;;;;;;:::i;:::-;16161:64;;;16239:5;:12;16255:1;16239:17;16235:2058;;16272:12;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;16287:17:2;;16305:3;16310:5;16316:1;16310:8;;;;;;;;:::i;:::-;;;;;;;16287:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16272:47;-1:-1:-1;16272:47:2;16333:106;;16380:44;16401:3;16414:5;16420:1;16414:8;;;;;;;;:::i;:::-;;;;;;;16406:17;;16380:44;;;;;;;:::i;:::-;;;;;;;;16333:106;16464:4;16456;:12;16452:180;;16488:129;;-1:-1:-1;;;16488:129:2;;;;;;;:::i;:::-;16650:86;16660:3;16665:4;16698:3;16703:11;16681:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16671:45;;;;;;16726:5;16732:1;16726:8;;;;;;;;:::i;:::-;;;;;;;16718:17;;16650:86;;;;;;;;;:::i;:::-;;;;;;;;16829:5;16835:1;16829:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;16750:15:2;;16821:17;16750:15;;;;;;;;;;-1:-1:-1;;;;;;16750:21:2;;;;;;;;;16782:34;;16829:8;;16750:21;;16782:34;;16799:3;;16804:11;;16782:34;;:::i;:::-;;;;-1:-1:-1;;16782:34:2;;;;;;;;;16772:45;;16782:34;16772:45;;;;16750:68;;;;;;;;;;;;-1:-1:-1;16750:68:2;;;:88;;;;-1:-1:-1;;;;;16852:15:2;;;;16923:4;16852:10;;;:15;;;;;-1:-1:-1;;;;;;16852:21:2;;;;;;;;;16884:34;;16923:4;;-1:-1:-1;16884:34:2;;16901:3;;16906:11;;16884:34;;:::i;:::-;;;;;;;-1:-1:-1;;16884:34:2;;;;;;16874:45;;16884:34;16874:45;;;;16852:68;;;;;;;;;;-1:-1:-1;16852:68:2;:75;;-1:-1:-1;;16852:75:2;;;;;;;;;;-1:-1:-1;16235:2058:2;;;16963:1;16948:5;:12;:16;16944:1349;;;16985:9;16980:1190;17004:5;:12;17000:1;:16;16980:1190;;;17041:12;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;17056:17:2;;17074:3;17079:5;17085:1;17079:8;;;;;;;;:::i;:::-;;;;;;;17056:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17041:47;-1:-1:-1;17041:47:2;17106:114;;17157:44;17178:3;17191:5;17197:1;17191:8;;;;;;;;:::i;:::-;;;;;;;17183:17;;17157:44;;;;;;;:::i;:::-;;;;;;;;17106:114;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;17262:18:2;;17281:3;17286:5;17292:1;17286:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17262:53:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17333:12;17363:17;17438:3;-1:-1:-1;;;;;17438:14:2;17453:4;17438:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17420:38:2;;-1:-1:-1;17420:38:2;-1:-1:-1;17487:36:2;17420:38;17508:14;17511:11;17508:2;:14;:::i;17487:36::-;17480:43;;17564:7;:37;;;;;-1:-1:-1;;;17575:4:2;:26;17564:37;17560:539;;;17699:86;17709:3;17714:4;17747:3;17752:11;17730:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17720:45;;;;;;17775:5;17781:1;17775:8;;;;;;;;:::i;:::-;;;;;;;17767:17;;17699:86;;;;;;;;;:::i;:::-;;;;;;;;17886:5;17892:1;17886:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17807:15:2;;17878:17;17807:15;;;;;;;;;;-1:-1:-1;;;;;;17807:21:2;;;;;;;;;17839:34;;17886:8;;17807:21;;17839:34;;17856:3;;17861:11;;17839:34;;:::i;:::-;;;;;;;;;;;;;17829:45;;;;;;17807:68;;;;;;;;;;;:88;;;;17988:4;17917;:10;;:15;17928:3;-1:-1:-1;;;;;17917:15:2;-1:-1:-1;;;;;17917:15:2;;;;;;;;;;;;:21;17933:4;-1:-1:-1;;;;;17917:21:2;;-1:-1:-1;;;;;17917:21:2;;;;;;;;;;;;;:68;17966:3;17971:11;17949:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17939:45;;;;;;17917:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;18014:18:2;;18033:3;18038:5;18044:1;18038:8;;;;;;;;:::i;:::-;;;;;;;18048:4;18014:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18075:5;;;;;17560:539;-1:-1:-1;;;;;;;;;;;14695:37:2;;-1:-1:-1;;;;;18116:18:2;;18135:3;18140:5;18146:1;18140:8;;;;;;;;:::i;:::-;;;;;;;18150:4;18116:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17023:1147;;;17018:3;;;;;:::i;:::-;;;;16980:1190;;;;16944:1349;;;18200:82;;;-1:-1:-1;;;18200:82:2;;28107:2:31;18200:82:2;;;28089:21:31;28126:18;;;28119:30;;;;28185:34;28165:18;;;28158:62;28256:34;28236:18;;;28229:62;28308:19;;18200:82:2;27905:428:31;18200:82:2;-1:-1:-1;;;;;18311:15:2;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;18311:21:2;;;;;;;;;18343:34;;18311:21;;:15;18343:34;;18360:3;;18365:11;;18343:34;;:::i;:::-;;;;-1:-1:-1;;18343:34:2;;;;;;;;;18333:45;;18343:34;18333:45;;;;18311:68;;;;;;;;;;-1:-1:-1;18311:68:2;;;;18303:128;;;;-1:-1:-1;;;18303:128:2;;28540:2:31;18303:128:2;;;28522:21:31;28579:2;28559:18;;;28552:30;28618:34;28598:18;;;28591:62;-1:-1:-1;;;28669:18:31;;;28662:45;28724:19;;18303:128:2;28338:411:31;18303:128:2;18449:12;;;18442:19;;-1:-1:-1;;;;;;18442:19:2;;;18478:9;;;18471:16;;-1:-1:-1;;18471:16:2;;;18497:17;-1:-1:-1;18504:10:2;;18449:12;18497:17;:::i;:::-;18524:18;18531:11;;;18524:18;;;-1:-1:-1;;;;;18560:15:2;;;;;;;;;;;;-1:-1:-1;;;;;;18560:21:2;;;;;;;;;18592:34;;18560:21;;18524:18;18592:34;;18609:3;;18614:11;;18592:34;;:::i;:::-;;;;;;;;;;;;;18582:45;;;;;;18560:68;;;;;;;;;;;;18553:75;;;;;;;;;15421:3214;;;:::o;22252:297::-;22326:7;22345:11;22367;22392:2;22381:1;:8;:13;:29;;22402:1;:8;22381:29;;;22397:2;22381:29;22367:43;;22425:6;22420:103;22441:3;22437:1;:7;22420:103;;;22506:5;:1;22510;22506:5;:::i;:::-;22480:1;22482:10;22491:1;22482:6;:10;:::i;:::-;22480:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;22480:13:2;22472:40;;22465:47;;;;;22446:3;;;;:::i;:::-;;;;22420:103;;;-1:-1:-1;22539:3:2;;22252:297;-1:-1:-1;;;;22252:297:2:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:31:-;-1:-1:-1;;;;;89:31:31;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:31:o;470:247::-;529:6;582:2;570:9;561:7;557:23;553:32;550:52;;;598:1;595;588:12;550:52;637:9;624:23;656:31;681:5;656:31;:::i;:::-;706:5;470:247;-1:-1:-1;;;470:247:31:o;722:388::-;790:6;798;851:2;839:9;830:7;826:23;822:32;819:52;;;867:1;864;857:12;819:52;906:9;893:23;925:31;950:5;925:31;:::i;:::-;975:5;-1:-1:-1;1032:2:31;1017:18;;1004:32;1045:33;1004:32;1045:33;:::i;:::-;1097:7;1087:17;;;722:388;;;;;:::o;1115:127::-;1176:10;1171:3;1167:20;1164:1;1157:31;1207:4;1204:1;1197:15;1231:4;1228:1;1221:15;1247:275;1318:2;1312:9;1383:2;1364:13;;-1:-1:-1;;1360:27:31;1348:40;;1418:18;1403:34;;1439:22;;;1400:62;1397:88;;;1465:18;;:::i;:::-;1501:2;1494:22;1247:275;;-1:-1:-1;1247:275:31:o;1527:187::-;1576:4;1609:18;1601:6;1598:30;1595:56;;;1631:18;;:::i;:::-;-1:-1:-1;1697:2:31;1676:15;-1:-1:-1;;1672:29:31;1703:4;1668:40;;1527:187::o;1719:338::-;1784:5;1813:53;1829:36;1858:6;1829:36;:::i;:::-;1813:53;:::i;:::-;1804:62;;1889:6;1882:5;1875:21;1929:3;1920:6;1915:3;1911:16;1908:25;1905:45;;;1946:1;1943;1936:12;1905:45;1995:6;1990:3;1983:4;1976:5;1972:16;1959:43;2049:1;2042:4;2033:6;2026:5;2022:18;2018:29;2011:40;1719:338;;;;;:::o;2062:222::-;2105:5;2158:3;2151:4;2143:6;2139:17;2135:27;2125:55;;2176:1;2173;2166:12;2125:55;2198:80;2274:3;2265:6;2252:20;2245:4;2237:6;2233:17;2198:80;:::i;2289:671::-;2376:6;2384;2437:2;2425:9;2416:7;2412:23;2408:32;2405:52;;;2453:1;2450;2443:12;2405:52;2493:9;2480:23;2522:18;2563:2;2555:6;2552:14;2549:34;;;2579:1;2576;2569:12;2549:34;2602:50;2644:7;2635:6;2624:9;2620:22;2602:50;:::i;:::-;2592:60;;2705:2;2694:9;2690:18;2677:32;2661:48;;2734:2;2724:8;2721:16;2718:36;;;2750:1;2747;2740:12;2718:36;-1:-1:-1;2773:24:31;;2828:4;2820:13;;2816:27;-1:-1:-1;2806:55:31;;2857:1;2854;2847:12;2806:55;2880:74;2946:7;2941:2;2928:16;2923:2;2919;2915:11;2880:74;:::i;:::-;2870:84;;;2289:671;;;;;:::o;3173:180::-;3232:6;3285:2;3273:9;3264:7;3260:23;3256:32;3253:52;;;3301:1;3298;3291:12;3253:52;-1:-1:-1;3324:23:31;;3173:180;-1:-1:-1;3173:180:31:o;3577:456::-;3654:6;3662;3670;3723:2;3711:9;3702:7;3698:23;3694:32;3691:52;;;3739:1;3736;3729:12;3691:52;3778:9;3765:23;3797:31;3822:5;3797:31;:::i;:::-;3847:5;-1:-1:-1;3904:2:31;3889:18;;3876:32;3917:33;3876:32;3917:33;:::i;:::-;3577:456;;3969:7;;-1:-1:-1;;;4023:2:31;4008:18;;;;3995:32;;3577:456::o;4038:316::-;4115:6;4123;4131;4184:2;4172:9;4163:7;4159:23;4155:32;4152:52;;;4200:1;4197;4190:12;4152:52;-1:-1:-1;;4223:23:31;;;4293:2;4278:18;;4265:32;;-1:-1:-1;4344:2:31;4329:18;;;4316:32;;4038:316;-1:-1:-1;4038:316:31:o;4541:118::-;4627:5;4620:13;4613:21;4606:5;4603:32;4593:60;;4649:1;4646;4639:12;4664:592;4747:6;4755;4763;4771;4824:3;4812:9;4803:7;4799:23;4795:33;4792:53;;;4841:1;4838;4831:12;4792:53;4880:9;4867:23;4899:31;4924:5;4899:31;:::i;:::-;4949:5;-1:-1:-1;5006:2:31;4991:18;;4978:32;5019:33;4978:32;5019:33;:::i;:::-;5071:7;-1:-1:-1;5125:2:31;5110:18;;5097:32;;-1:-1:-1;5181:2:31;5166:18;;5153:32;5194:30;5153:32;5194:30;:::i;:::-;4664:592;;;;-1:-1:-1;4664:592:31;;-1:-1:-1;;4664:592:31:o;5261:322::-;5330:6;5383:2;5371:9;5362:7;5358:23;5354:32;5351:52;;;5399:1;5396;5389:12;5351:52;5439:9;5426:23;5472:18;5464:6;5461:30;5458:50;;;5504:1;5501;5494:12;5458:50;5527;5569:7;5560:6;5549:9;5545:22;5527:50;:::i;:::-;5517:60;5261:322;-1:-1:-1;;;;5261:322:31:o;5780:408::-;5856:6;5864;5872;5925:2;5913:9;5904:7;5900:23;5896:32;5893:52;;;5941:1;5938;5931:12;5893:52;5977:9;5964:23;5954:33;;6034:2;6023:9;6019:18;6006:32;5996:42;;6088:2;6077:9;6073:18;6060:32;6132:6;6125:5;6121:18;6114:5;6111:29;6101:57;;6154:1;6151;6144:12;6101:57;6177:5;6167:15;;;5780:408;;;;;:::o;6392:274::-;-1:-1:-1;;;;;6584:32:31;;;;6566:51;;6648:2;6633:18;;6626:34;6554:2;6539:18;;6392:274::o;7305:258::-;7377:1;7387:113;7401:6;7398:1;7395:13;7387:113;;;7477:11;;;7471:18;7458:11;;;7451:39;7423:2;7416:10;7387:113;;;7518:6;7515:1;7512:13;7509:48;;;-1:-1:-1;;7553:1:31;7535:16;;7528:27;7305:258::o;7568:383::-;7717:2;7706:9;7699:21;7680:4;7749:6;7743:13;7792:6;7787:2;7776:9;7772:18;7765:34;7808:66;7867:6;7862:2;7851:9;7847:18;7842:2;7834:6;7830:15;7808:66;:::i;:::-;7935:2;7914:15;-1:-1:-1;;7910:29:31;7895:45;;;;7942:2;7891:54;;7568:383;-1:-1:-1;;7568:383:31:o;7956:308::-;8031:5;8060:53;8076:36;8105:6;8076:36;:::i;8060:53::-;8051:62;;8136:6;8129:5;8122:21;8176:3;8167:6;8162:3;8158:16;8155:25;8152:45;;;8193:1;8190;8183:12;8152:45;8206:52;8251:6;8244:4;8237:5;8233:16;8228:3;8206:52;:::i;8269:457::-;8348:6;8401:2;8389:9;8380:7;8376:23;8372:32;8369:52;;;8417:1;8414;8407:12;8369:52;8450:9;8444:16;8483:18;8475:6;8472:30;8469:50;;;8515:1;8512;8505:12;8469:50;8538:22;;8591:4;8583:13;;8579:27;-1:-1:-1;8569:55:31;;8620:1;8617;8610:12;8569:55;8643:77;8712:7;8707:2;8701:9;8696:2;8692;8688:11;8643:77;:::i;8731:466::-;8906:3;8944:6;8938:13;8960:53;9006:6;9001:3;8994:4;8986:6;8982:17;8960:53;:::i;:::-;9076:13;;9035:16;;;;9098:57;9076:13;9035:16;9132:4;9120:17;;9098:57;:::i;:::-;9171:20;;8731:466;-1:-1:-1;;;;8731:466:31:o;9620:127::-;9681:10;9676:3;9672:20;9669:1;9662:31;9712:4;9709:1;9702:15;9736:4;9733:1;9726:15;9752:125;9792:4;9820:1;9817;9814:8;9811:34;;;9825:18;;:::i;:::-;-1:-1:-1;9862:9:31;;9752:125::o;10309:135::-;10348:3;10369:17;;;10366:43;;10389:18;;:::i;:::-;-1:-1:-1;10436:1:31;10425:13;;10309:135::o;10449:127::-;10510:10;10505:3;10501:20;10498:1;10491:31;10541:4;10538:1;10531:15;10565:4;10562:1;10555:15;10581:112;10613:1;10639;10629:35;;10644:18;;:::i;:::-;-1:-1:-1;10678:9:31;;10581:112::o;10698:128::-;10738:3;10769:1;10765:6;10762:1;10759:13;10756:39;;;10775:18;;:::i;:::-;-1:-1:-1;10811:9:31;;10698:128::o;11646:184::-;11716:6;11769:2;11757:9;11748:7;11744:23;11740:32;11737:52;;;11785:1;11782;11775:12;11737:52;-1:-1:-1;11808:16:31;;11646:184;-1:-1:-1;11646:184:31:o;11835:245::-;11902:6;11955:2;11943:9;11934:7;11930:23;11926:32;11923:52;;;11971:1;11968;11961:12;11923:52;12003:9;11997:16;12022:28;12044:5;12022:28;:::i;12085:120::-;12125:1;12151;12141:35;;12156:18;;:::i;:::-;-1:-1:-1;12190:9:31;;12085:120::o;12210:274::-;12339:3;12377:6;12371:13;12393:53;12439:6;12434:3;12427:4;12419:6;12415:17;12393:53;:::i;:::-;12462:16;;;;;12210:274;-1:-1:-1;;12210:274:31:o;13180:371::-;-1:-1:-1;;;;;;13365:33:31;;13353:46;;13422:13;;13335:3;;13444:61;13422:13;13494:1;13485:11;;13478:4;13466:17;;13444:61;:::i;:::-;13525:16;;;;13543:1;13521:24;;13180:371;-1:-1:-1;;;13180:371:31:o;14289:168::-;14329:7;14395:1;14391;14387:6;14383:14;14380:1;14377:21;14372:1;14365:9;14358:17;14354:45;14351:71;;;14402:18;;:::i;:::-;-1:-1:-1;14442:9:31;;14289:168::o;15084:127::-;15145:10;15140:3;15136:20;15133:1;15126:31;15176:4;15173:1;15166:15;15200:4;15197:1;15190:15;15216:336;15418:2;15400:21;;;15457:2;15437:18;;;15430:30;-1:-1:-1;;;15491:2:31;15476:18;;15469:42;15543:2;15528:18;;15216:336::o;16356:343::-;16558:2;16540:21;;;16597:2;16577:18;;;16570:30;-1:-1:-1;;;16631:2:31;16616:18;;16609:49;16690:2;16675:18;;16356:343::o;16991:175::-;17069:13;;17122:18;17111:30;;17101:41;;17091:69;;17156:1;17153;17146:12;17171:1147;17330:6;17338;17346;17354;17362;17370;17378;17386;17394;17402;17455:3;17443:9;17434:7;17430:23;17426:33;17423:53;;;17472:1;17469;17462:12;17423:53;17504:9;17498:16;17523:28;17545:5;17523:28;:::i;:::-;17620:2;17605:18;;17599:25;17570:5;;-1:-1:-1;17633:30:31;17599:25;17633:30;:::i;:::-;17682:7;-1:-1:-1;17708:48:31;17752:2;17737:18;;17708:48;:::i;:::-;17698:58;;17775:48;17819:2;17808:9;17804:18;17775:48;:::i;:::-;17765:58;;17868:3;17857:9;17853:19;17847:26;17882:33;17907:7;17882:33;:::i;:::-;17986:3;17971:19;;17965:26;17934:7;;-1:-1:-1;18000:33:31;17965:26;18000:33;:::i;:::-;18052:7;18042:17;;;18099:3;18088:9;18084:19;18078:26;18068:36;;18144:3;18133:9;18129:19;18123:26;18113:36;;18189:3;18178:9;18174:19;18168:26;18158:36;;18239:3;18228:9;18224:19;18218:26;18253:33;18278:7;18253:33;:::i;:::-;18305:7;18295:17;;;17171:1147;;;;;;;;;;;;;:::o;23481:395::-;23567:6;23575;23583;23636:2;23624:9;23615:7;23611:23;23607:32;23604:52;;;23652:1;23649;23642:12;23604:52;23684:9;23678:16;23734:4;23727:5;23723:16;23716:5;23713:27;23703:55;;23754:1;23751;23744:12;23703:55;23822:2;23807:18;;23801:25;23866:2;23851:18;;;23845:25;23777:5;;23801:25;;-1:-1:-1;23845:25:31;23481:395;-1:-1:-1;;;23481:395:31:o;23881:610::-;24127:13;;24070:3;;24101;;24180:4;24207:15;;;24070:3;24250:175;24264:6;24261:1;24258:13;24250:175;;;24327:13;;24313:28;;24363:14;;;;24400:15;;;;24286:1;24279:9;24250:175;;;-1:-1:-1;;24434:21:31;;;-1:-1:-1;24471:14:31;;;;;-1:-1:-1;;;23881:610:31:o;24685:556::-;24887:2;24869:21;;;24926:3;24906:18;;;24899:31;24966:34;24961:2;24946:18;;24939:62;25037:34;25032:2;25017:18;;25010:62;25109:34;25103:3;25088:19;;25081:63;-1:-1:-1;;;25175:3:31;25160:19;;25153:46;25231:3;25216:19;;24685:556::o;25246:345::-;-1:-1:-1;;;;;25466:32:31;;;;25448:51;;25530:2;25515:18;;25508:34;;;;25573:2;25558:18;;25551:34;25436:2;25421:18;;25246:345::o;25993:127::-;26054:10;26049:3;26045:20;26042:1;26035:31;26085:4;26082:1;26075:15;26109:4;26106:1;26099:15;26125:709;26190:5;26243:3;26236:4;26228:6;26224:17;26220:27;26210:55;;26261:1;26258;26251:12;26210:55;26290:6;26284:13;26316:4;26339:18;26335:2;26332:26;26329:52;;;26361:18;;:::i;:::-;26407:2;26404:1;26400:10;26430:28;26454:2;26450;26446:11;26430:28;:::i;:::-;26492:15;;;26562;;;26558:24;;;26523:12;;;;26594:15;;;26591:35;;;26622:1;26619;26612:12;26591:35;26658:2;26650:6;26646:15;26635:26;;26670:135;26686:6;26681:3;26678:15;26670:135;;;26752:10;;26740:23;;26703:12;;;;26783;;;;26670:135;;;26823:5;26125:709;-1:-1:-1;;;;;;;26125:709:31:o;26839:614::-;26968:6;26976;27029:2;27017:9;27008:7;27004:23;27000:32;26997:52;;;27045:1;27042;27035:12;26997:52;27078:9;27072:16;27107:18;27148:2;27140:6;27137:14;27134:34;;;27164:1;27161;27154:12;27134:34;27187:72;27251:7;27242:6;27231:9;27227:22;27187:72;:::i;:::-;27177:82;;27305:2;27294:9;27290:18;27284:25;27268:41;;27334:2;27324:8;27321:16;27318:36;;;27350:1;27347;27340:12;27318:36;;27373:74;27439:7;27428:8;27417:9;27413:24;27373:74;:::i;27458:442::-;-1:-1:-1;;;;;27705:32:31;;;;27687:51;;-1:-1:-1;;;;;;27774:33:31;;;;27769:2;27754:18;;27747:61;27839:2;27824:18;;27817:34;27882:2;27867:18;;27860:34;27674:3;27659:19;;27458:442::o",
>>>>>>> optimisation
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "bound(uint256,uint256,uint256)": "5a6c1eed",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "testBuy(uint256)": "6e0b95d0",
    "testOTCbuyOrder(uint256,uint256,uint16)": "e77b6747",
    "testOTCsellOrder(uint256,uint256,uint16)": "edd2545f",
    "testRentHouse()": "55dda6bb",
    "testStake()": "3a1143da",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/Contract.t.sol",
<<<<<<< HEAD
    "id": 24989,
=======
    "id": 26179,
>>>>>>> optimisation
    "exportedSymbols": {
      "AccessControl": [
        21210
      ],
      "Context": [
        22416
      ],
      "ContractTest": [
<<<<<<< HEAD
        24988
=======
        26178
>>>>>>> optimisation
      ],
      "Counters": [
        22490
      ],
      "CurrencyInfos": [
        25020
      ],
      "DSTest": [
        1786
      ],
      "ECDSA": [
        23123
      ],
      "EIP712": [
        23608
      ],
      "ERC165": [
        23632
      ],
      "ERC20": [
        22083
      ],
      "ERC20DecimalsMock": [
        21457
      ],
      "ERC20Permit": [
        22358
      ],
      "IAccessControl": [
        21283
      ],
      "IERC165": [
        23644
      ],
      "IERC20": [
        22161
      ],
      "IERC20Metadata": [
        22186
      ],
      "IERC20Permit": [
        22394
      ],
      "IOTC": [
<<<<<<< HEAD
        25142
      ],
      "IPropertyToken": [
        24182
      ],
      "OTC": [
        23788
      ],
      "OrderInfo": [
        25013
=======
        26324
      ],
      "IPropertyToken": [
        25256
      ],
      "MerkleProof": [
        23454
      ],
      "MockToken": [
        25277
      ],
      "OTC": [
        24570
>>>>>>> optimisation
      ],
      "Ownable": [
        21396
      ],
      "PropertyToken": [
<<<<<<< HEAD
        23982
=======
        25014
>>>>>>> optimisation
      ],
      "ReentrancyGuard": [
        21497
      ],
      "Script": [
        1815
      ],
      "StdStorage": [
        3141
      ],
      "Step": [
        25168
      ],
      "Strings": [
        22716
      ],
      "Test": [
        3043
      ],
      "Variables": [
        25183
      ],
      "Vm": [
        4762
      ],
      "console": [
        12826
      ],
      "console2": [
        20890
      ],
<<<<<<< HEAD
=======
      "currencyInfos": [
        26210
      ],
      "orderInfo": [
        26203
      ],
>>>>>>> optimisation
      "stdError": [
        3113
      ],
      "stdMath": [
        4378
      ],
      "stdStorage": [
        4231
      ]
    },
    "nodeType": "SourceUnit",
<<<<<<< HEAD
    "src": "39:5517:24",
    "nodes": [
      {
        "id": 24184,
=======
    "src": "39:6250:30",
    "nodes": [
      {
        "id": 25279,
>>>>>>> optimisation
        "nodeType": "PragmaDirective",
        "src": "39:24:30",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
<<<<<<< HEAD
        "id": 24185,
=======
        "id": 25280,
>>>>>>> optimisation
        "nodeType": "ImportDirective",
        "src": "65:28:30",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 24989,
=======
        "scope": 26179,
>>>>>>> optimisation
        "sourceUnit": 4379,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 24186,
=======
        "id": 25281,
>>>>>>> optimisation
        "nodeType": "ImportDirective",
        "src": "94:34:30",
        "absolutePath": "src/PropertyToken.sol",
        "file": "../src/PropertyToken.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 24989,
        "sourceUnit": 23983,
=======
        "scope": 26179,
        "sourceUnit": 25015,
>>>>>>> optimisation
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 24187,
=======
        "id": 25282,
>>>>>>> optimisation
        "nodeType": "ImportDirective",
        "src": "130:24:30",
        "absolutePath": "src/OTC.sol",
        "file": "../src/OTC.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 24989,
        "sourceUnit": 22863,
=======
        "scope": 26179,
        "sourceUnit": 24571,
>>>>>>> optimisation
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 24188,
=======
        "id": 25283,
>>>>>>> optimisation
        "nodeType": "ImportDirective",
        "src": "155:35:30",
        "absolutePath": "src/interface/IOTC.sol",
        "file": "../src/interface/IOTC.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 24989,
        "sourceUnit": 23789,
=======
        "scope": 26179,
        "sourceUnit": 26325,
>>>>>>> optimisation
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 24189,
=======
        "id": 25284,
>>>>>>> optimisation
        "nodeType": "ImportDirective",
        "src": "191:30:30",
        "absolutePath": "src/mocktoken.sol",
        "file": "../src/mocktoken.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 24989,
        "sourceUnit": 25143,
=======
        "scope": 26179,
        "sourceUnit": 25278,
>>>>>>> optimisation
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 24988,
        "nodeType": "ContractDefinition",
        "src": "223:5332:24",
        "nodes": [
          {
            "id": 24196,
=======
        "id": 26178,
        "nodeType": "ContractDefinition",
        "src": "223:6065:30",
        "nodes": [
          {
            "id": 25291,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "257:29:30",
            "constant": false,
            "mutability": "mutable",
            "name": "makeDecimals",
<<<<<<< HEAD
            "nameLocation": "265:12:24",
            "scope": 24988,
=======
            "nameLocation": "265:12:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24192,
=======
              "id": 25287,
>>>>>>> optimisation
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "257:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
<<<<<<< HEAD
              "id": 24195,
=======
              "id": 25290,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
<<<<<<< HEAD
                "id": 24193,
=======
                "id": 25288,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "280:2:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3138",
<<<<<<< HEAD
                "id": 24194,
=======
                "id": 25289,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "284:2:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "280:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24199,
=======
            "id": 25294,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "290:84:30",
            "constant": false,
            "mutability": "mutable",
            "name": "max",
<<<<<<< HEAD
            "nameLocation": "298:3:24",
            "scope": 24988,
=======
            "nameLocation": "298:3:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24197,
=======
              "id": 25292,
>>>>>>> optimisation
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "290:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
<<<<<<< HEAD
              "id": 24198,
=======
              "id": 25293,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "308:66:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24204,
=======
            "id": 25299,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "378:138:30",
            "constant": false,
            "mutability": "mutable",
            "name": "_PERMIT_TYPEHASH",
<<<<<<< HEAD
            "nameLocation": "386:16:24",
            "scope": 24988,
=======
            "nameLocation": "386:16:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24200,
=======
              "id": 25295,
>>>>>>> optimisation
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
<<<<<<< HEAD
                  "id": 24202,
=======
                  "id": 25297,
>>>>>>> optimisation
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "426:84:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  },
                  "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  }
                ],
<<<<<<< HEAD
                "id": 24201,
=======
                "id": 25296,
>>>>>>> optimisation
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "409:9:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
<<<<<<< HEAD
              "id": 24203,
=======
              "id": 25298,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "409:107:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24209,
=======
            "id": 25304,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "520:42:30",
            "constant": false,
            "mutability": "mutable",
            "name": "housePrice",
<<<<<<< HEAD
            "nameLocation": "528:10:24",
            "scope": 24988,
=======
            "nameLocation": "528:10:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24205,
=======
              "id": 25300,
>>>>>>> optimisation
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "520:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
<<<<<<< HEAD
              "id": 24208,
=======
              "id": 25303,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "323231353530",
<<<<<<< HEAD
                "id": 24206,
=======
                "id": 25301,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "541:6:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_221550_by_1",
                  "typeString": "int_const 221550"
                },
                "value": "221550"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
<<<<<<< HEAD
                "id": 24207,
                "name": "makeDecimals",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 24196,
                "src": "550:12:24",
=======
                "id": 25302,
                "name": "makeDecimals",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 25291,
                "src": "550:12:30",
>>>>>>> optimisation
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "541:21:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24214,
=======
            "id": 25309,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "566:39:30",
            "constant": false,
            "mutability": "mutable",
<<<<<<< HEAD
            "name": "dFtMaxSupply",
            "nameLocation": "574:12:24",
            "scope": 24988,
=======
            "name": "dFtMAX_SUPPLY",
            "nameLocation": "574:13:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24210,
=======
              "id": 25305,
>>>>>>> optimisation
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "566:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
<<<<<<< HEAD
              "id": 24213,
=======
              "id": 25308,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
<<<<<<< HEAD
                "id": 24211,
                "name": "housePrice",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 24209,
                "src": "589:10:24",
=======
                "id": 25306,
                "name": "housePrice",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 25304,
                "src": "590:10:30",
>>>>>>> optimisation
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "hexValue": "3130",
<<<<<<< HEAD
                "id": 24212,
=======
                "id": 25307,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "603:2:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "src": "590:15:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24220,
=======
            "id": 25315,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "632:26:30",
            "constant": false,
            "mutability": "mutable",
            "name": "addr1",
<<<<<<< HEAD
            "nameLocation": "639:5:24",
            "scope": 24988,
=======
            "nameLocation": "640:5:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24215,
=======
              "id": 25310,
>>>>>>> optimisation
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "632:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
<<<<<<< HEAD
                  "id": 24218,
=======
                  "id": 25313,
>>>>>>> optimisation
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "656:1:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "expression": {
<<<<<<< HEAD
                  "id": 24216,
=======
                  "id": 25311,
>>>>>>> optimisation
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1814,
                  "src": "648:2:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$4762",
                    "typeString": "contract Vm"
                  }
                },
<<<<<<< HEAD
                "id": 24217,
=======
                "id": 25312,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 4439,
                "src": "648:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) external returns (address)"
                }
              },
<<<<<<< HEAD
              "id": 24219,
=======
              "id": 25314,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "648:10:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24226,
=======
            "id": 25321,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "662:26:30",
            "constant": false,
            "mutability": "mutable",
            "name": "addr2",
<<<<<<< HEAD
            "nameLocation": "669:5:24",
            "scope": 24988,
=======
            "nameLocation": "670:5:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24221,
=======
              "id": 25316,
>>>>>>> optimisation
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "662:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "32",
<<<<<<< HEAD
                  "id": 24224,
=======
                  "id": 25319,
>>>>>>> optimisation
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "686:1:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  }
                ],
                "expression": {
<<<<<<< HEAD
                  "id": 24222,
=======
                  "id": 25317,
>>>>>>> optimisation
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1814,
                  "src": "678:2:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$4762",
                    "typeString": "contract Vm"
                  }
                },
<<<<<<< HEAD
                "id": 24223,
=======
                "id": 25318,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 4439,
                "src": "678:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) external returns (address)"
                }
              },
<<<<<<< HEAD
              "id": 24225,
=======
              "id": 25320,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "678:10:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24232,
=======
            "id": 25327,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "692:27:30",
            "constant": false,
            "mutability": "mutable",
            "name": "feePot",
<<<<<<< HEAD
            "nameLocation": "699:6:24",
            "scope": 24988,
=======
            "nameLocation": "700:6:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24227,
=======
              "id": 25322,
>>>>>>> optimisation
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "692:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "33",
<<<<<<< HEAD
                  "id": 24230,
=======
                  "id": 25325,
>>>>>>> optimisation
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "717:1:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  }
                ],
                "expression": {
<<<<<<< HEAD
                  "id": 24228,
=======
                  "id": 25323,
>>>>>>> optimisation
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1814,
                  "src": "709:2:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$4762",
                    "typeString": "contract Vm"
                  }
                },
<<<<<<< HEAD
                "id": 24229,
=======
                "id": 25324,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 4439,
                "src": "709:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) external returns (address)"
                }
              },
<<<<<<< HEAD
              "id": 24231,
=======
              "id": 25326,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "709:10:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24238,
=======
            "id": 25333,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "723:29:30",
            "constant": false,
            "mutability": "mutable",
            "name": "multisig",
<<<<<<< HEAD
            "nameLocation": "730:8:24",
            "scope": 24988,
=======
            "nameLocation": "731:8:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24233,
=======
              "id": 25328,
>>>>>>> optimisation
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "723:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "34",
<<<<<<< HEAD
                  "id": 24236,
=======
                  "id": 25331,
>>>>>>> optimisation
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "750:1:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  },
                  "value": "4"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  }
                ],
                "expression": {
<<<<<<< HEAD
                  "id": 24234,
=======
                  "id": 25329,
>>>>>>> optimisation
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1814,
                  "src": "742:2:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$4762",
                    "typeString": "contract Vm"
                  }
                },
<<<<<<< HEAD
                "id": 24235,
=======
                "id": 25330,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 4439,
                "src": "742:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) external returns (address)"
                }
              },
<<<<<<< HEAD
              "id": 24237,
=======
              "id": 25332,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "742:10:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24245,
=======
            "id": 25339,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "756:25:30",
            "constant": false,
            "mutability": "mutable",
            "name": "bank",
            "nameLocation": "764:4:30",
            "scope": 26178,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25334,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "756:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "35",
                  "id": 25337,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "779:1:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  },
                  "value": "5"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  }
                ],
                "expression": {
                  "id": 25335,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1814,
                  "src": "771:2:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$4762",
                    "typeString": "contract Vm"
                  }
                },
                "id": 25336,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 4439,
                "src": "771:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) external returns (address)"
                }
              },
              "id": 25338,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "771:10:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25349,
            "nodeType": "VariableDeclaration",
            "src": "785:49:30",
            "constant": false,
            "mutability": "mutable",
            "name": "dollar",
<<<<<<< HEAD
            "nameLocation": "764:6:24",
            "scope": 24988,
=======
            "nameLocation": "795:6:30",
            "scope": 26178,
>>>>>>> optimisation
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockToken_$25277",
              "typeString": "contract MockToken"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 24240,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24239,
                "name": "FakeDoll",
=======
              "id": 25341,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25340,
                "name": "MockToken",
>>>>>>> optimisation
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25277,
                "src": "785:9:30"
              },
              "referencedDeclaration": 25277,
              "src": "785:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockToken_$25277",
                "typeString": "contract MockToken"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6c6f6c",
                  "id": 25345,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "818:5:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f172873c63909462ac4de545471fd3ad3e9eeadeec4608b92d16ce6b500704cc",
                    "typeString": "literal_string \"lol\""
                  },
                  "value": "lol"
                },
                {
                  "hexValue": "6c6c",
                  "id": 25346,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "825:4:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e61796a596ba847b73fd93040e68151bd53f947e144cde34120e5b2b00405ef2",
                    "typeString": "literal_string \"ll\""
                  },
                  "value": "ll"
                },
                {
                  "hexValue": "3138",
                  "id": 25347,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "831:2:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                }
              ],
              "expression": {
<<<<<<< HEAD
                "argumentTypes": [],
                "id": 24243,
=======
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f172873c63909462ac4de545471fd3ad3e9eeadeec4608b92d16ce6b500704cc",
                    "typeString": "literal_string \"lol\""
                  },
                  {
                    "typeIdentifier": "t_stringliteral_e61796a596ba847b73fd93040e68151bd53f947e144cde34120e5b2b00405ef2",
                    "typeString": "literal_string \"ll\""
                  },
                  {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  }
                ],
                "id": 25344,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "804:13:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockToken_$25277_$",
                  "typeString": "function (string memory,string memory,uint8) returns (contract MockToken)"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 24242,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24241,
                    "name": "FakeDoll",
=======
                  "id": 25343,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 25342,
                    "name": "MockToken",
>>>>>>> optimisation
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 25277,
                    "src": "808:9:30"
                  },
                  "referencedDeclaration": 25277,
                  "src": "808:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockToken_$25277",
                    "typeString": "contract MockToken"
                  }
                }
              },
<<<<<<< HEAD
              "id": 24244,
=======
              "id": 25348,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "804:30:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockToken_$25277",
                "typeString": "contract MockToken"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24257,
=======
            "id": 25364,
>>>>>>> optimisation
            "nodeType": "VariableDeclaration",
            "src": "838:152:30",
            "constant": false,
            "mutability": "mutable",
            "name": "pToken",
<<<<<<< HEAD
            "nameLocation": "805:6:24",
            "scope": 24988,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PropertyToken_$23982",
              "typeString": "contract PropertyToken"
            },
            "typeName": {
              "id": 24247,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24246,
                "name": "PropertyToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23982,
                "src": "791:13:24"
              },
              "referencedDeclaration": 23982,
              "src": "791:13:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
            "nameLocation": "852:6:30",
            "scope": 26178,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PropertyToken_$25014",
              "typeString": "contract PropertyToken"
            },
            "typeName": {
              "id": 25351,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25350,
                "name": "PropertyToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25014,
                "src": "838:13:30"
              },
              "referencedDeclaration": 25014,
              "src": "838:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                "typeString": "contract PropertyToken"
              }
            },
            "value": {
              "arguments": [
                {
<<<<<<< HEAD
                  "id": 24251,
                  "name": "dollar",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 24245,
                  "src": "843:6:24",
=======
                  "id": 25355,
                  "name": "bank",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25339,
                  "src": "890:4:30",
>>>>>>> optimisation
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
<<<<<<< HEAD
                  "id": 24252,
                  "name": "dFtMaxSupply",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 24214,
                  "src": "857:12:24",
=======
                  "id": 25356,
                  "name": "multisig",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25333,
                  "src": "902:8:30",
>>>>>>> optimisation
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
<<<<<<< HEAD
                  "id": 24253,
                  "name": "multisig",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 24238,
                  "src": "877:8:24",
=======
                  "arguments": [
                    {
                      "id": 25359,
                      "name": "dollar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25349,
                      "src": "926:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockToken_$25277",
                        "typeString": "contract MockToken"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_contract$_MockToken_$25277",
                        "typeString": "contract MockToken"
                      }
                    ],
                    "id": 25358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "918:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 25357,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "918:7:30",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 25360,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "918:15:30",
                  "tryCall": false,
>>>>>>> optimisation
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "hexValue": "31207275652041666672652c203735303138205061726973",
<<<<<<< HEAD
                  "id": 24254,
=======
                  "id": 25361,
>>>>>>> optimisation
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "941:26:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_06d0d4ab27a8397773b763c9671f98b81b6e3c35714b87c2146c43bfd09686c1",
                    "typeString": "literal_string \"1 rue Affre, 75018 Paris\""
                  },
                  "value": "1 rue Affre, 75018 Paris"
                },
                {
                  "hexValue": "31413735303138",
<<<<<<< HEAD
                  "id": 24255,
=======
                  "id": 25362,
>>>>>>> optimisation
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "975:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_c84f434a40a4bc8a3b6222b700877f28b4882a04b43bf0f93af65ccc07762a1b",
                    "typeString": "literal_string \"1A75018\""
                  },
                  "value": "1A75018"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  {
                    "typeIdentifier": "t_stringliteral_06d0d4ab27a8397773b763c9671f98b81b6e3c35714b87c2146c43bfd09686c1",
                    "typeString": "literal_string \"1 rue Affre, 75018 Paris\""
                  },
                  {
                    "typeIdentifier": "t_stringliteral_c84f434a40a4bc8a3b6222b700877f28b4882a04b43bf0f93af65ccc07762a1b",
                    "typeString": "literal_string \"1A75018\""
                  }
                ],
<<<<<<< HEAD
                "id": 24250,
=======
                "id": 25354,
>>>>>>> optimisation
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "865:17:30",
                "typeDescriptions": {
<<<<<<< HEAD
                  "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20_$21707_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_PropertyToken_$23982_$",
                  "typeString": "function (contract IERC20,uint256,address,string memory,string memory) returns (contract PropertyToken)"
                },
                "typeName": {
                  "id": 24249,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24248,
                    "name": "PropertyToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 23982,
                    "src": "822:13:24"
                  },
                  "referencedDeclaration": 23982,
                  "src": "822:13:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_PropertyToken_$25014_$",
                  "typeString": "function (address,address,address,string memory,string memory) returns (contract PropertyToken)"
                },
                "typeName": {
                  "id": 25353,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 25352,
                    "name": "PropertyToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 25014,
                    "src": "869:13:30"
                  },
                  "referencedDeclaration": 25014,
                  "src": "869:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                    "typeString": "contract PropertyToken"
                  }
                }
              },
<<<<<<< HEAD
              "id": 24256,
=======
              "id": 25363,
>>>>>>> optimisation
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "865:125:30",
              "tryCall": false,
              "typeDescriptions": {
<<<<<<< HEAD
                "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                "typeString": "contract PropertyToken"
              }
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 24267,
=======
            "id": 25374,
>>>>>>> optimisation
            "nodeType": "FunctionDefinition",
            "src": "995:54:30",
            "body": {
<<<<<<< HEAD
              "id": 24266,
=======
              "id": 25373,
>>>>>>> optimisation
              "nodeType": "Block",
              "src": "1019:30:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31363536333232383130",
<<<<<<< HEAD
                        "id": 24263,
=======
                        "id": 25370,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1033:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1656322810_by_1",
                          "typeString": "int_const 1656322810"
                        },
                        "value": "1656322810"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1656322810_by_1",
                          "typeString": "int_const 1656322810"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24260,
=======
                        "id": 25367,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "1025:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24262,
=======
                      "id": 25369,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4386,
                      "src": "1025:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24264,
=======
                    "id": 25371,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:19:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24265,
=======
                  "id": 25372,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "1025:19:30"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1004:5:30",
            "parameters": {
<<<<<<< HEAD
              "id": 24258,
=======
              "id": 25365,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:2:30"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 24259,
=======
              "id": 25366,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1019:0:30"
            },
<<<<<<< HEAD
            "scope": 24988,
=======
            "scope": 26178,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 24319,
=======
            "id": 25439,
>>>>>>> optimisation
            "nodeType": "FunctionDefinition",
            "src": "1053:323:30",
            "body": {
<<<<<<< HEAD
              "id": 24318,
=======
              "id": 25438,
>>>>>>> optimisation
              "nodeType": "Block",
              "src": "1097:279:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 25382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1118:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 25379,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "1103:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 25381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setStep",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24758,
                      "src": "1103:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1103:17:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25384,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:17:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130303030",
                        "id": 25388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1145:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "id": 25385,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "1126:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 25387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCexRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24741,
                      "src": "1126:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 25389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:25:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25390,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:25:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24279,
=======
                        "id": 25398,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 24275,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24269,
                          "src": "1061:6:24",
=======
                          "id": 25394,
                          "name": "firstPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25376,
                          "src": "1167:10:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
<<<<<<< HEAD
                              "id": 24276,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24257,
                              "src": "1070:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$23982",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 24277,
=======
                              "id": 25395,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25364,
                              "src": "1180:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$25014",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 25396,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "MAX_SUPPLY",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 23809,
                            "src": "1070:17:24",
=======
                            "referencedDeclaration": 24595,
                            "src": "1180:17:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 24278,
=======
                          "id": 25397,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1180:19:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1167:32:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24272,
=======
                        "id": 25391,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "1157:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24274,
=======
                      "id": 25393,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
                      "src": "1157:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24280,
=======
                    "id": 25399,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:43:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24281,
=======
                  "id": 25400,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "1157:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24285,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24220,
                        "src": "1110:5:24",
=======
                        "id": 25404,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "1220:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24282,
=======
                        "id": 25401,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "1206:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24284,
=======
                      "id": 25403,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4597,
                      "src": "1206:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24286,
=======
                    "id": 25405,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1206:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24287,
=======
                  "id": 25406,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "1206:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24291,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24269,
                        "src": "1134:6:24",
=======
                        "id": 25410,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "1244:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25411,
                        "name": "firstPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25376,
                        "src": "1251:10:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24288,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "1122:6:24",
=======
                        "id": 25407,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "1232:6:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
<<<<<<< HEAD
                      "id": 24290,
=======
                      "id": 25409,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21443,
                      "src": "1232:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24292,
=======
                    "id": 25412,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1232:30:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24293,
=======
                  "id": 25413,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "1232:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24299,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "1170:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                            "id": 25419,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "1291:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 24298,
=======
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 25418,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1283:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24297,
=======
                            "id": 25417,
>>>>>>> optimisation
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1283:7:30",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 24300,
=======
                        "id": 25420,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1283:15:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24301,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24269,
                        "src": "1179:6:24",
=======
                        "id": 25421,
                        "name": "firstPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25376,
                        "src": "1300:10:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24294,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "1147:6:24",
=======
                        "id": 25414,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "1268:6:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
<<<<<<< HEAD
                      "id": 24296,
=======
                      "id": 25416,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21664,
                      "src": "1268:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24302,
=======
                    "id": 25422,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:43:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 24303,
=======
                  "id": 25423,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "1268:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24307,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24220,
                        "src": "1203:5:24",
=======
                        "id": 25427,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "1328:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24310,
=======
                        "id": 25430,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 24308,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24269,
                          "src": "1210:6:24",
=======
                          "id": 25428,
                          "name": "firstPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25376,
                          "src": "1335:10:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
<<<<<<< HEAD
                          "id": 24309,
=======
                          "id": 25429,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1348:2:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "1335:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24304,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24257,
                        "src": "1192:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$23982",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 24306,
=======
                        "id": 25424,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "1317:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 25426,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buy",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 23958,
                      "src": "1192:10:24",
=======
                      "referencedDeclaration": 24948,
                      "src": "1317:10:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24311,
=======
                    "id": 25431,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:34:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24312,
=======
                  "id": 25432,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "1317:34:30"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
<<<<<<< HEAD
                        "id": 24313,
=======
                        "id": 25433,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "1357:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24315,
=======
                      "id": 25435,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4614,
                      "src": "1357:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24316,
=======
                    "id": 25436,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:14:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24317,
=======
                  "id": 25437,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "1357:14:30"
                }
              ]
            },
            "functionSelector": "6e0b95d0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuy",
            "nameLocation": "1062:7:30",
            "parameters": {
<<<<<<< HEAD
              "id": 24270,
=======
              "id": 25377,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24269,
=======
                  "id": 25376,
>>>>>>> optimisation
                  "mutability": "mutable",
                  "name": "firstPrice",
                  "nameLocation": "1078:10:30",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 24319,
                  "src": "1022:14:24",
=======
                  "scope": 25439,
                  "src": "1070:18:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24268,
=======
                    "id": 25375,
>>>>>>> optimisation
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1069:20:30"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 24271,
=======
              "id": 25378,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:0:30"
            },
<<<<<<< HEAD
            "scope": 24988,
=======
            "scope": 26178,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 24323,
=======
            "id": 25443,
>>>>>>> optimisation
            "nodeType": "FunctionDefinition",
            "src": "1380:30:30",
            "body": {
<<<<<<< HEAD
              "id": 24322,
=======
              "id": 25442,
>>>>>>> optimisation
              "nodeType": "Block",
              "src": "1408:2:30",
              "statements": []
            },
            "functionSelector": "3a1143da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStake",
            "nameLocation": "1389:9:30",
            "parameters": {
<<<<<<< HEAD
              "id": 24320,
=======
              "id": 25440,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1398:2:30"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 24321,
=======
              "id": 25441,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:0:30"
            },
<<<<<<< HEAD
            "scope": 24988,
=======
            "scope": 26178,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 24625,
            "nodeType": "FunctionDefinition",
            "src": "1285:1803:24",
            "body": {
              "id": 24624,
              "nodeType": "Block",
              "src": "1377:1711:24",
=======
            "id": 25733,
            "nodeType": "FunctionDefinition",
            "src": "1414:1654:30",
            "body": {
              "id": 25732,
              "nodeType": "Block",
              "src": "1510:1558:30",
>>>>>>> optimisation
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 25455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1531:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 25452,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "1516:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 25454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setStep",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24758,
                      "src": "1516:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:17:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25457,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:17:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130303030",
                        "id": 25461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "id": 25458,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "1539:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 25460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCexRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24741,
                      "src": "1539:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 25462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:25:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25463,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:25:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
<<<<<<< HEAD
                        "id": 24337,
=======
                        "id": 25469,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 24335,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24329,
                          "src": "1393:3:24",
=======
                          "id": 25467,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25449,
                          "src": "1580:3:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
<<<<<<< HEAD
                          "hexValue": "353030",
                          "id": 24336,
=======
                          "hexValue": "31303030",
                          "id": 25468,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1399:3:24",
=======
                          "src": "1586:4:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
<<<<<<< HEAD
                        "src": "1393:9:24",
=======
                        "src": "1580:10:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24332,
=======
                        "id": 25464,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "1570:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24334,
=======
                      "id": 25466,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
                      "src": "1570:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24338,
=======
                    "id": 25470,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1383:20:24",
=======
                    "src": "1570:21:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24339,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:20:24"
=======
                  "id": 25471,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:21:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24354,
=======
                        "id": 25486,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
<<<<<<< HEAD
                          "id": 24345,
=======
                          "id": 25477,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
<<<<<<< HEAD
                            "id": 24343,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24325,
                            "src": "1419:6:24",
=======
                            "id": 25475,
                            "name": "firstPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25445,
                            "src": "1607:10:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130",
<<<<<<< HEAD
                            "id": 24344,
=======
                            "id": 25476,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "1428:2:24",
=======
                            "src": "1620:2:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
<<<<<<< HEAD
                          "src": "1419:11:24",
=======
                          "src": "1607:15:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
<<<<<<< HEAD
                          "id": 24353,
=======
                          "id": 25485,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
<<<<<<< HEAD
                                "id": 24350,
=======
                                "id": 25482,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
<<<<<<< HEAD
                                      "id": 24346,
                                      "name": "pToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24257,
                                      "src": "1434:6:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PropertyToken_$23982",
                                        "typeString": "contract PropertyToken"
                                      }
                                    },
                                    "id": 24347,
=======
                                      "id": 25478,
                                      "name": "pToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25364,
                                      "src": "1626:6:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PropertyToken_$25014",
                                        "typeString": "contract PropertyToken"
                                      }
                                    },
                                    "id": 25479,
>>>>>>> optimisation
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "MAX_SUPPLY",
                                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                                    "referencedDeclaration": 23809,
                                    "src": "1434:17:24",
=======
                                    "referencedDeclaration": 24595,
                                    "src": "1626:17:30",
>>>>>>> optimisation
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 24348,
=======
                                  "id": 25480,
>>>>>>> optimisation
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
<<<<<<< HEAD
                                  "src": "1434:19:24",
=======
                                  "src": "1626:19:30",
>>>>>>> optimisation
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
<<<<<<< HEAD
                                  "hexValue": "31303030",
                                  "id": 24349,
=======
                                  "hexValue": "313030",
                                  "id": 25481,
>>>>>>> optimisation
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
<<<<<<< HEAD
                                  "src": "1456:4:24",
=======
                                  "src": "1648:3:30",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
<<<<<<< HEAD
                                "src": "1434:26:24",
=======
                                "src": "1626:25:30",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
<<<<<<< HEAD
                            "id": 24351,
=======
                            "id": 25483,
>>>>>>> optimisation
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
<<<<<<< HEAD
                            "src": "1433:28:24",
=======
                            "src": "1625:27:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3330",
<<<<<<< HEAD
                            "id": 24352,
=======
                            "id": 25484,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "1464:2:24",
=======
                            "src": "1655:2:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_30_by_1",
                              "typeString": "int_const 30"
                            },
                            "value": "30"
                          },
<<<<<<< HEAD
                          "src": "1433:33:24",
=======
                          "src": "1625:32:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1607:50:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 25472,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "1597:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
                      "src": "1597:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 25487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1597:61:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25488,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:61:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25492,
                          "name": "firstPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25445,
                          "src": "1674:10:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "1419:47:24",
=======
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 25493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1687:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1674:17:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24340,
=======
                        "id": 25489,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
<<<<<<< HEAD
                        "src": "1409:2:24",
=======
                        "src": "1664:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24342,
=======
                      "id": 25491,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
<<<<<<< HEAD
                      "src": "1409:9:24",
=======
                      "src": "1664:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24355,
=======
                    "id": 25495,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1409:58:24",
=======
                    "src": "1664:28:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24356,
                  "nodeType": "ExpressionStatement",
                  "src": "1409:58:24"
=======
                  "id": 25496,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:28:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24362,
=======
                        "id": 25502,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 24360,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24327,
                          "src": "1514:5:24",
=======
                          "id": 25500,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25447,
                          "src": "1708:5:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31303030",
<<<<<<< HEAD
                          "id": 24361,
=======
                          "id": 25501,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1522:4:24",
=======
                          "src": "1716:4:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
<<<<<<< HEAD
                        "src": "1514:12:24",
=======
                        "src": "1708:12:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24357,
=======
                        "id": 25497,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
<<<<<<< HEAD
                        "src": "1504:2:24",
=======
                        "src": "1698:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24359,
=======
                      "id": 25499,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
<<<<<<< HEAD
                      "src": "1504:9:24",
=======
                      "src": "1698:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24363,
=======
                    "id": 25503,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1504:23:24",
=======
                    "src": "1698:23:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24364,
                  "nodeType": "ExpressionStatement",
                  "src": "1504:23:24"
=======
                  "id": 25504,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:23:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24372,
=======
                        "id": 25512,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 24368,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24327,
                          "src": "1543:5:24",
=======
                          "id": 25508,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25447,
                          "src": "1737:5:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
<<<<<<< HEAD
                          "id": 24371,
=======
                          "id": 25511,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
<<<<<<< HEAD
                            "id": 24369,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24199,
                            "src": "1551:3:24",
=======
                            "id": 25509,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25294,
                            "src": "1745:3:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
<<<<<<< HEAD
                            "id": 24370,
=======
                            "id": 25510,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "1557:4:24",
=======
                            "src": "1751:4:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
<<<<<<< HEAD
                          "src": "1551:10:24",
=======
                          "src": "1745:10:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "1543:18:24",
=======
                        "src": "1737:18:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24365,
=======
                        "id": 25505,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
<<<<<<< HEAD
                        "src": "1533:2:24",
=======
                        "src": "1727:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24367,
=======
                      "id": 25507,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
<<<<<<< HEAD
                      "src": "1533:9:24",
=======
                      "src": "1727:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24373,
=======
                    "id": 25513,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1533:29:24",
=======
                    "src": "1727:29:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24374,
                  "nodeType": "ExpressionStatement",
                  "src": "1533:29:24"
                },
                {
                  "assignments": [
                    24377
=======
                  "id": 25514,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:29:30"
                },
                {
                  "assignments": [
                    25517
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 24377,
                      "mutability": "mutable",
                      "name": "orderPlatform",
                      "nameLocation": "1572:13:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24624,
                      "src": "1568:17:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OTC_$23788",
                        "typeString": "contract OTC"
                      },
                      "typeName": {
                        "id": 24376,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24375,
                          "name": "OTC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23788,
                          "src": "1568:3:24"
                        },
                        "referencedDeclaration": 23788,
                        "src": "1568:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
=======
                      "id": 25517,
                      "mutability": "mutable",
                      "name": "orderPlatform1",
                      "nameLocation": "1766:14:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 25732,
                      "src": "1762:18:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OTC_$24570",
                        "typeString": "contract OTC"
                      },
                      "typeName": {
                        "id": 25516,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25515,
                          "name": "OTC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24570,
                          "src": "1762:3:30"
                        },
                        "referencedDeclaration": 24570,
                        "src": "1762:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
>>>>>>> optimisation
                          "typeString": "contract OTC"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 24388,
=======
                  "id": 25528,
>>>>>>> optimisation
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24383,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24245,
                            "src": "1604:6:24",
=======
                            "id": 25523,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25349,
                            "src": "1799:6:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
                            }
                          ],
<<<<<<< HEAD
                          "id": 24382,
=======
                          "id": 25522,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "1596:7:24",
=======
                          "src": "1791:7:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24381,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1596:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24384,
=======
                            "id": 25521,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1791:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25524,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1596:15:24",
=======
                        "src": "1791:15:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24385,
                        "name": "feePot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24232,
                        "src": "1613:6:24",
=======
                        "id": 25525,
                        "name": "feePot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25327,
                        "src": "1808:6:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24386,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24329,
                        "src": "1621:3:24",
=======
                        "id": 25526,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25449,
                        "src": "1816:3:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
<<<<<<< HEAD
                      "id": 24380,
=======
                      "id": 25520,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "1588:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint16_$returns$_t_contract$_OTC_$23788_$",
                        "typeString": "function (address,address,uint16) returns (contract OTC)"
                      },
                      "typeName": {
                        "id": 24379,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24378,
                          "name": "OTC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23788,
                          "src": "1592:3:24"
                        },
                        "referencedDeclaration": 23788,
                        "src": "1592:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      }
                    },
                    "id": 24387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1588:37:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OTC_$23788",
                      "typeString": "contract OTC"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1568:57:24"
                },
                {
                  "assignments": [
                    24390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24390,
                      "mutability": "mutable",
                      "name": "rentAmount",
                      "nameLocation": "1639:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24624,
                      "src": "1631:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
=======
                      "src": "1783:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint16_$returns$_t_contract$_OTC_$24570_$",
                        "typeString": "function (address,address,uint16) returns (contract OTC)"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 24389,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1631:7:24",
=======
                        "id": 25519,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25518,
                          "name": "OTC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24570,
                          "src": "1787:3:30"
                        },
                        "referencedDeclaration": 24570,
                        "src": "1787:3:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
<<<<<<< HEAD
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24394,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24393,
=======
                      }
                    },
                    "id": 25527,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
<<<<<<< HEAD
                    "leftExpression": {
                      "id": 24391,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24325,
                      "src": "1652:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 24392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1661:2:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "1652:11:24",
=======
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1783:37:30",
                    "tryCall": false,
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OTC_$24570",
                      "typeString": "contract OTC"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "1631:32:24"
=======
                  "src": "1762:58:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24398,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24257,
                        "src": "1692:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                        "id": 25532,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "1850:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                          "typeString": "contract PropertyToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                          "typeString": "contract PropertyToken"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24395,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24377,
                        "src": "1669:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 24397,
=======
                        "id": 25529,
                        "name": "orderPlatform1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25517,
                        "src": "1826:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 25531,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToken",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 23076,
                      "src": "1669:22:24",
=======
                      "referencedDeclaration": 23858,
                      "src": "1826:23:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$22161_$returns$__$",
                        "typeString": "function (contract IERC20) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24399,
=======
                    "id": 25533,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1669:30:24",
=======
                    "src": "1826:31:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24400,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:30:24"
=======
                  "id": 25534,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:31:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24404,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "1734:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                            "id": 25538,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "1893:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "expression": {
<<<<<<< HEAD
                            "id": 24402,
                            "name": "orderPlatform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24377,
                            "src": "1712:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
                            }
                          },
                          "id": 24403,
=======
                            "id": 25536,
                            "name": "orderPlatform1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25517,
                            "src": "1870:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
                          },
                          "id": 25537,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isToken",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 23121,
                          "src": "1712:21:24",
=======
                          "referencedDeclaration": 23903,
                          "src": "1870:22:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$22161_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view external returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 24405,
=======
                        "id": 25539,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1712:29:24",
=======
                        "src": "1870:30:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 24401,
=======
                      "id": 25535,
>>>>>>> optimisation
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
<<<<<<< HEAD
                      "src": "1705:6:24",
=======
                      "src": "1863:6:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24406,
=======
                    "id": 25540,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1705:37:24",
=======
                    "src": "1863:38:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24407,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:37:24"
=======
                  "id": 25541,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:38:30"
>>>>>>> optimisation
                },
                {
                  "assignments": [
                    25544
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25544,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "1930:11:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 25732,
                      "src": "1922:19:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25543,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1922:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "SELLLER",
                  "id": 25550,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25545,
                      "name": "firstPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25445,
                      "src": "1944:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 25546,
                          "name": "pToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25364,
                          "src": "1957:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PropertyToken_$25014",
                            "typeString": "contract PropertyToken"
                          }
                        },
                        "id": 25547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "TOKEN_PRICE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24598,
                        "src": "1957:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 25548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1957:20:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1944:33:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1922:55:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24411,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24220,
                        "src": "1777:5:24",
=======
                        "id": 25554,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "1997:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24408,
=======
                        "id": 25551,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "1983:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24410,
=======
                      "id": 25553,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4597,
                      "src": "1983:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24412,
=======
                    "id": 25555,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1983:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24413,
=======
                  "id": 25556,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "1983:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24419,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "1812:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                            "id": 25562,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "2032:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 24418,
=======
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 25561,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2024:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24417,
=======
                            "id": 25560,
>>>>>>> optimisation
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2024:7:30",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 24420,
=======
                        "id": 25563,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2024:15:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24421,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "1821:3:24",
=======
                        "id": 25564,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25294,
                        "src": "2041:3:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24414,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "1789:6:24",
=======
                        "id": 25557,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "2009:6:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
<<<<<<< HEAD
                      "id": 24416,
=======
                      "id": 25559,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21664,
                      "src": "2009:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24422,
=======
                    "id": 25565,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:36:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 24423,
=======
                  "id": 25566,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "2009:36:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24427,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24325,
                        "src": "1843:6:24",
=======
                        "id": 25570,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "2063:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25571,
                        "name": "firstPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25445,
                        "src": "2070:10:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24424,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "1831:6:24",
=======
                        "id": 25567,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "2051:6:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
<<<<<<< HEAD
                      "id": 24426,
=======
                      "id": 25569,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21443,
                      "src": "2051:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24428,
=======
                    "id": 25572,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2051:30:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24429,
=======
                  "id": 25573,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "2051:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24433,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24220,
                        "src": "1867:5:24",
=======
                        "id": 25577,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "2098:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24434,
                        "name": "rentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24390,
                        "src": "1874:10:24",
=======
                        "id": 25578,
                        "name": "firstPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25445,
                        "src": "2105:10:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24430,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24257,
                        "src": "1856:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$23982",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 24432,
=======
                        "id": 25574,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "2087:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 25576,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buy",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 23958,
                      "src": "1856:10:24",
=======
                      "referencedDeclaration": 24948,
                      "src": "2087:10:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24435,
=======
                    "id": 25579,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:29:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24436,
=======
                  "id": 25580,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "2087:29:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24443,
=======
                        "id": 25587,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 24440,
                              "name": "addr1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24220,
                              "src": "1916:5:24",
=======
                              "id": 25584,
                              "name": "addr1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25315,
                              "src": "2147:5:30",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
<<<<<<< HEAD
                              "id": 24438,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24257,
                              "src": "1899:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$23982",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 24439,
=======
                              "id": 25582,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25364,
                              "src": "2130:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$25014",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 25583,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21596,
                            "src": "2130:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 24441,
=======
                          "id": 25585,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2130:23:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 24442,
                          "name": "rentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24390,
                          "src": "1926:10:24",
=======
                          "id": 25586,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25544,
                          "src": "2157:11:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2130:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "427579206674206572726f72",
<<<<<<< HEAD
                        "id": 24444,
=======
                        "id": 25588,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2170:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_581172d90d308e18a7d0cfe3c6853fee38b4ac6ad10ef059bb7edbff8d06a147",
                          "typeString": "literal_string \"Buy ft error\""
                        },
                        "value": "Buy ft error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_581172d90d308e18a7d0cfe3c6853fee38b4ac6ad10ef059bb7edbff8d06a147",
                          "typeString": "literal_string \"Buy ft error\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 24437,
=======
                      "id": 25581,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2122:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24445,
=======
                    "id": 25589,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2122:63:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24446,
=======
                  "id": 25590,
>>>>>>> optimisation
                  "nodeType": "ExpressionStatement",
                  "src": "2122:63:30"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    24448,
                    24450,
                    24452
=======
                    25592,
                    25594,
                    25596
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 24448,
=======
                      "id": 25592,
>>>>>>> optimisation
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "2198:1:30",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 24624,
                      "src": "1960:7:24",
=======
                      "scope": 25732,
                      "src": "2192:7:30",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 24447,
=======
                        "id": 25591,
>>>>>>> optimisation
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2192:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 24450,
=======
                      "id": 25594,
>>>>>>> optimisation
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2209:1:30",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 24624,
                      "src": "1969:9:24",
=======
                      "scope": 25732,
                      "src": "2201:9:30",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 24449,
=======
                        "id": 25593,
>>>>>>> optimisation
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2201:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 24452,
=======
                      "id": 25596,
>>>>>>> optimisation
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "2220:1:30",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 24624,
                      "src": "1980:9:24",
=======
                      "scope": 25732,
                      "src": "2212:9:30",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 24451,
=======
                        "id": 25595,
>>>>>>> optimisation
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2212:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 24467,
=======
                  "id": 25611,
>>>>>>> optimisation
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24456,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "2015:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                            "id": 25600,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "2247:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 24455,
=======
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 25599,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2239:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24454,
=======
                            "id": 25598,
>>>>>>> optimisation
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2239:7:30",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 24457,
=======
                        "id": 25601,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2239:15:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24458,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24220,
                        "src": "2030:5:24",
=======
                        "id": 25602,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "2262:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24461,
                            "name": "orderPlatform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24377,
                            "src": "2051:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$23788",
=======
                            "id": 25605,
                            "name": "orderPlatform1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25517,
                            "src": "2283:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$24570",
>>>>>>> optimisation
                              "typeString": "contract OTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 24460,
=======
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 25604,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2275:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24459,
=======
                            "id": 25603,
>>>>>>> optimisation
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2275:7:30",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 24462,
=======
                        "id": 25606,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2043:22:24",
=======
                        "src": "2275:23:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24463,
                        "name": "rentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24390,
                        "src": "2073:10:24",
=======
                        "id": 25607,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25544,
                        "src": "2306:11:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24464,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "2091:3:24",
=======
                        "id": 25608,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25294,
                        "src": "2325:3:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 24465,
=======
                        "id": 25609,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2102:1:24",
=======
                        "src": "2336:1:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 24453,
                      "name": "getVRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24987,
                      "src": "1993:6:24",
=======
                      "id": 25597,
                      "name": "getVRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26177,
                      "src": "2225:6:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256) returns (uint8,bytes32,bytes32)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24466,
=======
                    "id": 25610,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1993:116:24",
=======
                    "src": "2225:118:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "1959:150:24"
                },
                {
                  "assignments": [
                    24469,
                    24471,
                    24473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24469,
                      "mutability": "mutable",
                      "name": "exist",
                      "nameLocation": "2121:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24624,
                      "src": "2116:10:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 24468,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2116:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24471,
                      "mutability": "mutable",
                      "name": "feex10r",
                      "nameLocation": "2135:7:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24624,
                      "src": "2128:14:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 24470,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "2128:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24473,
                      "mutability": "mutable",
                      "name": "feePotr",
                      "nameLocation": "2152:7:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24624,
                      "src": "2144:15:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24472,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2144:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24481,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24478,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24245,
                            "src": "2215:6:24",
=======
                  "src": "2191:152:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25617,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "2393:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 25616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2385:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25615,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2385:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2385:15:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 25621,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25349,
                            "src": "2416:6:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
                            }
                          ],
<<<<<<< HEAD
                          "id": 24477,
=======
                          "id": 25620,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2207:7:24",
=======
                          "src": "2408:7:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24476,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2207:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24479,
=======
                            "id": 25619,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2408:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25622,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2207:15:24",
=======
                        "src": "2408:15:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
<<<<<<< HEAD
=======
                      },
                      {
                        "id": 25623,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25544,
                        "src": "2431:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25624,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25447,
                        "src": "2450:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25625,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25294,
                        "src": "2463:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25626,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25592,
                        "src": "2474:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 25627,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25594,
                        "src": "2483:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 25628,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25596,
                        "src": "2492:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
>>>>>>> optimisation
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24474,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24377,
                        "src": "2163:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 24475,
=======
                        "id": 25612,
                        "name": "orderPlatform1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25517,
                        "src": "2349:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 25614,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currencyInfosByAddress",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 22920,
                      "src": "2163:43:24",
=======
                      "referencedDeclaration": 24066,
                      "src": "2349:28:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$_t_uint16_$_t_uint256_$",
                        "typeString": "function (address) view external returns (bool,uint16,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24480,
=======
                    "id": 25629,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2163:60:24",
=======
                    "src": "2349:150:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint16_$_t_uint256_$",
                      "typeString": "tuple(bool,uint16,uint256)"
                    }
                  },
<<<<<<< HEAD
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2115:108:24"
=======
                  "id": 25630,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:150:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24483,
                        "name": "exist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24469,
                        "src": "2237:5:24",
=======
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 25634,
                              "name": "addr1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25315,
                              "src": "2530:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25632,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25364,
                              "src": "2513:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$25014",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 25633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21596,
                            "src": "2513:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2513:23:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2540:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2513:28:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "496e69742070726f626c656d2063757272656e637920646f65736e2774206578697374",
                        "id": 24484,
=======
                        "hexValue": "53656c6c204f72646572206674206572726f72",
                        "id": 25638,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2244:37:24",
=======
                        "src": "2543:21:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fc0746034c92554b594140ff4a1aa68b49d6974b90dc7a08fa9487c85e6e20e",
                          "typeString": "literal_string \"Init problem currency doesn't exist\""
                        },
                        "value": "Init problem currency doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fc0746034c92554b594140ff4a1aa68b49d6974b90dc7a08fa9487c85e6e20e",
                          "typeString": "literal_string \"Init problem currency doesn't exist\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 24482,
=======
                      "id": 25631,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2229:7:24",
=======
                      "src": "2505:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2229:53:24",
=======
                    "src": "2505:60:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25640,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "2229:53:24"
=======
                  "src": "2505:60:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
<<<<<<< HEAD
                        "id": 24490,
=======
                        "id": 25650,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 24488,
                          "name": "feex10r",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24471,
                          "src": "2296:7:24",
=======
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 25646,
                                  "name": "orderPlatform1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25517,
                                  "src": "2611:14:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OTC_$24570",
                                    "typeString": "contract OTC"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OTC_$24570",
                                    "typeString": "contract OTC"
                                  }
                                ],
                                "id": 25645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2603:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25644,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2603:7:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2603:23:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25642,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25364,
                              "src": "2586:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$25014",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 25643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21596,
                            "src": "2586:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2586:41:30",
                          "tryCall": false,
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 24489,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24329,
                          "src": "2307:3:24",
=======
                          "id": 25649,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25544,
                          "src": "2631:11:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
<<<<<<< HEAD
                        "src": "2296:14:24",
=======
                        "src": "2586:56:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "496e6974206665652070726f626c656d",
                        "id": 24491,
=======
                        "hexValue": "53656c6c204f72646572206674206572726f72",
                        "id": 25651,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2312:18:24",
=======
                        "src": "2650:21:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21c8a9148c5ecf7dd1592f8f8511cfe94a1e7b151924cf427d81e0c04754e3de",
                          "typeString": "literal_string \"Init fee problem\""
                        },
                        "value": "Init fee problem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21c8a9148c5ecf7dd1592f8f8511cfe94a1e7b151924cf427d81e0c04754e3de",
                          "typeString": "literal_string \"Init fee problem\""
                        }
                      ],
                      "id": 25641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "2288:7:24",
=======
                      "src": "2571:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24492,
=======
                    "id": 25652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2571:106:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25653,
                  "nodeType": "ExpressionStatement",
                  "src": "2571:106:30"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25654,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "2683:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4614,
                      "src": "2683:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25657,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2288:43:24",
=======
                    "src": "2683:14:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24493,
                  "nodeType": "ExpressionStatement",
                  "src": "2288:43:24"
=======
                  "id": 25658,
                  "nodeType": "ExpressionStatement",
                  "src": "2683:14:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "id": 24499,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "2381:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 24498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2373:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24497,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2373:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2373:15:24",
                        "tryCall": false,
=======
                        "id": 25662,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25321,
                        "src": "2729:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24503,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24245,
                            "src": "2404:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
                            }
                          ],
                          "id": 24502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2396:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24501,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2396:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2396:15:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
<<<<<<< HEAD
                      },
                      {
                        "id": 24505,
                        "name": "rentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24390,
                        "src": "2419:10:24",
=======
                      ],
                      "expression": {
                        "id": 25659,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "2715:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD
                      {
                        "id": 24506,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24327,
                        "src": "2437:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24507,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "2450:3:24",
=======
                      "id": 25661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4597,
                      "src": "2715:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2715:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25664,
                  "nodeType": "ExpressionStatement",
                  "src": "2715:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25668,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25321,
                        "src": "2753:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25669,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25447,
                        "src": "2760:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24508,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24448,
                        "src": "2461:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 24509,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24450,
                        "src": "2470:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 24510,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24452,
                        "src": "2479:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
=======
>>>>>>> optimisation
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24494,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24377,
                        "src": "2338:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 24496,
=======
                        "id": 25665,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "2741:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
                      "id": 25667,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initSellOrder",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 23284,
                      "src": "2338:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 24511,
=======
                      "referencedDeclaration": 21443,
                      "src": "2741:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25670,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2338:148:24",
=======
                    "src": "2741:25:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24512,
                  "nodeType": "ExpressionStatement",
                  "src": "2338:148:24"
=======
                  "id": 25671,
                  "nodeType": "ExpressionStatement",
                  "src": "2741:25:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 24516,
                              "name": "addr1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24220,
                              "src": "2517:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24514,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24257,
                              "src": "2500:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$23982",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 24515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21142,
                            "src": "2500:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 24517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:23:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 24518,
=======
                        "arguments": [
                          {
                            "id": 25677,
                            "name": "orderPlatform1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25517,
                            "src": "2795:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 25676,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
<<<<<<< HEAD
                          "nodeType": "Literal",
                          "src": "2527:1:24",
=======
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2787:7:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
<<<<<<< HEAD
                          "value": "0"
                        },
                        "src": "2500:28:24",
=======
                          "typeName": {
                            "id": 25675,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2787:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2787:23:30",
                        "tryCall": false,
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "53656c6c204f72646572206674206572726f72",
                        "id": 24520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2530:21:24",
=======
                        "id": 25679,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25294,
                        "src": "2812:3:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d44c4486d8695fbc0fede1a45b8dc16d7b1b98b08db4acd9daf7ce2e74c7cac",
                          "typeString": "literal_string \"Sell Order ft error\""
                        },
                        "value": "Sell Order ft error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d44c4486d8695fbc0fede1a45b8dc16d7b1b98b08db4acd9daf7ce2e74c7cac",
                          "typeString": "literal_string \"Sell Order ft error\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 24513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2492:7:24",
=======
                      "expression": {
                        "id": 25672,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "2772:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
                      "id": 25674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21664,
                      "src": "2772:14:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24521,
=======
                    "id": 25680,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2492:60:24",
=======
                    "src": "2772:44:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24522,
                  "nodeType": "ExpressionStatement",
                  "src": "2492:60:24"
=======
                  "id": 25681,
                  "nodeType": "ExpressionStatement",
                  "src": "2772:44:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 24528,
                                  "name": "orderPlatform",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24377,
                                  "src": "2598:13:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OTC_$23788",
                                    "typeString": "contract OTC"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OTC_$23788",
                                    "typeString": "contract OTC"
                                  }
                                ],
                                "id": 24527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2590:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24526,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2590:7:24",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2590:22:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24524,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24257,
                              "src": "2573:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$23982",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 24525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21142,
                            "src": "2573:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 24530,
=======
                        "arguments": [
                          {
                            "id": 25687,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "2849:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 25686,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
<<<<<<< HEAD
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2573:40:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24531,
                          "name": "rentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24390,
                          "src": "2617:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2573:54:24",
=======
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2841:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25685,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2841:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2841:15:30",
                        "tryCall": false,
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "53656c6c204f72646572206674206572726f72",
                        "id": 24533,
=======
                        "hexValue": "30",
                        "id": 25689,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2635:21:24",
=======
                        "src": "2858:1:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d44c4486d8695fbc0fede1a45b8dc16d7b1b98b08db4acd9daf7ce2e74c7cac",
                          "typeString": "literal_string \"Sell Order ft error\""
                        },
                        "value": "Sell Order ft error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d44c4486d8695fbc0fede1a45b8dc16d7b1b98b08db4acd9daf7ce2e74c7cac",
                          "typeString": "literal_string \"Sell Order ft error\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 24523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2558:7:24",
=======
                      "expression": {
                        "id": 25682,
                        "name": "orderPlatform1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25517,
                        "src": "2822:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 25684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24443,
                      "src": "2822:18:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24534,
=======
                    "id": 25690,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2558:104:24",
=======
                    "src": "2822:38:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24535,
                  "nodeType": "ExpressionStatement",
                  "src": "2558:104:24"
=======
                  "id": 25691,
                  "nodeType": "ExpressionStatement",
                  "src": "2822:38:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
<<<<<<< HEAD
                        "id": 24536,
=======
                        "id": 25692,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
<<<<<<< HEAD
                        "src": "2668:2:24",
=======
                        "src": "2866:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24538,
=======
                      "id": 25694,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4614,
<<<<<<< HEAD
                      "src": "2668:12:24",
=======
                      "src": "2866:12:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24539,
=======
                    "id": 25695,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2668:14:24",
=======
                    "src": "2866:14:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24540,
                  "nodeType": "ExpressionStatement",
                  "src": "2668:14:24"
=======
                  "id": 25696,
                  "nodeType": "ExpressionStatement",
                  "src": "2866:14:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24544,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24226,
                        "src": "2714:5:24",
=======
                        "arguments": [
                          {
                            "id": 25702,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25349,
                            "src": "2936:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
                            }
                          ],
                          "id": 25701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2928:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25700,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2928:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2928:15:30",
                        "tryCall": false,
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24541,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "2700:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24543,
=======
                        "id": 25697,
                        "name": "orderPlatform1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25517,
                        "src": "2901:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 25699,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 4597,
                      "src": "2700:13:24",
=======
                      "referencedDeclaration": 23835,
                      "src": "2901:26:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24545,
=======
                    "id": 25704,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2700:20:24",
=======
                    "src": "2901:43:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24546,
                  "nodeType": "ExpressionStatement",
                  "src": "2700:20:24"
=======
                  "id": 25705,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:43:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24550,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24327,
                        "src": "2738:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24547,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "2726:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeDoll_$22862",
                          "typeString": "contract FakeDoll"
                        }
                      },
                      "id": 24549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22861,
                      "src": "2726:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2726:18:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24552,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:18:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24558,
                            "name": "orderPlatform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24377,
                            "src": "2773:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
=======
                        "arguments": [
                          {
                            "expression": {
                              "id": 25711,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2969:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 25712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "2969:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
>>>>>>> optimisation
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 24557,
=======
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 25710,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2765:7:24",
=======
                          "src": "2962:6:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24556,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2765:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24559,
=======
                            "id": 25709,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "2962:6:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25713,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2765:22:24",
=======
                        "src": "2962:21:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24560,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "2789:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24553,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "2750:6:24",
=======
                        "id": 25706,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12826,
                        "src": "2950:7:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeDoll_$22862",
                          "typeString": "contract FakeDoll"
                        }
                      },
<<<<<<< HEAD
                      "id": 24555,
=======
                      "id": 25708,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 21210,
                      "src": "2750:14:24",
=======
                      "referencedDeclaration": 5343,
                      "src": "2950:11:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24561,
=======
                    "id": 25714,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2750:43:24",
=======
                    "src": "2950:34:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 24562,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:43:24"
=======
                  "id": 25715,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:34:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "id": 24568,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "2825:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 24567,
=======
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 25722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 25719,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 25717,
                                      "name": "price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25447,
                                      "src": "3000:5:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 25718,
                                      "name": "fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25449,
                                      "src": "3008:3:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "src": "3000:11:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 25720,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2999:13:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 25721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3015:4:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "2999:20:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 25723,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2817:7:24",
=======
                          "nodeType": "TupleExpression",
                          "src": "2998:22:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24566,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2817:7:24",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 24569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2817:15:24",
                        "tryCall": false,
=======
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 25726,
                              "name": "feePot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25327,
                              "src": "3041:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25724,
                              "name": "dollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25349,
                              "src": "3024:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockToken_$25277",
                                "typeString": "contract MockToken"
                              }
                            },
                            "id": 25725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21596,
                            "src": "3024:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3024:24:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2998:50:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "30",
                        "id": 24570,
=======
                        "hexValue": "46656550726f626c656d",
                        "id": 25729,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2834:1:24",
=======
                        "src": "3050:12:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
<<<<<<< HEAD
                      "expression": {
                        "id": 24563,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24377,
                        "src": "2799:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 24565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23661,
                      "src": "2799:17:24",
=======
                      "id": 25716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2990:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24571,
=======
                    "id": 25730,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2799:37:24",
=======
                    "src": "2990:73:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24572,
                  "nodeType": "ExpressionStatement",
                  "src": "2799:37:24"
                },
                {
                  "expression": {
                    "arguments": [],
=======
                  "id": 25731,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:73:30"
                }
              ]
            },
            "functionSelector": "edd2545f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOTCsellOrder",
            "nameLocation": "1423:16:30",
            "parameters": {
              "id": 25450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25445,
                  "mutability": "mutable",
                  "name": "firstPrice",
                  "nameLocation": "1453:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 25733,
                  "src": "1445:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25447,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1477:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 25733,
                  "src": "1469:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25449,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1495:3:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 25733,
                  "src": "1488:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 25448,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1439:63:30"
            },
            "returnParameters": {
              "id": 25451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1510:0:30"
            },
            "scope": 26178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26082,
            "nodeType": "FunctionDefinition",
            "src": "3072:2272:30",
            "body": {
              "id": 26081,
              "nodeType": "Block",
              "src": "3167:2177:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 25745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3188:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 25742,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "3173:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 25744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setStep",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24758,
                      "src": "3173:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3173:17:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25747,
                  "nodeType": "ExpressionStatement",
                  "src": "3173:17:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130303030",
                        "id": 25751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3215:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "id": 25748,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "3196:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 25750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCexRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24741,
                      "src": "3196:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32) external"
                      }
                    },
                    "id": 25752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:25:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25753,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:25:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25757,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3239:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 25758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "3239:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
>>>>>>> optimisation
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
<<<<<<< HEAD
                        "id": 24573,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "2842:2:24",
=======
                        "id": 25754,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12826,
                        "src": "3227:7:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24575,
=======
                      "id": 25756,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 4614,
                      "src": "2842:12:24",
=======
                      "referencedDeclaration": 5343,
                      "src": "3227:11:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24576,
=======
                    "id": 25759,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2842:14:24",
=======
                    "src": "3227:26:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24577,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:14:24"
=======
                  "id": 25760,
                  "nodeType": "ExpressionStatement",
                  "src": "3227:26:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "id": 24583,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24245,
                            "src": "2911:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
                            }
                          ],
                          "id": 24582,
=======
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 25766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25764,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25739,
                          "src": "3269:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 25765,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2903:7:24",
=======
                          "nodeType": "Literal",
                          "src": "3275:4:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24581,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2903:7:24",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 24584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2903:15:24",
                        "tryCall": false,
=======
                        "src": "3269:10:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24578,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24377,
                        "src": "2877:13:24",
=======
                        "id": 25761,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3259:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
<<<<<<< HEAD
                      "id": 24580,
=======
                      "id": 25763,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawFee",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 23053,
                      "src": "2877:25:24",
=======
                      "referencedDeclaration": 4737,
                      "src": "3259:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24585,
=======
                    "id": 25767,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2877:42:24",
=======
                    "src": "3259:21:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24586,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:42:24"
=======
                  "id": 25768,
                  "nodeType": "ExpressionStatement",
                  "src": "3259:21:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "id": 24592,
                            "name": "feePot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24232,
                            "src": "2955:6:24",
=======
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25772,
                            "name": "firstPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25735,
                            "src": "3296:10:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
<<<<<<< HEAD
=======
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 25773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3309:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "3296:15:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
>>>>>>> optimisation
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 24590,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24245,
                            "src": "2938:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
                            }
                          },
<<<<<<< HEAD
                          "id": 24591,
=======
                          "id": 25782,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21142,
                          "src": "2938:16:24",
=======
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 25775,
                                      "name": "pToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25364,
                                      "src": "3315:6:30",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PropertyToken_$25014",
                                        "typeString": "contract PropertyToken"
                                      }
                                    },
                                    "id": 25776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "MAX_SUPPLY",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24595,
                                    "src": "3315:17:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 25777,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3315:19:30",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 25778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3337:4:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "3315:26:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 25780,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3314:28:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 25781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3345:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_30_by_1",
                              "typeString": "int_const 30"
                            },
                            "value": "30"
                          },
                          "src": "3314:33:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
<<<<<<< HEAD
                        "id": 24593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2938:24:24",
                        "tryCall": false,
=======
                        "src": "3296:51:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24587,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12826,
                        "src": "2926:7:24",
=======
                        "id": 25769,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3286:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12826_$",
                          "typeString": "type(library console)"
                        }
                      },
<<<<<<< HEAD
                      "id": 24589,
=======
                      "id": 25771,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 5343,
                      "src": "2926:11:24",
=======
                      "referencedDeclaration": 4737,
                      "src": "3286:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
<<<<<<< HEAD
                    "id": 24594,
=======
                    "id": 25784,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2926:37:24",
=======
                    "src": "3286:62:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24595,
                  "nodeType": "ExpressionStatement",
                  "src": "2926:37:24"
=======
                  "id": 25785,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:62:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 24604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 24601,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 24599,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24327,
                                    "src": "2983:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 24600,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24329,
                                    "src": "2991:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "src": "2983:11:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 24602,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2982:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "31303030",
                              "id": 24603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2998:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "src": "2982:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 24605,
=======
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25791,
>>>>>>> optimisation
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
<<<<<<< HEAD
                        "nodeType": "TupleExpression",
                        "src": "2981:22:24",
=======
                        "leftExpression": {
                          "id": 25789,
                          "name": "firstPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25735,
                          "src": "3364:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 25790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3377:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "3364:17:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24596,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12826,
                        "src": "2969:7:24",
=======
                        "id": 25786,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3354:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$12826_$",
                          "typeString": "type(library console)"
                        }
                      },
<<<<<<< HEAD
                      "id": 24598,
=======
                      "id": 25788,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 5343,
                      "src": "2969:11:24",
=======
                      "referencedDeclaration": 4737,
                      "src": "3354:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
<<<<<<< HEAD
                    "id": 24606,
=======
                    "id": 25792,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2969:35:24",
=======
                    "src": "3354:28:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24607,
                  "nodeType": "ExpressionStatement",
                  "src": "2969:35:24"
=======
                  "id": 25793,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:28:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24620,
=======
                        "id": 25799,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 24614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 24611,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 24609,
                                      "name": "price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24327,
                                      "src": "3020:5:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 24610,
                                      "name": "fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24329,
                                      "src": "3028:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "src": "3020:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 24612,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3019:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 24613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3035:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "3019:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 24615,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3018:22:24",
=======
                          "id": 25797,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25737,
                          "src": "3398:5:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "arguments": [
                            {
                              "id": 24618,
                              "name": "feePot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24232,
                              "src": "3061:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24616,
                              "name": "dollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24245,
                              "src": "3044:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FakeDoll_$22862",
                                "typeString": "contract FakeDoll"
                              }
                            },
                            "id": 24617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21142,
                            "src": "3044:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 24619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3044:24:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3018:50:24",
=======
                          "hexValue": "31303030",
                          "id": 25798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3406:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "3398:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 25794,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3388:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      {
                        "hexValue": "46656550726f626c656d",
                        "id": 24621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3070:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_155c1e3d094150eaaeffe4aa5f5db51005a022376881188e5559696129495e0a",
                          "typeString": "literal_string \"FeeProblem\""
                        },
                        "value": "FeeProblem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_155c1e3d094150eaaeffe4aa5f5db51005a022376881188e5559696129495e0a",
                          "typeString": "literal_string \"FeeProblem\""
                        }
                      ],
                      "id": 24608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3010:7:24",
=======
                      "id": 25796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
                      "src": "3388:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24622,
=======
                    "id": 25800,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3010:73:24",
=======
                    "src": "3388:23:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24623,
                  "nodeType": "ExpressionStatement",
                  "src": "3010:73:24"
                }
              ]
            },
            "functionSelector": "edd2545f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOTCsellOrder",
            "nameLocation": "1294:16:24",
            "parameters": {
              "id": 24330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24325,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1324:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24625,
                  "src": "1316:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24327,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1344:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24625,
                  "src": "1336:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
=======
                  "id": 25801,
                  "nodeType": "ExpressionStatement",
                  "src": "3388:23:30"
>>>>>>> optimisation
                },
                {
                  "constant": false,
                  "id": 24329,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1362:3:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24625,
                  "src": "1355:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 24328,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:59:24"
            },
            "returnParameters": {
              "id": 24331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1377:0:24"
            },
            "scope": 24988,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24892,
            "nodeType": "FunctionDefinition",
            "src": "3092:1525:24",
            "body": {
              "id": 24891,
              "nodeType": "Block",
              "src": "3183:1434:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
<<<<<<< HEAD
                        "id": 24639,
=======
                        "id": 25809,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 24637,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24631,
                          "src": "3199:3:24",
=======
                          "id": 25805,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25737,
                          "src": "3427:5:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
<<<<<<< HEAD
                          "hexValue": "353030",
                          "id": 24638,
=======
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25808,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
<<<<<<< HEAD
                          "nodeType": "Literal",
                          "src": "3205:3:24",
=======
                          "leftExpression": {
                            "id": 25806,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25294,
                            "src": "3435:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 25807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3441:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "3435:10:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
<<<<<<< HEAD
                        "src": "3199:9:24",
=======
                        "src": "3427:18:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24634,
=======
                        "id": 25802,
>>>>>>> optimisation
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
<<<<<<< HEAD
                        "src": "3189:2:24",
=======
                        "src": "3417:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
<<<<<<< HEAD
                      "id": 24636,
=======
                      "id": 25804,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
<<<<<<< HEAD
                      "src": "3189:9:24",
=======
                      "src": "3417:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24640,
=======
                    "id": 25810,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3189:20:24",
=======
                    "src": "3417:29:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24641,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:20:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 24647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24645,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24627,
                            "src": "3225:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
=======
                  "id": 25811,
                  "nodeType": "ExpressionStatement",
                  "src": "3417:29:30"
                },
                {
                  "assignments": [
                    25814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25814,
                      "mutability": "mutable",
                      "name": "orderPlatform",
                      "nameLocation": "3456:13:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "3452:17:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OTC_$24570",
                        "typeString": "contract OTC"
                      },
                      "typeName": {
                        "id": 25813,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25812,
                          "name": "OTC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24570,
                          "src": "3452:3:30"
                        },
                        "referencedDeclaration": 24570,
                        "src": "3452:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25825,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25820,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25349,
                            "src": "3488:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
>>>>>>> optimisation
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 24646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3234:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "3225:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
<<<<<<< HEAD
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 24655,
=======
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
                            }
                          ],
                          "id": 25819,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 24652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 24648,
                                      "name": "pToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24257,
                                      "src": "3240:6:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PropertyToken_$23982",
                                        "typeString": "contract PropertyToken"
                                      }
                                    },
                                    "id": 24649,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "MAX_SUPPLY",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23809,
                                    "src": "3240:17:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 24650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3240:19:24",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 24651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3262:4:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "3240:26:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 24653,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3239:28:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 24654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3270:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_30_by_1",
                              "typeString": "int_const 30"
                            },
                            "value": "30"
                          },
                          "src": "3239:33:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3225:47:24",
=======
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3480:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25818,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3480:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3480:15:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25822,
                        "name": "feePot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25327,
                        "src": "3497:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25823,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25739,
                        "src": "3505:3:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "expression": {
                        "id": 24642,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3215:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24644,
=======
                      "id": 25817,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
<<<<<<< HEAD
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
                      "src": "3215:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
=======
                      "nodeType": "NewExpression",
                      "src": "3472:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint16_$returns$_t_contract$_OTC_$24570_$",
                        "typeString": "function (address,address,uint16) returns (contract OTC)"
                      },
                      "typeName": {
                        "id": 25816,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25815,
                          "name": "OTC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24570,
                          "src": "3476:3:30"
                        },
                        "referencedDeclaration": 24570,
                        "src": "3476:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
>>>>>>> optimisation
                      }
                    },
                    "id": 25824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3215:58:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24658,
                  "nodeType": "ExpressionStatement",
                  "src": "3215:58:24"
=======
                    "src": "3472:37:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OTC_$24570",
                      "typeString": "contract OTC"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3452:57:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24662,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24629,
                          "src": "3320:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 24663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3328:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "3320:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
=======
                        "id": 25829,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "3538:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
>>>>>>> optimisation
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24659,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3310:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24661,
=======
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      ],
                      "expression": {
                        "id": 25826,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25814,
                        "src": "3515:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 25828,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 4737,
                      "src": "3310:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 24665,
=======
                      "referencedDeclaration": 23858,
                      "src": "3515:22:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$22161_$returns$__$",
                        "typeString": "function (contract IERC20) external"
                      }
                    },
                    "id": 25830,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3310:23:24",
=======
                    "src": "3515:30:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24666,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:23:24"
=======
                  "id": 25831,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:30:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24670,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24629,
                          "src": "3349:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
=======
                        "arguments": [
                          {
                            "id": 25835,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "3580:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "expression": {
                            "id": 25833,
                            "name": "orderPlatform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25814,
                            "src": "3558:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
>>>>>>> optimisation
                          },
                          "id": 25834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "leftExpression": {
                            "id": 24671,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24199,
                            "src": "3357:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 24672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3363:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "3357:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3349:18:24",
=======
                          "memberName": "isToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23903,
                          "src": "3558:21:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$22161_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view external returns (bool)"
                          }
                        },
                        "id": 25836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3558:29:30",
                        "tryCall": false,
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "expression": {
                        "id": 24667,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3339:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4737,
                      "src": "3339:9:24",
=======
                      "id": 25832,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3551:6:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24675,
=======
                    "id": 25837,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3339:29:24",
=======
                    "src": "3551:37:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24676,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:29:24"
                },
                {
                  "assignments": [
                    24679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24679,
                      "mutability": "mutable",
                      "name": "orderPlatform",
                      "nameLocation": "3378:13:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24891,
                      "src": "3374:17:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OTC_$23788",
                        "typeString": "contract OTC"
                      },
                      "typeName": {
                        "id": 24678,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24677,
                          "name": "OTC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23788,
                          "src": "3374:3:24"
                        },
                        "referencedDeclaration": 23788,
                        "src": "3374:3:24",
=======
                  "id": 25838,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:37:30"
                },
                {
                  "documentation": "SELLLER",
                  "expression": {
                    "arguments": [
                      {
                        "id": 25842,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "3623:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25839,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3609:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
<<<<<<< HEAD
                      "visibility": "internal"
                    }
                  ],
                  "id": 24690,
                  "initialValue": {
=======
                      "id": 25841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4597,
                      "src": "3609:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25844,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:20:30"
                },
                {
                  "expression": {
>>>>>>> optimisation
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24685,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24245,
                            "src": "3410:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
=======
                            "id": 25850,
                            "name": "orderPlatform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25814,
                            "src": "3658:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
>>>>>>> optimisation
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
                            }
                          ],
                          "id": 24684,
=======
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 25849,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "3402:7:24",
=======
                          "src": "3650:7:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24683,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3402:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24686,
=======
                            "id": 25848,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3650:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25851,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3402:15:24",
=======
                        "src": "3650:22:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24687,
                        "name": "feePot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24232,
                        "src": "3419:6:24",
=======
                        "id": 25852,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25294,
                        "src": "3674:3:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24688,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24631,
                        "src": "3427:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
<<<<<<< HEAD
                      "id": 24682,
=======
                      "expression": {
                        "id": 25845,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "3635:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
                      "id": 25847,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
<<<<<<< HEAD
                      "nodeType": "NewExpression",
                      "src": "3394:7:24",
=======
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21664,
                      "src": "3635:14:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint16_$returns$_t_contract$_OTC_$23788_$",
                        "typeString": "function (address,address,uint16) returns (contract OTC)"
                      },
                      "typeName": {
                        "id": 24681,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24680,
                          "name": "OTC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23788,
                          "src": "3398:3:24"
                        },
                        "referencedDeclaration": 23788,
                        "src": "3398:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 24689,
=======
                    "id": 25853,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3394:37:24",
=======
                    "src": "3635:43:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OTC_$23788",
                      "typeString": "contract OTC"
                    }
                  },
<<<<<<< HEAD
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3374:57:24"
                },
                {
                  "assignments": [
                    24692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24692,
                      "mutability": "mutable",
                      "name": "rentAmount",
                      "nameLocation": "3445:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24891,
                      "src": "3437:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24691,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3437:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24696,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24693,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24627,
                      "src": "3458:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 24694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3467:2:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "3458:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3437:32:24"
=======
                  "id": 25854,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:43:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24700,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24257,
                        "src": "3498:6:24",
=======
                        "id": 25858,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "3696:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25859,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25737,
                        "src": "3703:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$23982",
                          "typeString": "contract PropertyToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_PropertyToken_$23982",
                          "typeString": "contract PropertyToken"
                        }
                      ],
                      "expression": {
                        "id": 24697,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24679,
                        "src": "3475:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 24699,
=======
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25855,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "3684:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
                      "id": 25857,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToken",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 23076,
                      "src": "3475:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$21707_$returns$__$",
                        "typeString": "function (contract IERC20) external"
                      }
                    },
                    "id": 24701,
=======
                      "referencedDeclaration": 21443,
                      "src": "3684:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25860,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3475:30:24",
=======
                    "src": "3684:25:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24702,
                  "nodeType": "ExpressionStatement",
                  "src": "3475:30:24"
=======
                  "id": 25861,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:25:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "id": 24706,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "3540:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "expression": {
                            "id": 24704,
                            "name": "orderPlatform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24679,
                            "src": "3518:13:24",
=======
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 25865,
                              "name": "addr1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25315,
                              "src": "3740:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25863,
                              "name": "dollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25349,
                              "src": "3723:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockToken_$25277",
                                "typeString": "contract MockToken"
                              }
                            },
                            "id": 25864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21596,
                            "src": "3723:16:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
                            }
                          },
<<<<<<< HEAD
                          "id": 24705,
=======
                          "id": 25866,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "memberName": "isToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23121,
                          "src": "3518:21:24",
=======
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3723:23:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 25867,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25737,
                          "src": "3750:5:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$21707_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view external returns (bool)"
                          }
                        },
<<<<<<< HEAD
                        "id": 24707,
=======
                        "src": "3723:32:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "427579206674206572726f72",
                        "id": 25869,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
<<<<<<< HEAD
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3518:29:24",
                        "tryCall": false,
=======
                        "nodeType": "Literal",
                        "src": "3757:14:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 24703,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "3511:6:24",
=======
                      "id": 25862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3715:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3511:37:24",
=======
                    "src": "3715:57:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25871,
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3511:37:24"
=======
                  "src": "3715:57:30"
                },
                {
                  "assignments": [
                    25873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25873,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "3786:11:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "3778:19:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25872,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3778:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25879,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25874,
                      "name": "firstPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25735,
                      "src": "3800:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 25875,
                          "name": "pToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25364,
                          "src": "3813:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PropertyToken_$25014",
                            "typeString": "contract PropertyToken"
                          }
                        },
                        "id": 25876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "TOKEN_PRICE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24598,
                        "src": "3813:18:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 25877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3813:20:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3800:33:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3778:55:30"
>>>>>>> optimisation
                },
                {
                  "documentation": "SELLLER",
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24713,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24220,
                        "src": "3583:5:24",
=======
                        "arguments": [
                          {
                            "id": 25885,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "3881:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 25884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3873:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25883,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3873:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3873:15:30",
                        "tryCall": false,
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24710,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "3569:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4597,
                      "src": "3569:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3569:20:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24715,
                  "nodeType": "ExpressionStatement",
                  "src": "3569:20:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24721,
                            "name": "orderPlatform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24679,
                            "src": "3618:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
=======
                            "id": 25889,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25349,
                            "src": "3904:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
>>>>>>> optimisation
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 24720,
=======
                              "typeIdentifier": "t_contract$_MockToken_$25277",
                              "typeString": "contract MockToken"
                            }
                          ],
                          "id": 25888,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "3610:7:24",
=======
                          "src": "3896:7:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24719,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3610:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24722,
=======
                            "id": 25887,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3896:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25890,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3610:22:24",
=======
                        "src": "3896:15:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24723,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "3634:3:24",
=======
                        "id": 25891,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25873,
                        "src": "3919:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25892,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25737,
                        "src": "3938:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24716,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "3595:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeDoll_$22862",
                          "typeString": "contract FakeDoll"
                        }
                      },
                      "id": 24718,
=======
                        "id": 25880,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25814,
                        "src": "3839:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 25882,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 21210,
                      "src": "3595:14:24",
=======
                      "referencedDeclaration": 24220,
                      "src": "3839:26:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24724,
=======
                    "id": 25893,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3595:43:24",
=======
                    "src": "3839:110:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 24725,
                  "nodeType": "ExpressionStatement",
                  "src": "3595:43:24"
=======
                  "id": 25894,
                  "nodeType": "ExpressionStatement",
                  "src": "3839:110:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24729,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24629,
                        "src": "3656:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
<<<<<<< HEAD
                        }
=======
                        },
                        "id": 25901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 25898,
                              "name": "addr1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25315,
                              "src": "3980:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25896,
                              "name": "dollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25349,
                              "src": "3963:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockToken_$25277",
                                "typeString": "contract MockToken"
                              }
                            },
                            "id": 25897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21596,
                            "src": "3963:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 25899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3963:23:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3990:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3963:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "427579204f72646572206674206572726f72",
                        "id": 25902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3993:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cf07d0555fed255cea74daa1e02b83a1b52728216f4a8e64ab783fd5926354c",
                          "typeString": "literal_string \"Buy Order ft error\""
                        },
                        "value": "Buy Order ft error"
>>>>>>> optimisation
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "expression": {
                        "id": 24726,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "3644:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeDoll_$22862",
                          "typeString": "contract FakeDoll"
                        }
                      },
                      "id": 24728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22861,
                      "src": "3644:11:24",
=======
                      "id": 25895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3955:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24730,
=======
                    "id": 25903,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3644:18:24",
=======
                    "src": "3955:59:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24731,
                  "nodeType": "ExpressionStatement",
                  "src": "3644:18:24"
=======
                  "id": 25904,
                  "nodeType": "ExpressionStatement",
                  "src": "3955:59:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24738,
=======
                        "id": 25914,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 24735,
                              "name": "addr1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24220,
                              "src": "3693:5:24",
=======
                              "arguments": [
                                {
                                  "id": 25910,
                                  "name": "orderPlatform",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25814,
                                  "src": "4060:13:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OTC_$24570",
                                    "typeString": "contract OTC"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OTC_$24570",
                                    "typeString": "contract OTC"
                                  }
                                ],
                                "id": 25909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4052:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25908,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4052:7:30",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4052:22:30",
                              "tryCall": false,
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
<<<<<<< HEAD
                              "id": 24733,
                              "name": "dollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24245,
                              "src": "3676:6:24",
=======
                              "id": 25906,
                              "name": "dollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25349,
                              "src": "4035:6:30",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockToken_$25277",
                                "typeString": "contract MockToken"
                              }
                            },
<<<<<<< HEAD
                            "id": 24734,
=======
                            "id": 25907,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 21142,
                            "src": "3676:16:24",
=======
                            "referencedDeclaration": 21596,
                            "src": "4035:16:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 24736,
=======
                          "id": 25912,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "3676:23:24",
=======
                          "src": "4035:40:30",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 24737,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24629,
                          "src": "3703:5:24",
=======
                          "id": 25913,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25737,
                          "src": "4079:5:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "3676:32:24",
=======
                        "src": "4035:49:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "427579206674206572726f72",
                        "id": 24739,
=======
                        "hexValue": "53656c6c204f72646572206674206572726f72",
                        "id": 25915,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3710:14:24",
=======
                        "src": "4092:21:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_581172d90d308e18a7d0cfe3c6853fee38b4ac6ad10ef059bb7edbff8d06a147",
                          "typeString": "literal_string \"Buy ft error\""
                        },
                        "value": "Buy ft error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_581172d90d308e18a7d0cfe3c6853fee38b4ac6ad10ef059bb7edbff8d06a147",
                          "typeString": "literal_string \"Buy ft error\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 24732,
=======
                      "id": 25905,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3668:7:24",
=======
                      "src": "4020:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24740,
=======
                    "id": 25916,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3668:57:24",
=======
                    "src": "4020:99:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24741,
                  "nodeType": "ExpressionStatement",
                  "src": "3668:57:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24747,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "3774:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 24746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3766:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3766:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3766:15:24",
                        "tryCall": false,
=======
                  "id": 25917,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:99:30"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25918,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "4125:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
<<<<<<< HEAD
                      {
                        "arguments": [
                          {
                            "id": 24751,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24245,
                            "src": "3797:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
=======
                      "id": 25920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4614,
                      "src": "4125:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4125:14:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25922,
                  "nodeType": "ExpressionStatement",
                  "src": "4125:14:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25926,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25321,
                        "src": "4171:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25923,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "4157:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4597,
                      "src": "4157:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4157:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25928,
                  "nodeType": "ExpressionStatement",
                  "src": "4157:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25932,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25321,
                        "src": "4195:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25933,
                        "name": "firstPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25735,
                        "src": "4202:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25929,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "4183:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
                      "id": 25931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21443,
                      "src": "4183:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4183:30:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25935,
                  "nodeType": "ExpressionStatement",
                  "src": "4183:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25941,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "4242:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
>>>>>>> optimisation
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
                            }
                          ],
                          "id": 24750,
=======
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 25940,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "3789:7:24",
=======
                          "src": "4234:7:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24749,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3789:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24752,
=======
                            "id": 25939,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4234:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25942,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "3789:15:24",
=======
                        "src": "4234:15:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24753,
                        "name": "rentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24692,
                        "src": "3812:10:24",
=======
                        "id": 25943,
                        "name": "firstPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25735,
                        "src": "4251:10:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
<<<<<<< HEAD
                      },
                      {
                        "id": 24754,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24629,
                        "src": "3830:5:24",
=======
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25936,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25349,
                        "src": "4219:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$25277",
                          "typeString": "contract MockToken"
                        }
                      },
                      "id": 25938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21664,
                      "src": "4219:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4219:43:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25945,
                  "nodeType": "ExpressionStatement",
                  "src": "4219:43:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25949,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25321,
                        "src": "4279:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25950,
                        "name": "firstPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25735,
                        "src": "4286:10:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24742,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24679,
                        "src": "3732:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 24744,
=======
                        "id": 25946,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25364,
                        "src": "4268:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$25014",
                          "typeString": "contract PropertyToken"
                        }
                      },
                      "id": 25948,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initBuyOrder",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 23438,
                      "src": "3732:26:24",
=======
                      "referencedDeclaration": 24948,
                      "src": "4268:10:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24755,
=======
                    "id": 25951,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3732:109:24",
=======
                    "src": "4268:29:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24756,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:109:24"
=======
                  "id": 25952,
                  "nodeType": "ExpressionStatement",
                  "src": "4268:29:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24763,
=======
                        "id": 25959,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 24760,
                              "name": "addr1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24220,
                              "src": "3872:5:24",
=======
                              "id": 25956,
                              "name": "addr2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25321,
                              "src": "4328:5:30",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
<<<<<<< HEAD
                              "id": 24758,
                              "name": "dollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24245,
                              "src": "3855:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FakeDoll_$22862",
                                "typeString": "contract FakeDoll"
                              }
                            },
                            "id": 24759,
=======
                              "id": 25954,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25364,
                              "src": "4311:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$25014",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 25955,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 21142,
                            "src": "3855:16:24",
=======
                            "referencedDeclaration": 21596,
                            "src": "4311:16:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
<<<<<<< HEAD
                          "id": 24761,
=======
                          "id": 25957,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "3855:23:24",
=======
                          "src": "4311:23:30",
>>>>>>> optimisation
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "hexValue": "30",
                          "id": 24762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3882:1:24",
=======
                          "id": 25958,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25873,
                          "src": "4338:11:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "3855:28:24",
=======
                        "src": "4311:38:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "427579204f72646572206674206572726f72",
                        "id": 24764,
=======
                        "hexValue": "427579206674206572726f72",
                        "id": 25960,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3885:20:24",
=======
                        "src": "4351:14:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cf07d0555fed255cea74daa1e02b83a1b52728216f4a8e64ab783fd5926354c",
                          "typeString": "literal_string \"Buy Order ft error\""
                        },
                        "value": "Buy Order ft error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cf07d0555fed255cea74daa1e02b83a1b52728216f4a8e64ab783fd5926354c",
                          "typeString": "literal_string \"Buy Order ft error\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 24757,
=======
                      "id": 25953,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "3847:7:24",
=======
                      "src": "4303:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24765,
=======
                    "id": 25961,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3847:59:24",
=======
                    "src": "4303:63:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24766,
                  "nodeType": "ExpressionStatement",
                  "src": "3847:59:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24776,
=======
                  "id": 25962,
                  "nodeType": "ExpressionStatement",
                  "src": "4303:63:30"
                },
                {
                  "assignments": [
                    25964,
                    25966,
                    25968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25964,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "4379:1:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "4373:7:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 25963,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4373:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25966,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4390:1:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "4382:9:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25965,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4382:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25968,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4401:1:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "4393:9:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25967,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4393:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25983,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25972,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "4428:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 25971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4420:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25970,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4420:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25973,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
<<<<<<< HEAD
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 24772,
                                  "name": "orderPlatform",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24679,
                                  "src": "3952:13:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OTC_$23788",
                                    "typeString": "contract OTC"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OTC_$23788",
                                    "typeString": "contract OTC"
                                  }
                                ],
                                "id": 24771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3944:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24770,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3944:7:24",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3944:22:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24768,
                              "name": "dollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24245,
                              "src": "3927:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FakeDoll_$22862",
                                "typeString": "contract FakeDoll"
                              }
                            },
                            "id": 24769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21142,
                            "src": "3927:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 24774,
=======
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4420:15:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25974,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25321,
                        "src": "4443:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 25977,
                            "name": "orderPlatform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25814,
                            "src": "4464:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OTC_$24570",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 25976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4456:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25975,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4456:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4456:22:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25979,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25873,
                        "src": "4486:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25980,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25294,
                        "src": "4505:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 25981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4516:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 25969,
                      "name": "getVRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26177,
                      "src": "4406:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256) returns (uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 25982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4406:117:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4372:151:30"
                },
                {
                  "assignments": [
                    null,
                    null,
                    25985,
                    null,
                    null,
                    25987,
                    25989,
                    25991,
                    25993,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 25985,
                      "mutability": "mutable",
                      "name": "indexr",
                      "nameLocation": "4619:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "4612:13:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 25984,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4612:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 25987,
                      "mutability": "mutable",
                      "name": "buyerr",
                      "nameLocation": "4657:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "4649:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25986,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4649:7:30",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25989,
                      "mutability": "mutable",
                      "name": "feer",
                      "nameLocation": "4679:4:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "4671:12:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25988,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4671:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25991,
                      "mutability": "mutable",
                      "name": "pricer",
                      "nameLocation": "4699:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "4691:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25990,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4691:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 25993,
                      "mutability": "mutable",
                      "name": "tokenAmountr",
                      "nameLocation": "4721:12:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26081,
                      "src": "4713:20:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25992,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4713:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 26002,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25998,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "4782:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 25997,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
<<<<<<< HEAD
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3927:40:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24775,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24629,
                          "src": "3971:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3927:49:24",
=======
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4774:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25996,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4774:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4774:15:30",
                        "tryCall": false,
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "53656c6c204f72646572206674206572726f72",
                        "id": 24777,
=======
                        "hexValue": "30",
                        "id": 26000,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3984:21:24",
=======
                        "src": "4791:1:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d44c4486d8695fbc0fede1a45b8dc16d7b1b98b08db4acd9daf7ce2e74c7cac",
                          "typeString": "literal_string \"Sell Order ft error\""
                        },
                        "value": "Sell Order ft error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d44c4486d8695fbc0fede1a45b8dc16d7b1b98b08db4acd9daf7ce2e74c7cac",
                          "typeString": "literal_string \"Sell Order ft error\""
                        }
                      ],
                      "id": 24767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3912:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:99:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24779,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:99:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
<<<<<<< HEAD
                        "id": 24780,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "4017:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24782,
=======
                        "id": 25994,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25814,
                        "src": "4744:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 25995,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 4614,
                      "src": "4017:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 24783,
=======
                      "referencedDeclaration": 23697,
                      "src": "4744:29:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$_t_bool_$_t_uint64_$_t_uint64_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_contract$_IERC20_$22161_$",
                        "typeString": "function (address,uint256) view external returns (bool,bool,uint64,uint64,address,address,uint256,uint256,uint256,contract IERC20)"
                      }
                    },
                    "id": 26001,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4017:14:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24784,
                  "nodeType": "ExpressionStatement",
                  "src": "4017:14:24"
=======
                    "src": "4744:49:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_uint64_$_t_uint64_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_contract$_IERC20_$22161_$",
                      "typeString": "tuple(bool,bool,uint64,uint64,address,address,uint256,uint256,uint256,contract IERC20)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4588:205:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24788,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24226,
                        "src": "4063:5:24",
=======
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26004,
                          "name": "tokenAmountr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25993,
                          "src": "4807:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 26005,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25873,
                          "src": "4823:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4807:27:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
<<<<<<< HEAD
=======
                      },
                      {
                        "hexValue": "416d6f756e7420657272",
                        "id": 26007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4836:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_486ea920712be1684ca953a6731c1060bf578b7d61f6d7cb8ad7ed9fb7206116",
                          "typeString": "literal_string \"Amount err\""
                        },
                        "value": "Amount err"
>>>>>>> optimisation
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "expression": {
                        "id": 24785,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "4049:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4597,
                      "src": "4049:13:24",
=======
                      "id": 26003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4799:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24789,
=======
                    "id": 26008,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4049:20:24",
=======
                    "src": "4799:50:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24790,
                  "nodeType": "ExpressionStatement",
                  "src": "4049:20:24"
=======
                  "id": 26009,
                  "nodeType": "ExpressionStatement",
                  "src": "4799:50:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24794,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24627,
                        "src": "4087:6:24",
=======
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 26013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26011,
                          "name": "indexr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25985,
                          "src": "4863:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 26012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4873:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4863:11:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
<<<<<<< HEAD
=======
                      },
                      {
                        "hexValue": "496e64657820657272",
                        "id": 26014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4876:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88a315125c9ef6d0e547f6cec35e12334a4c208962f61baca699342298988c4c",
                          "typeString": "literal_string \"Index err\""
                        },
                        "value": "Index err"
>>>>>>> optimisation
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "expression": {
                        "id": 24791,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "4075:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeDoll_$22862",
                          "typeString": "contract FakeDoll"
                        }
                      },
                      "id": 24793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22861,
                      "src": "4075:11:24",
=======
                      "id": 26010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4855:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24795,
=======
                    "id": 26015,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4075:19:24",
=======
                    "src": "4855:33:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24796,
                  "nodeType": "ExpressionStatement",
                  "src": "4075:19:24"
=======
                  "id": 26016,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:33:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "id": 24802,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "4123:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 24801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4115:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24800,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4115:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4115:15:24",
                        "tryCall": false,
=======
                        "id": 26020,
                        "name": "addr1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25315,
                        "src": "4906:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24804,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24627,
                        "src": "4132:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24797,
                        "name": "dollar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24245,
                        "src": "4100:6:24",
=======
                        "id": 26017,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12826,
                        "src": "4894:7:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeDoll_$22862",
                          "typeString": "contract FakeDoll"
                        }
                      },
<<<<<<< HEAD
                      "id": 24799,
=======
                      "id": 26019,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 21210,
                      "src": "4100:14:24",
=======
                      "referencedDeclaration": 5385,
                      "src": "4894:11:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24805,
=======
                    "id": 26021,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4100:39:24",
=======
                    "src": "4894:18:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 24806,
                  "nodeType": "ExpressionStatement",
                  "src": "4100:39:24"
=======
                  "id": 26022,
                  "nodeType": "ExpressionStatement",
                  "src": "4894:18:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 24810,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24226,
                        "src": "4156:5:24",
=======
                        "id": 26026,
                        "name": "buyerr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25987,
                        "src": "4930:6:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24811,
                        "name": "rentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24692,
                        "src": "4163:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24807,
                        "name": "pToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24257,
                        "src": "4145:6:24",
=======
                        "id": 26023,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12826,
                        "src": "4918:7:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PropertyToken_$23982",
                          "typeString": "contract PropertyToken"
                        }
                      },
<<<<<<< HEAD
                      "id": 24809,
=======
                      "id": 26025,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "buy",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 23958,
                      "src": "4145:10:24",
=======
                      "referencedDeclaration": 5385,
                      "src": "4918:11:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24812,
=======
                    "id": 26027,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4145:29:24",
=======
                    "src": "4918:19:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24813,
                  "nodeType": "ExpressionStatement",
                  "src": "4145:29:24"
=======
                  "id": 26028,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:19:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 24820,
=======
                        "id": 26032,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "arguments": [
                            {
                              "id": 24817,
                              "name": "addr2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24226,
                              "src": "4205:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24815,
                              "name": "pToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24257,
                              "src": "4188:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PropertyToken_$23982",
                                "typeString": "contract PropertyToken"
                              }
                            },
                            "id": 24816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21142,
                            "src": "4188:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 24818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4188:23:24",
                          "tryCall": false,
=======
                          "id": 26030,
                          "name": "buyerr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25987,
                          "src": "4951:6:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 24819,
                          "name": "rentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24692,
                          "src": "4215:10:24",
=======
                          "id": 26031,
                          "name": "addr1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25315,
                          "src": "4961:5:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "4188:37:24",
=======
                        "src": "4951:15:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "427579206674206572726f72",
                        "id": 24821,
=======
                        "hexValue": "42757965722070726f626c656d",
                        "id": 26033,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "4227:14:24",
=======
                        "src": "4968:15:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_581172d90d308e18a7d0cfe3c6853fee38b4ac6ad10ef059bb7edbff8d06a147",
                          "typeString": "literal_string \"Buy ft error\""
                        },
                        "value": "Buy ft error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_581172d90d308e18a7d0cfe3c6853fee38b4ac6ad10ef059bb7edbff8d06a147",
                          "typeString": "literal_string \"Buy ft error\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 24814,
=======
                      "id": 26029,
>>>>>>> optimisation
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
                      "src": "4180:7:24",
=======
                      "src": "4943:7:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24822,
=======
                    "id": 26034,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4180:62:24",
=======
                    "src": "4943:41:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24823,
                  "nodeType": "ExpressionStatement",
                  "src": "4180:62:24"
=======
                  "id": 26035,
                  "nodeType": "ExpressionStatement",
                  "src": "4943:41:30"
>>>>>>> optimisation
                },
                {
                  "assignments": [
                    24825,
                    24827,
                    24829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24825,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "4255:1:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24891,
                      "src": "4249:7:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 24824,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4249:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24827,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4266:1:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24891,
                      "src": "4258:9:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24826,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4258:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24829,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4277:1:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24891,
                      "src": "4269:9:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24828,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4269:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24844,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24833,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "4304:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 24832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4296:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4296:7:24",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 24834,
=======
                        "id": 26039,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
<<<<<<< HEAD
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4296:15:24",
                        "tryCall": false,
=======
                        "leftExpression": {
                          "id": 26037,
                          "name": "pricer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25991,
                          "src": "4998:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 26038,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25737,
                          "src": "5008:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4998:15:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24835,
                        "name": "addr2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24226,
                        "src": "4319:5:24",
=======
                        "hexValue": "42757965722070726f626c656d",
                        "id": 26040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5015:15:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
<<<<<<< HEAD
                      },
                      {
                        "arguments": [
                          {
                            "id": 24838,
                            "name": "orderPlatform",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24679,
                            "src": "4340:13:24",
=======
                      ],
                      "id": 26036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4990:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4990:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26042,
                  "nodeType": "ExpressionStatement",
                  "src": "4990:41:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 26045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26043,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25739,
                      "src": "5041:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 26044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5047:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5041:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26058,
                  "nodeType": "IfStatement",
                  "src": "5037:66:30",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 26054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 26047,
                            "name": "feer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25989,
                            "src": "5058:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 26053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 26050,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 26048,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25737,
                                    "src": "5067:5:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 26049,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25739,
                                    "src": "5075:3:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "src": "5067:11:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 26051,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5066:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "31303030",
                              "id": 26052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5082:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "src": "5066:20:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
                            }
<<<<<<< HEAD
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OTC_$23788",
                              "typeString": "contract OTC"
                            }
                          ],
                          "id": 24837,
=======
                          },
                          "src": "5058:28:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "6665652070726f626c656d73",
                          "id": 26055,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4332:7:24",
=======
                          "nodeType": "Literal",
                          "src": "5088:14:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24836,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4332:7:24",
                            "typeDescriptions": {}
                          }
<<<<<<< HEAD
                        },
                        "id": 24839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4332:22:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24840,
                        "name": "rentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24692,
                        "src": "4362:10:24",
=======
                        ],
                        "id": 26046,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "5050:7:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
<<<<<<< HEAD
                      {
                        "id": 24841,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "4380:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 24842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4391:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 24830,
                      "name": "getVRS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24987,
                      "src": "4282:6:24",
=======
                      "id": 26056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5050:53:30",
                      "tryCall": false,
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256) returns (uint8,bytes32,bytes32)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4282:116:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4248:150:24"
=======
                    "id": 26057,
                    "nodeType": "ExpressionStatement",
                    "src": "5050:53:30"
                  }
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24850,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24257,
                            "src": "4431:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
=======
                            "id": 26064,
                            "name": "pToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "5136:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
>>>>>>> optimisation
                              "typeString": "contract PropertyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_PropertyToken_$23982",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 24849,
=======
                              "typeIdentifier": "t_contract$_PropertyToken_$25014",
                              "typeString": "contract PropertyToken"
                            }
                          ],
                          "id": 26063,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "4423:7:24",
=======
                          "src": "5128:7:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24848,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4423:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24851,
=======
                            "id": 26062,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5128:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26065,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4423:15:24",
=======
                        "src": "5128:15:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
<<<<<<< HEAD
                            "id": 24854,
=======
                            "id": 26068,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "4447:1:24",
=======
                            "src": "5152:1:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
<<<<<<< HEAD
                          "id": 24853,
=======
                          "id": 26067,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "4440:6:24",
=======
                          "src": "5145:6:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 24852,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "4440:6:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24855,
=======
                            "id": 26066,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "5145:6:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26069,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4440:9:24",
=======
                        "src": "5145:9:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24856,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "4451:3:24",
=======
                        "id": 26070,
                        "name": "max",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25294,
                        "src": "5156:3:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24857,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24825,
                        "src": "4456:1:24",
=======
                        "id": 26071,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25964,
                        "src": "5161:1:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24858,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24827,
                        "src": "4459:1:24",
=======
                        "id": 26072,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25966,
                        "src": "5164:1:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24859,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24829,
                        "src": "4462:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 24845,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24679,
                        "src": "4404:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 24847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23787,
                      "src": "4404:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint64_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint64,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 24860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4404:60:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24861,
                  "nodeType": "ExpressionStatement",
                  "src": "4404:60:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 24862,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "4471:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4762",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4614,
                      "src": "4471:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 24865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:14:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24866,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:14:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24872,
                            "name": "dollar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24245,
                            "src": "4526:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FakeDoll_$22862",
                              "typeString": "contract FakeDoll"
                            }
                          ],
                          "id": 24871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4518:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24870,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4518:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4518:15:24",
                        "tryCall": false,
=======
                        "id": 26073,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25968,
                        "src": "5167:1:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24867,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24679,
                        "src": "4492:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$23788",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 24869,
=======
                        "id": 26059,
                        "name": "orderPlatform",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25814,
                        "src": "5109:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OTC_$24570",
                          "typeString": "contract OTC"
                        }
                      },
                      "id": 26061,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawFee",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 23053,
                      "src": "4492:25:24",
=======
                      "referencedDeclaration": 24569,
                      "src": "5109:18:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 24874,
=======
                    "id": 26074,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4492:42:24",
=======
                    "src": "5109:60:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24875,
                  "nodeType": "ExpressionStatement",
                  "src": "4492:42:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 24882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 24879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 24877,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24629,
                                  "src": "4550:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 24878,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24631,
                                  "src": "4558:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "4550:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 24880,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4549:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 24881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4565:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "4549:20:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 24885,
                              "name": "feePot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24232,
                              "src": "4590:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 24883,
                              "name": "dollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24245,
                              "src": "4573:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FakeDoll_$22862",
                                "typeString": "contract FakeDoll"
                              }
                            },
                            "id": 24884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21142,
                            "src": "4573:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 24886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4573:24:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4549:48:24",
=======
                  "id": 26075,
                  "nodeType": "ExpressionStatement",
                  "src": "5109:60:30"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26076,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "5175:2:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
<<<<<<< HEAD
                      {
                        "hexValue": "46656550726f626c656d",
                        "id": 24888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4599:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_155c1e3d094150eaaeffe4aa5f5db51005a022376881188e5559696129495e0a",
                          "typeString": "literal_string \"FeeProblem\""
                        },
                        "value": "FeeProblem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_155c1e3d094150eaaeffe4aa5f5db51005a022376881188e5559696129495e0a",
                          "typeString": "literal_string \"FeeProblem\""
                        }
                      ],
                      "id": 24876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4541:7:24",
=======
                      "id": 26078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4614,
                      "src": "5175:12:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 24889,
=======
                    "id": 26079,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4541:71:24",
=======
                    "src": "5175:14:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 24890,
                  "nodeType": "ExpressionStatement",
                  "src": "4541:71:24"
=======
                  "id": 26080,
                  "nodeType": "ExpressionStatement",
                  "src": "5175:14:30"
>>>>>>> optimisation
                }
              ]
            },
            "functionSelector": "e77b6747",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOTCbuyOrder",
<<<<<<< HEAD
            "nameLocation": "3101:15:24",
            "parameters": {
              "id": 24632,
=======
            "nameLocation": "3081:15:30",
            "parameters": {
              "id": 25740,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24627,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3130:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24892,
                  "src": "3122:14:24",
=======
                  "id": 25735,
                  "mutability": "mutable",
                  "name": "firstPrice",
                  "nameLocation": "3110:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 26082,
                  "src": "3102:18:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3122:7:24",
=======
                    "id": 25734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:7:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24629,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "3150:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24892,
                  "src": "3142:13:24",
=======
                  "id": 25737,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "3134:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 26082,
                  "src": "3126:13:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:24",
=======
                    "id": 25736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3126:7:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24631,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "3168:3:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24892,
                  "src": "3161:10:24",
=======
                  "id": 25739,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "3152:3:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 26082,
                  "src": "3145:10:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24630,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3161:6:24",
=======
                    "id": 25738,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3145:6:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3116:59:24"
            },
            "returnParameters": {
              "id": 24633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3183:0:24"
            },
            "scope": 24988,
=======
              "src": "3096:63:30"
            },
            "returnParameters": {
              "id": 25741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3167:0:30"
            },
            "scope": 26178,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 24896,
            "nodeType": "FunctionDefinition",
            "src": "4621:34:24",
            "body": {
              "id": 24895,
              "nodeType": "Block",
              "src": "4653:2:24",
=======
            "id": 26086,
            "nodeType": "FunctionDefinition",
            "src": "5348:34:30",
            "body": {
              "id": 26085,
              "nodeType": "Block",
              "src": "5380:2:30",
>>>>>>> optimisation
              "statements": []
            },
            "functionSelector": "55dda6bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRentHouse",
<<<<<<< HEAD
            "nameLocation": "4630:13:24",
            "parameters": {
              "id": 24893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4643:2:24"
            },
            "returnParameters": {
              "id": 24894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4653:0:24"
            },
            "scope": 24988,
=======
            "nameLocation": "5357:13:30",
            "parameters": {
              "id": 26083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5370:2:30"
            },
            "returnParameters": {
              "id": 26084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5380:0:30"
            },
            "scope": 26178,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 24987,
            "nodeType": "FunctionDefinition",
            "src": "4659:894:24",
            "body": {
              "id": 24986,
              "nodeType": "Block",
              "src": "4873:680:24",
              "statements": [
                {
                  "assignments": [
                    24918
=======
            "id": 26177,
            "nodeType": "FunctionDefinition",
            "src": "5386:900:30",
            "body": {
              "id": 26176,
              "nodeType": "Block",
              "src": "5604:682:30",
              "statements": [
                {
                  "assignments": [
                    26108
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 24918,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "4887:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24986,
                      "src": "4879:18:24",
=======
                      "id": 26108,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "5618:10:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26176,
                      "src": "5610:18:30",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 24917,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4879:7:24",
=======
                        "id": 26107,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5610:7:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 24935,
=======
                  "id": 26125,
>>>>>>> optimisation
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24922,
                            "name": "_PERMIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24204,
                            "src": "4937:16:24",
=======
                            "id": 26112,
                            "name": "_PERMIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25299,
                            "src": "5668:16:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 24923,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24900,
                            "src": "4963:5:24",
=======
                            "id": 26113,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26090,
                            "src": "5694:5:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 24924,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24902,
                            "src": "4978:7:24",
=======
                            "id": 26114,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26092,
                            "src": "5709:7:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 24925,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24904,
                            "src": "4995:6:24",
=======
                            "id": 26115,
                            "name": "firstPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26094,
                            "src": "5726:10:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
<<<<<<< HEAD
                                "id": 24930,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24900,
                                "src": "5038:5:24",
=======
                                "id": 26120,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26090,
                                "src": "5773:5:30",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
<<<<<<< HEAD
                                    "id": 24927,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24898,
                                    "src": "5024:5:24",
=======
                                    "id": 26117,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 26088,
                                    "src": "5759:5:30",
>>>>>>> optimisation
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 24926,
                                  "name": "IERC20Permit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21940,
                                  "src": "5011:12:24",
=======
                                  "id": 26116,
                                  "name": "IERC20Permit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22394,
                                  "src": "5746:12:30",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$22394_$",
                                    "typeString": "type(contract IERC20Permit)"
                                  }
                                },
<<<<<<< HEAD
                                "id": 24928,
=======
                                "id": 26118,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "5011:19:24",
=======
                                "src": "5746:19:30",
>>>>>>> optimisation
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Permit_$22394",
                                  "typeString": "contract IERC20Permit"
                                }
                              },
<<<<<<< HEAD
                              "id": 24929,
=======
                              "id": 26119,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nonces",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 21933,
                              "src": "5011:26:24",
=======
                              "referencedDeclaration": 22387,
                              "src": "5746:26:30",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
<<<<<<< HEAD
                            "id": 24931,
=======
                            "id": 26121,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "5011:33:24",
=======
                            "src": "5746:33:30",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 24932,
                            "name": "dl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24906,
                            "src": "5054:2:24",
=======
                            "id": 26122,
                            "name": "dl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26096,
                            "src": "5789:2:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
<<<<<<< HEAD
                            "id": 24920,
=======
                            "id": 26110,
>>>>>>> optimisation
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
<<<<<<< HEAD
                            "src": "4917:3:24",
=======
                            "src": "5648:3:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
<<<<<<< HEAD
                          "id": 24921,
=======
                          "id": 26111,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "4917:10:24",
=======
                          "src": "5648:10:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
<<<<<<< HEAD
                        "id": 24933,
=======
                        "id": 26123,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "4917:147:24",
=======
                        "src": "5648:151:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
<<<<<<< HEAD
                      "id": 24919,
=======
                      "id": 26109,
>>>>>>> optimisation
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
<<<<<<< HEAD
                      "src": "4900:9:24",
=======
                      "src": "5631:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24934,
=======
                    "id": 26124,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4900:170:24",
=======
                    "src": "5631:174:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "4879:191:24"
                },
                {
                  "assignments": [
                    24937
=======
                  "src": "5610:195:30"
                },
                {
                  "assignments": [
                    26127
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 24937,
                      "mutability": "mutable",
                      "name": "newDomainSeparator",
                      "nameLocation": "5084:18:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24986,
                      "src": "5076:26:24",
=======
                      "id": 26127,
                      "mutability": "mutable",
                      "name": "newDomainSeparator",
                      "nameLocation": "5819:18:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26176,
                      "src": "5811:26:30",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 24936,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5076:7:24",
=======
                        "id": 26126,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5811:7:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 24970,
=======
                  "id": 26160,
>>>>>>> optimisation
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
<<<<<<< HEAD
                                "id": 24942,
=======
                                "id": 26132,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
                                "src": "5163:84:24",
=======
                                "src": "5898:84:30",
>>>>>>> optimisation
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                  "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                },
                                "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                  "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                }
                              ],
<<<<<<< HEAD
                              "id": 24941,
=======
                              "id": 26131,
>>>>>>> optimisation
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
<<<<<<< HEAD
                              "src": "5142:9:24",
=======
                              "src": "5877:9:30",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
<<<<<<< HEAD
                            "id": 24943,
=======
                            "id": 26133,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "5142:115:24",
=======
                            "src": "5877:115:30",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
<<<<<<< HEAD
                                            "id": 24948,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24898,
                                            "src": "5289:5:24",
=======
                                            "id": 26138,
                                            "name": "token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 26088,
                                            "src": "6024:5:30",
>>>>>>> optimisation
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
<<<<<<< HEAD
                                          "id": 24947,
                                          "name": "ERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 21629,
                                          "src": "5283:5:24",
=======
                                          "id": 26137,
                                          "name": "ERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 22083,
                                          "src": "6018:5:30",
>>>>>>> optimisation
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ERC20_$22083_$",
                                            "typeString": "type(contract ERC20)"
                                          }
                                        },
<<<<<<< HEAD
                                        "id": 24949,
=======
                                        "id": 26139,
>>>>>>> optimisation
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                                        "src": "5283:12:24",
=======
                                        "src": "6018:12:30",
>>>>>>> optimisation
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20_$22083",
                                          "typeString": "contract ERC20"
                                        }
                                      },
<<<<<<< HEAD
                                      "id": 24950,
=======
                                      "id": 26140,
>>>>>>> optimisation
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "name",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 21098,
                                      "src": "5283:17:24",
=======
                                      "referencedDeclaration": 21552,
                                      "src": "6018:17:30",
>>>>>>> optimisation
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view external returns (string memory)"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 24951,
=======
                                    "id": 26141,
>>>>>>> optimisation
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                                    "src": "5283:19:24",
=======
                                    "src": "6018:19:30",
>>>>>>> optimisation
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 24946,
=======
                                  "id": 26136,
>>>>>>> optimisation
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "5277:5:24",
=======
                                  "src": "6012:5:30",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 24945,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5277:5:24",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 24952,
=======
                                    "id": 26135,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6012:5:30",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 26142,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "5277:26:24",
=======
                                "src": "6012:26:30",
>>>>>>> optimisation
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
<<<<<<< HEAD
                              "id": 24944,
=======
                              "id": 26134,
>>>>>>> optimisation
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
<<<<<<< HEAD
                              "src": "5267:9:24",
=======
                              "src": "6002:9:30",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
<<<<<<< HEAD
                            "id": 24953,
=======
                            "id": 26143,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "5267:37:24",
=======
                            "src": "6002:37:30",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "31",
<<<<<<< HEAD
                                    "id": 24957,
=======
                                    "id": 26147,
>>>>>>> optimisation
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
<<<<<<< HEAD
                                    "src": "5345:3:24",
=======
                                    "src": "6080:3:30",
>>>>>>> optimisation
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                      "typeString": "literal_string \"1\""
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                      "typeString": "literal_string \"1\""
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 24956,
=======
                                  "id": 26146,
>>>>>>> optimisation
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                  "src": "5339:5:24",
=======
                                  "src": "6074:5:30",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
<<<<<<< HEAD
                                    "id": 24955,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5339:5:24",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 24958,
=======
                                    "id": 26145,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6074:5:30",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 26148,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "5339:10:24",
=======
                                "src": "6074:10:30",
>>>>>>> optimisation
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
<<<<<<< HEAD
                              "id": 24954,
=======
                              "id": 26144,
>>>>>>> optimisation
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
<<<<<<< HEAD
                              "src": "5329:9:24",
=======
                              "src": "6064:9:30",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
<<<<<<< HEAD
                            "id": 24959,
=======
                            "id": 26149,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "5329:21:24",
=======
                            "src": "6064:21:30",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
<<<<<<< HEAD
                              "id": 24960,
=======
                              "id": 26150,
>>>>>>> optimisation
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
<<<<<<< HEAD
                              "src": "5371:5:24",
=======
                              "src": "6106:5:30",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
<<<<<<< HEAD
                            "id": 24961,
=======
                            "id": 26151,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "5371:13:24",
=======
                            "src": "6106:13:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
<<<<<<< HEAD
                                    "id": 24965,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24898,
                                    "src": "5409:5:24",
=======
                                    "id": 26155,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 26088,
                                    "src": "6144:5:30",
>>>>>>> optimisation
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 24964,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21707,
                                  "src": "5402:6:24",
=======
                                  "id": 26154,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22161,
                                  "src": "6137:6:30",
>>>>>>> optimisation
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$22161_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
<<<<<<< HEAD
                                "id": 24966,
=======
                                "id": 26156,
>>>>>>> optimisation
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
<<<<<<< HEAD
                                "src": "5402:13:24",
=======
                                "src": "6137:13:30",
>>>>>>> optimisation
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$22161",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$22161",
                                  "typeString": "contract IERC20"
                                }
                              ],
<<<<<<< HEAD
                              "id": 24963,
=======
                              "id": 26153,
>>>>>>> optimisation
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "5394:7:24",
=======
                              "src": "6129:7:30",
>>>>>>> optimisation
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
<<<<<<< HEAD
                                "id": 24962,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5394:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24967,
=======
                                "id": 26152,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6129:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26157,
>>>>>>> optimisation
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "5394:22:24",
=======
                            "src": "6129:22:30",
>>>>>>> optimisation
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
<<<<<<< HEAD
                            "id": 24939,
=======
                            "id": 26129,
>>>>>>> optimisation
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
<<<<<<< HEAD
                            "src": "5122:3:24",
=======
                            "src": "5857:3:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
<<<<<<< HEAD
                          "id": 24940,
=======
                          "id": 26130,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "5122:10:24",
=======
                          "src": "5857:10:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
<<<<<<< HEAD
                        "id": 24968,
=======
                        "id": 26158,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "5122:302:24",
=======
                        "src": "5857:302:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
<<<<<<< HEAD
                      "id": 24938,
=======
                      "id": 26128,
>>>>>>> optimisation
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
<<<<<<< HEAD
                      "src": "5105:9:24",
=======
                      "src": "5840:9:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24969,
=======
                    "id": 26159,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5105:325:24",
=======
                    "src": "5840:325:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5076:354:24"
                },
                {
                  "assignments": [
                    24972
=======
                  "src": "5811:354:30"
                },
                {
                  "assignments": [
                    26162
>>>>>>> optimisation
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 24972,
                      "mutability": "mutable",
                      "name": "hashed",
                      "nameLocation": "5445:6:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 24986,
                      "src": "5437:14:24",
=======
                      "id": 26162,
                      "mutability": "mutable",
                      "name": "hashed",
                      "nameLocation": "6179:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 26176,
                      "src": "6171:14:30",
>>>>>>> optimisation
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 24971,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5437:7:24",
=======
                        "id": 26161,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6171:7:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 24978,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24975,
                        "name": "newDomainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24937,
                        "src": "5476:18:24",
=======
                  "id": 26168,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26165,
                        "name": "newDomainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26127,
                        "src": "6210:18:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 24976,
                        "name": "structHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24918,
                        "src": "5496:10:24",
=======
                        "id": 26166,
                        "name": "structHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26108,
                        "src": "6230:10:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 24973,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22669,
                        "src": "5454:5:24",
=======
                        "id": 26163,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23123,
                        "src": "6188:5:30",
>>>>>>> optimisation
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$23123_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
<<<<<<< HEAD
                      "id": 24974,
=======
                      "id": 26164,
>>>>>>> optimisation
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toTypedDataHash",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 22668,
                      "src": "5454:21:24",
=======
                      "referencedDeclaration": 23122,
                      "src": "6188:21:30",
>>>>>>> optimisation
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
<<<<<<< HEAD
                    "id": 24977,
=======
                    "id": 26167,
>>>>>>> optimisation
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5454:53:24",
=======
                    "src": "6188:53:30",
>>>>>>> optimisation
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5437:70:24"
=======
                  "src": "6171:70:30"
>>>>>>> optimisation
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 24981,
                            "name": "priv_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24908,
                            "src": "5530:8:24",
=======
                            "id": 26171,
                            "name": "priv_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26098,
                            "src": "6263:8:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
<<<<<<< HEAD
                            "id": 24982,
                            "name": "hashed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24972,
                            "src": "5540:6:24",
=======
                            "id": 26172,
                            "name": "hashed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26162,
                            "src": "6273:6:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
<<<<<<< HEAD
                            "id": 24979,
=======
                            "id": 26169,
>>>>>>> optimisation
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1814,
<<<<<<< HEAD
                            "src": "5522:2:24",
=======
                            "src": "6255:2:30",
>>>>>>> optimisation
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$4762",
                              "typeString": "contract Vm"
                            }
                          },
<<<<<<< HEAD
                          "id": 24980,
=======
                          "id": 26170,
>>>>>>> optimisation
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sign",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4432,
<<<<<<< HEAD
                          "src": "5522:7:24",
=======
                          "src": "6255:7:30",
>>>>>>> optimisation
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes32_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                            "typeString": "function (uint256,bytes32) external returns (uint8,bytes32,bytes32)"
                          }
                        },
<<<<<<< HEAD
                        "id": 24983,
=======
                        "id": 26173,
>>>>>>> optimisation
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "5522:25:24",
=======
                        "src": "6255:25:30",
>>>>>>> optimisation
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                          "typeString": "tuple(uint8,bytes32,bytes32)"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 24984,
=======
                    "id": 26174,
>>>>>>> optimisation
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "5521:27:24",
=======
                    "src": "6254:27:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 24916,
                  "id": 24985,
                  "nodeType": "Return",
                  "src": "5514:34:24"
=======
                  "functionReturnParameters": 26106,
                  "id": 26175,
                  "nodeType": "Return",
                  "src": "6247:34:30"
>>>>>>> optimisation
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVRS",
<<<<<<< HEAD
            "nameLocation": "4668:6:24",
            "parameters": {
              "id": 24909,
=======
            "nameLocation": "5395:6:30",
            "parameters": {
              "id": 26099,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24898,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4688:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24987,
                  "src": "4680:13:24",
=======
                  "id": 26088,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5415:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 26177,
                  "src": "5407:13:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4680:7:24",
=======
                    "id": 26087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5407:7:30",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24900,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4707:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24987,
                  "src": "4699:13:24",
=======
                  "id": 26090,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5434:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 26177,
                  "src": "5426:13:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4699:7:24",
=======
                    "id": 26089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5426:7:30",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24902,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4726:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24987,
                  "src": "4718:15:24",
=======
                  "id": 26092,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5453:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 26177,
                  "src": "5445:15:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4718:7:24",
=======
                    "id": 26091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5445:7:30",
>>>>>>> optimisation
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24904,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4747:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24987,
                  "src": "4739:14:24",
=======
                  "id": 26094,
                  "mutability": "mutable",
                  "name": "firstPrice",
                  "nameLocation": "5474:10:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 26177,
                  "src": "5466:18:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4739:7:24",
=======
                    "id": 26093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5466:7:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24906,
                  "mutability": "mutable",
                  "name": "dl",
                  "nameLocation": "4767:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24987,
                  "src": "4759:10:24",
=======
                  "id": 26096,
                  "mutability": "mutable",
                  "name": "dl",
                  "nameLocation": "5498:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 26177,
                  "src": "5490:10:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4759:7:24",
=======
                    "id": 26095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5490:7:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24908,
                  "mutability": "mutable",
                  "name": "priv_key",
                  "nameLocation": "4783:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 24987,
                  "src": "4775:16:24",
=======
                  "id": 26098,
                  "mutability": "mutable",
                  "name": "priv_key",
                  "nameLocation": "5514:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 26177,
                  "src": "5506:16:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4775:7:24",
=======
                    "id": 26097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5506:7:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4674:121:24"
            },
            "returnParameters": {
              "id": 24916,
=======
              "src": "5401:125:30"
            },
            "returnParameters": {
              "id": 26106,
>>>>>>> optimisation
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24911,
=======
                  "id": 26101,
>>>>>>> optimisation
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 24987,
                  "src": "4829:5:24",
=======
                  "scope": 26177,
                  "src": "5560:5:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24910,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4829:5:24",
=======
                    "id": 26100,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:5:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24913,
=======
                  "id": 26103,
>>>>>>> optimisation
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 24987,
                  "src": "4842:7:24",
=======
                  "scope": 26177,
                  "src": "5573:7:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24912,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4842:7:24",
=======
                    "id": 26102,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5573:7:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 24915,
=======
                  "id": 26105,
>>>>>>> optimisation
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 24987,
                  "src": "4857:7:24",
=======
                  "scope": 26177,
                  "src": "5588:7:30",
>>>>>>> optimisation
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 24914,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4857:7:24",
=======
                    "id": 26104,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5588:7:30",
>>>>>>> optimisation
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4821:49:24"
            },
            "scope": 24988,
=======
              "src": "5552:49:30"
            },
            "scope": 26178,
>>>>>>> optimisation
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< HEAD
              "id": 24190,
=======
              "id": 25285,
>>>>>>> optimisation
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3043,
              "src": "248:4:30"
            },
<<<<<<< HEAD
            "id": 24191,
=======
            "id": 25286,
>>>>>>> optimisation
            "nodeType": "InheritanceSpecifier",
            "src": "248:4:30"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [
<<<<<<< HEAD
          22862,
          23788,
          23982
=======
          24570,
          25014,
          25277
>>>>>>> optimisation
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
<<<<<<< HEAD
          24988,
=======
          26178,
>>>>>>> optimisation
          3043,
          1815,
          1786
        ],
        "name": "ContractTest",
<<<<<<< HEAD
        "nameLocation": "232:12:24",
        "scope": 24989,
=======
        "nameLocation": "232:12:30",
        "scope": 26179,
>>>>>>> optimisation
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 30
}